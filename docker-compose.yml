version: "3.8"

services:
  django_gunicorn:
    build:
      context: .
      dockerfile: ./Buchungssystem_Lastenkarle/Dockerfile_Django
    volumes:
      - ./Buchungssystem_Lastenkarle/:/usr/src/app/
    env_file:
      - envvarsdjango.env
    depends_on:
      db:
        condition: service_healthy


  nginx:
    image: nginx:1.24.0-bullseye
    volumes:
      - ./Buchungssystem_Lastenkarle/static:/static
      - ./Buchungssystem_Lastenkarle/media:/media
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

    ports:
      - "80:80"
    depends_on:
      - django_gunicorn

  frontend:
    build:
      context: ./frontend     # Point to the frontend directory
      dockerfile: Dockerfile  # Optional: Explicitly specify the Dockerfile if not named 'Dockerfile'
    ports:
      - "3000:3000"           # Map container port 3000 to host port 3000
    volumes:
      - ./frontend:/app       # Mount the frontend directory into the container
      - /app/node_modules     # Prevent overwriting node_modules inside the container
    stdin_open: true          # Optional: keep stdin open
    tty: true                 # Optional: allow interaction in the terminal

  db:
    container_name: pg_container
    image: postgres:15.3-bullseye
    restart: always
    env_file:
      - envvarsdb.env

    volumes:
      - ./postgress_data:/var/lib/postgresql/data

    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "Caro", "-d", "test_db" ]
      interval: 10s
      timeout: 10s
      retries: 15


  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    env_file:
      - envvarsdb.env
    depends_on:
      - db
    ports:
      - "40002:80"
