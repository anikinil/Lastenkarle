version: "3.8"

services:
  django_gunicorn:
    #     restart: always
    image: nginx:1.24.0-bullseye

    volumes:
      - ./Buchungssystem_Lastenkarle/:/usr/src/app/
    env_file:
      - envvarsdjango.env
    depends_on:
      db:
        condition: service_healthy


  nginx:
    image: nginx:1.24.0-bullseye
    volumes:
      - ./Buchungssystem_Lastenkarle/static:/static
      - ./Buchungssystem_Lastenkarle/media:/media
      - ./nginx/default-production.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt
      - /tmp/acme_challenge:/tmp/acme_challenge
      - ./frontend:/frontend
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - django_gunicorn

  db:
    container_name: pg_container
    image: postgres:15.3-bullseye
    restart: always
    env_file:
      - envvarsdb.env

    volumes:
      - ./postgress_data:/var/lib/postgresql/data

    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "Caro", "-d", "test_db" ]
      interval: 10s
      timeout: 10s
      retries: 15


  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    env_file:
      - envvarsdb.env
    depends_on:
      - db
    ports:
      - "40001:80"
