{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/storeDisplay/pages/StorePage.js\";\n//Page of a singular store\n//TODO: Add Liste of bikes belonging to store\n//Consists of Name, Picture, Description and Information\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport PictureAndDescriptionField from '../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField';\nimport { useParams } from 'react-router-dom';\nimport SingleLineTextField from '../../../components/display/SingleLineTextField';\n\n// TODO implement fetching\nlet stores = [{\n  id: 1,\n  name: 'Store 1',\n  image: require('../../../assets/images/store1.jpg'),\n  description: 'This is a description of Store 1',\n  address: 'Musterstraße 123, 76137 Karlsruhe'\n}, {\n  id: 2,\n  name: 'Store 2',\n  image: require('../../../assets/images/store1.jpg').default,\n  description: 'This is a description of Store 2',\n  address: 'Musterstraße 123, 76137 Karlsruhe'\n}, {\n  id: 3,\n  name: 'Store 3',\n  image: null,\n  description: 'This is a description of Store 3',\n  address: 'Musterstraße 123, 76137 Karlsruhe'\n}];\nconst StorePage = () => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    id\n  } = useParams();\n  const store = stores.find(s => s.id === parseInt(id));\n  const fetchStore = () => {};\n  useEffect(() => {\n    fetchStore();\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, store.name), /*#__PURE__*/React.createElement(PictureAndDescriptionField, {\n    editable: false,\n    object: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SingleLineTextField, {\n    editable: false,\n    value: store.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }));\n};\nexport default StorePage;","map":{"version":3,"names":["React","useEffect","useState","useTranslation","PictureAndDescriptionField","useParams","SingleLineTextField","stores","id","name","image","require","description","address","default","StorePage","t","store","find","s","parseInt","fetchStore","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","editable","object","value"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/storeDisplay/pages/StorePage.js"],"sourcesContent":["//Page of a singular store\n//TODO: Add Liste of bikes belonging to store\n//Consists of Name, Picture, Description and Information\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport PictureAndDescriptionField from '../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField';\nimport { useParams } from 'react-router-dom';\nimport SingleLineTextField from '../../../components/display/SingleLineTextField';\n\n// TODO implement fetching\nlet stores = [\n    {\n        id: 1,\n        name: 'Store 1',\n        image: require('../../../assets/images/store1.jpg'),\n        description: 'This is a description of Store 1',\n        address: 'Musterstraße 123, 76137 Karlsruhe'\n    },\n    {\n        id: 2,\n        name: 'Store 2',\n        image: require('../../../assets/images/store1.jpg').default,\n        description: 'This is a description of Store 2',\n        address: 'Musterstraße 123, 76137 Karlsruhe'\n    },\n    {\n        id: 3,\n        name: 'Store 3',\n        image: null,\n        description: 'This is a description of Store 3',\n        address: 'Musterstraße 123, 76137 Karlsruhe'\n    }\n]\n\nconst StorePage = () => {\n\n    const { t } = useTranslation();\n\n    const { id } = useParams();\n    const store = stores.find(s => s.id === parseInt(id));\n\n    const fetchStore = () => {\n\n    }\n\n    useEffect(() => {\n        fetchStore();\n    });\n\n    return (\n        <>\n            <h1>{store.name}</h1>\n\n            <PictureAndDescriptionField editable={false} object={store}/>\n            <SingleLineTextField editable={false} value={store.address}/>\n\n            {/* TODO add enrollment component for managers to enroll other managers to this particular store */}\n        </>\n    );\n};\n\nexport default StorePage;"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,eAAe;AAE9C,OAAOC,0BAA0B,MAAM,mFAAmF;AAC1H,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,mBAAmB,MAAM,iDAAiD;;AAEjF;AACA,IAAIC,MAAM,GAAG,CACT;EACIC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,SAAS;EACfC,KAAK,EAAEC,OAAO,CAAC,mCAAmC,CAAC;EACnDC,WAAW,EAAE,kCAAkC;EAC/CC,OAAO,EAAE;AACb,CAAC,EACD;EACIL,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,SAAS;EACfC,KAAK,EAAEC,OAAO,CAAC,mCAAmC,CAAC,CAACG,OAAO;EAC3DF,WAAW,EAAE,kCAAkC;EAC/CC,OAAO,EAAE;AACb,CAAC,EACD;EACIL,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,SAAS;EACfC,KAAK,EAAE,IAAI;EACXE,WAAW,EAAE,kCAAkC;EAC/CC,OAAO,EAAE;AACb,CAAC,CACJ;AAED,MAAME,SAAS,GAAGA,CAAA,KAAM;EAEpB,MAAM;IAAEC;EAAE,CAAC,GAAGb,cAAc,CAAC,CAAC;EAE9B,MAAM;IAAEK;EAAG,CAAC,GAAGH,SAAS,CAAC,CAAC;EAC1B,MAAMY,KAAK,GAAGV,MAAM,CAACW,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACX,EAAE,KAAKY,QAAQ,CAACZ,EAAE,CAAC,CAAC;EAErD,MAAMa,UAAU,GAAGA,CAAA,KAAM,CAEzB,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACZoB,UAAU,CAAC,CAAC;EAChB,CAAC,CAAC;EAEF,oBACIrB,KAAA,CAAAsB,aAAA,CAAAtB,KAAA,CAAAuB,QAAA,qBACIvB,KAAA,CAAAsB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKZ,KAAK,CAACR,IAAS,CAAC,eAErBT,KAAA,CAAAsB,aAAA,CAAClB,0BAA0B;IAAC0B,QAAQ,EAAE,KAAM;IAACC,MAAM,EAAEd,KAAM;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAAC,eAC7D7B,KAAA,CAAAsB,aAAA,CAAChB,mBAAmB;IAACwB,QAAQ,EAAE,KAAM;IAACE,KAAK,EAAEf,KAAK,CAACJ,OAAQ;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAG9D,CAAC;AAEX,CAAC;AAED,eAAed,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}