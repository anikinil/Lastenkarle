{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/booking/pages/RegionalBooking.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\nimport Map from '../components/Map';\nimport FilterForAvailabilities from '../components/FilterForAvailabilities';\nimport AvailabilityCalendar from '../components/calendar/AvailabilityCalendar';\nimport BikeList from '../../allBikesList/components/BikeList';\nimport { ALL_BIKES } from '../../../constants/URIs/BookingURIs';\nimport { ERR_FETCHING_BIKES } from '../../../constants/ErrorMessages';\n//Standard page for a specific region\n//TODO: Add Map of region with station markers\n//TODO: Add Filter Bar for Availabilities\n//TODO: Add Calendar overview of reservations sorted by bike\n\nconst RegionalBooking = () => {\n  const {\n    t\n  } = useTranslation();\n  const regionName = useParams().region;\n  const [allBiikes, setAllBikes] = useState([]);\n  const [bikesInRegion, setBikesInRegion] = useState([]);\n  const fetchAllBikes = async () => {\n    try {\n      const response = await fetch(ALL_BIKES);\n      const data = await response.json();\n      setAllBikes(data);\n    } catch (error) {\n      console.error(ERR_FETCHING_BIKES, error);\n    }\n  };\n  const filterBikesByRegion = () => {\n    setBikesInRegion(allBiikes.filter(bike => bike.region === regionName));\n  };\n  useEffect(() => {\n    fetchAllBikes();\n    filterBikesByRegion();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, t('rent_in') + ': ' + regionName), /*#__PURE__*/React.createElement(BikeList, {\n    bikes: bikesInRegion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }));\n};\nexport default RegionalBooking;","map":{"version":3,"names":["React","useEffect","useState","useTranslation","useParams","Map","FilterForAvailabilities","AvailabilityCalendar","BikeList","ALL_BIKES","ERR_FETCHING_BIKES","RegionalBooking","t","regionName","region","allBiikes","setAllBikes","bikesInRegion","setBikesInRegion","fetchAllBikes","response","fetch","data","json","error","console","filterBikesByRegion","filter","bike","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","bikes"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/booking/pages/RegionalBooking.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\n\nimport Map from '../components/Map';\nimport FilterForAvailabilities from '../components/FilterForAvailabilities';\nimport AvailabilityCalendar from '../components/calendar/AvailabilityCalendar';\nimport BikeList from '../../allBikesList/components/BikeList';\nimport { ALL_BIKES } from '../../../constants/URIs/BookingURIs';\nimport { ERR_FETCHING_BIKES } from '../../../constants/ErrorMessages';\n//Standard page for a specific region\n//TODO: Add Map of region with station markers\n//TODO: Add Filter Bar for Availabilities\n//TODO: Add Calendar overview of reservations sorted by bike\n\nconst RegionalBooking = () => {\n\n    const { t } = useTranslation();\n\n    const regionName = useParams().region;\n\n    const [allBiikes, setAllBikes] = useState([]);\n    const [bikesInRegion, setBikesInRegion] = useState([]);\n\n    const fetchAllBikes = async () => {\n        try {\n            const response = await fetch(ALL_BIKES);\n            const data = await response.json();\n            setAllBikes(data);\n        } catch (error) {\n            console.error(ERR_FETCHING_BIKES, error);\n        }\n    };\n\n    const filterBikesByRegion = () => {\n        setBikesInRegion(allBiikes.filter(bike => bike.region === regionName));\n    }\n\n    useEffect(() => {\n        fetchAllBikes();\n        filterBikesByRegion();\n    }, []);\n\n    return (\n        <>\n            <h1>{t('rent_in') + ': ' + regionName}</h1>\n\n            {/* <Map /> */}\n            {/* <FilterForAvailabilities /> */}\n            {/* <AvailabilityCalendar /> */}\n            <BikeList bikes={bikesInRegion}/>\n        </>\n        \n    );\n};\n  \nexport default RegionalBooking;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,uBAAuB,MAAM,uCAAuC;AAC3E,OAAOC,oBAAoB,MAAM,6CAA6C;AAC9E,OAAOC,QAAQ,MAAM,wCAAwC;AAC7D,SAASC,SAAS,QAAQ,qCAAqC;AAC/D,SAASC,kBAAkB,QAAQ,kCAAkC;AACrE;AACA;AACA;AACA;;AAEA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAE1B,MAAM;IAAEC;EAAE,CAAC,GAAGT,cAAc,CAAC,CAAC;EAE9B,MAAMU,UAAU,GAAGT,SAAS,CAAC,CAAC,CAACU,MAAM;EAErC,MAAM,CAACC,SAAS,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMiB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACZ,SAAS,CAAC;MACvC,MAAMa,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCP,WAAW,CAACM,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACd,kBAAkB,EAAEc,KAAK,CAAC;IAC5C;EACJ,CAAC;EAED,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAC9BR,gBAAgB,CAACH,SAAS,CAACY,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACd,MAAM,KAAKD,UAAU,CAAC,CAAC;EAC1E,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACZkB,aAAa,CAAC,CAAC;IACfO,mBAAmB,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI1B,KAAA,CAAA6B,aAAA,CAAA7B,KAAA,CAAA8B,QAAA,qBACI9B,KAAA,CAAA6B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKxB,CAAC,CAAC,SAAS,CAAC,GAAG,IAAI,GAAGC,UAAe,CAAC,eAK3Cb,KAAA,CAAA6B,aAAA,CAACrB,QAAQ;IAAC6B,KAAK,EAAEpB,aAAc;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAClC,CAAC;AAGX,CAAC;AAED,eAAezB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}