{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/Login.js\";\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { LOGIN } from '../constants/URIs/UserURIs';\nimport { useNavigate } from 'react-router-dom';\nimport { HELMHOLTZ, HOME, REGISTER } from '../constants/URLs/Navigation';\nconst Login = () => {\n  // Translation hook\n  const {\n    t\n  } = useTranslation();\n\n  // Navigation hook\n  const navigate = useNavigate();\n\n  // State hooks for username and password\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Handle login button click\n  function handleLoginClick() {\n    postLogin();\n  }\n\n  // Post login request\n  const postLogin = () => {\n    let payload = {\n      username: username,\n      password: password\n    };\n\n    // Post login request\n    fetch(LOGIN, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    }).then(response => {\n      if (response === null || response === void 0 ? void 0 : response.ok) {\n        return response.json();\n      } else {\n        // If the request was not successful, throw an error\n        return response.json().then(errorData => {\n          throw new Error(errorData.message);\n        });\n      }\n    })\n    // Set the token and user role state variables\n    .then(data => {\n      setCookie('token', data.token);\n      // TODO account for different locations from which user can log in and navigate back to them\n      navigate(HOME);\n    }).catch(error => {\n      // Handle any network or other errors that occurred during the request\n      alert('Error making login request.' + error.message);\n    });\n  };\n\n  // Handle Helmholtz login button click\n  const handleHelmholtzLoginClick = () => {\n    window.location.replace(HELMHOLTZ);\n  };\n\n  // Handle register button click\n  const handleRegisterClick = () => {\n    navigate(REGISTER);\n  };\n\n  // Set a cookie with a specified label and value\n  const setCookie = (label, value) => {\n    var days = 1;\n    const expirationDate = new Date();\n    expirationDate.setDate(expirationDate.getDate() + days);\n    document.cookie = `${label}=${value}; expires=${expirationDate.toUTCString()}; path=/`;\n  };\n\n  // Prevent user from switching to a new line by hitting [Enter]\n  // const handleFieldKeyDown = (event) => {\n  //     if (event.key === 'Enter') {\n  //         event.preventDefault();\n  //     }\n  // };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, t('login')), /*#__PURE__*/React.createElement(\"textarea\", {\n    title: t('enter_username'),\n    className: \"username\",\n    rows: \"1\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    onKeyDown: handleFieldKeyDown,\n    placeholder: t('enter_username'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    title: t('enter_password'),\n    className: \"password\",\n    rows: \"1\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    onKeyDown: handleFieldKeyDown,\n    placeholder: t('enter_password'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button accent\",\n    onClick: handleLoginClick,\n    onKeyDown: e => {\n      if (e.key === \"Enter\") handleLoginClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, t('login')), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button regular\",\n    onClick: handleHelmholtzLoginClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, t('helmholtz_login')), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button regular\",\n    onClick: handleRegisterClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, t('register_instead'))));\n};\nexport default Login;","map":{"version":3,"names":["React","useState","useTranslation","LOGIN","useNavigate","HELMHOLTZ","HOME","REGISTER","Login","t","navigate","username","setUsername","password","setPassword","handleLoginClick","postLogin","payload","fetch","method","headers","body","JSON","stringify","then","response","ok","json","errorData","Error","message","data","setCookie","token","catch","error","alert","handleHelmholtzLoginClick","window","location","replace","handleRegisterClick","label","value","days","expirationDate","Date","setDate","getDate","document","cookie","toUTCString","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","className","rows","onChange","e","target","onKeyDown","handleFieldKeyDown","placeholder","type","onClick","key"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { LOGIN } from '../constants/URIs/UserURIs';\nimport { useNavigate } from 'react-router-dom';\nimport { HELMHOLTZ, HOME, REGISTER } from '../constants/URLs/Navigation';\n\nconst Login = () => {\n    // Translation hook\n    const { t } = useTranslation();\n\n    // Navigation hook\n    const navigate = useNavigate();\n\n    // State hooks for username and password\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    // Handle login button click\n    function handleLoginClick() {\n        postLogin();\n    }\n\n    // Post login request\n    const postLogin = () => {\n        let payload = {\n            username: username,\n            password: password\n        };\n\n        // Post login request\n        fetch(LOGIN, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(payload)\n        })\n            .then(response => {\n                if (response?.ok) {\n                    return response.json();\n                } else {\n                    // If the request was not successful, throw an error\n                    return response.json().then(errorData => {\n                        throw new Error(errorData.message);\n                    });\n                }\n            })\n            // Set the token and user role state variables\n            .then(data => {\n                setCookie('token', data.token);\n                // TODO account for different locations from which user can log in and navigate back to them\n                navigate(HOME);\n            })\n            .catch(error => {\n                // Handle any network or other errors that occurred during the request\n                alert('Error making login request.' + error.message);\n            });\n    }\n\n    // Handle Helmholtz login button click\n    const handleHelmholtzLoginClick = () => {\n        window.location.replace(HELMHOLTZ);\n    }\n\n    // Handle register button click\n    const handleRegisterClick = () => {\n        navigate(REGISTER);\n    }\n\n    // Set a cookie with a specified label and value\n    const setCookie = (label, value) => {\n        var days = 1;\n        const expirationDate = new Date();\n        expirationDate.setDate(expirationDate.getDate() + days);\n        document.cookie = `${label}=${value}; expires=${expirationDate.toUTCString()}; path=/`;\n    };\n\n    // Prevent user from switching to a new line by hitting [Enter]\n        // const handleFieldKeyDown = (event) => {\n        //     if (event.key === 'Enter') {\n        //         event.preventDefault();\n        //     }\n        // };\n\n    return (\n        <>\n            {/* Login header */}\n            <h1>{t('login')}</h1>\n\n            {/* Username input field */}\n            <textarea\n                title={t('enter_username')}\n                className='username'\n                rows='1'\n                value={username}\n                onChange={e => setUsername(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_username')}\n            >\n            </textarea>\n\n            {/* Password input field */}\n            <textarea\n                title={t('enter_password')}\n                className='password'\n                rows='1'\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_password')}\n            >\n            </textarea>\n\n            {/* Button container */}\n            <div className='button-container'>\n                <button type='button' className='button accent' onClick={handleLoginClick}\n                    onKeyDown={(e) => { if (e.key === \"Enter\") handleLoginClick() }}\n                >{t('login')}</button>\n                <button type='button' className='button regular' onClick={handleHelmholtzLoginClick}>{t('helmholtz_login')}</button>\n                <button type='button' className='button regular' onClick={handleRegisterClick}>{t('register_instead')}</button>\n            </div>\n        </>\n    );\n};\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}