{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/Logout.js\";\nimport React, { useState, startTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { LOGOUT } from '../constants/URIs/UserURIs';\nimport { useNavigate } from 'react-router-dom';\nimport { deleteCookie, getCookie } from '../services/Cookies';\nimport { LOGIN } from '../constants/URLs/Navigation';\nimport { ERR_POSTING_LOGOUT_REQUEST } from '../constants/ErrorMessages';\nconst Logout = () => {\n  const {\n    t\n  } = useTranslation();\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const token = getCookie('token');\n\n  // logout call\n  logout();\n\n  // post logout request\n  function logout() {\n    // Send the POST request to the server endpoint\n    fetch(LOGOUT, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Token ${token}`\n      }\n    }).then(response => {\n      if (response.ok) {\n        deleteCookie('token');\n        // TODO check if startTransition() needed\n        startTransition(() => {\n          navigate(LOGIN);\n        });\n      } else {\n        // If the request was not successful throw an error\n        return response.json().then(data => {\n          throw new Error(data.detail);\n        });\n      }\n    }).catch(error => {\n      // catch the error and print it to the console\n      console.log(ERR_POSTING_LOGOUT_REQUEST + ': ' + error);\n    });\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, error ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, t('logout_failed') + ': ' + (error === null || error === void 0 ? void 0 : error.message)) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, t('logging_out')));\n};\nexport default Logout;","map":{"version":3,"names":["React","useState","startTransition","useTranslation","LOGOUT","useNavigate","deleteCookie","getCookie","LOGIN","ERR_POSTING_LOGOUT_REQUEST","Logout","t","error","setError","navigate","token","logout","fetch","method","headers","then","response","ok","json","data","Error","detail","catch","console","log","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","message"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/Logout.js"],"sourcesContent":["import React, { useState, startTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { LOGOUT } from '../constants/URIs/UserURIs';\nimport { useNavigate } from 'react-router-dom';\nimport { deleteCookie, getCookie } from '../services/Cookies';\nimport { LOGIN } from '../constants/URLs/Navigation';\nimport { ERR_POSTING_LOGOUT_REQUEST } from '../constants/ErrorMessages';\n\nconst Logout = () => {\n\n    const { t } = useTranslation();\n\n    const [error, setError] = useState(null);\n\n    const navigate = useNavigate();\n\n    const token = getCookie('token')\n\n    // logout call\n    logout();\n\n    // post logout request\n    function logout() {\n        // Send the POST request to the server endpoint\n        fetch(LOGOUT, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Token ${token}`\n            }\n        })\n            .then(response => {\n                if (response.ok) {\n                    deleteCookie('token');\n                    // TODO check if startTransition() needed\n                    startTransition(() => {\n                        navigate(LOGIN);\n                    });\n                } else {\n                    // If the request was not successful throw an error\n                    return response.json().then(data => {\n                        throw new Error(data.detail);\n                    });\n                }\n            })\n            .catch(error => {\n                // catch the error and print it to the console\n                console.log(ERR_POSTING_LOGOUT_REQUEST + ': ' + error);\n            });\n    }\n\n    return (\n        <>\n            {error ?\n                <p>{t('logout_failed') + ': ' + error?.message}</p>\n                :\n                <p>{t('logging_out')}</p>\n            }\n        </>\n    );\n};\n\nexport default Logout;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,eAAe,QAAQ,OAAO;AACxD,SAASC,cAAc,QAAQ,eAAe;AAE9C,SAASC,MAAM,QAAQ,4BAA4B;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,EAAEC,SAAS,QAAQ,qBAAqB;AAC7D,SAASC,KAAK,QAAQ,8BAA8B;AACpD,SAASC,0BAA0B,QAAQ,4BAA4B;AAEvE,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAEjB,MAAM;IAAEC;EAAE,CAAC,GAAGR,cAAc,CAAC,CAAC;EAE9B,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,KAAK,GAAGR,SAAS,CAAC,OAAO,CAAC;;EAEhC;EACAS,MAAM,CAAC,CAAC;;EAER;EACA,SAASA,MAAMA,CAAA,EAAG;IACd;IACAC,KAAK,CAACb,MAAM,EAAE;MACVc,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,eAAe,EAAE,SAASJ,KAAK;MACnC;IACJ,CAAC,CAAC,CACGK,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACbhB,YAAY,CAAC,OAAO,CAAC;QACrB;QACAJ,eAAe,CAAC,MAAM;UAClBY,QAAQ,CAACN,KAAK,CAAC;QACnB,CAAC,CAAC;MACN,CAAC,MAAM;QACH;QACA,OAAOa,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAACI,IAAI,IAAI;UAChC,MAAM,IAAIC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC;QAChC,CAAC,CAAC;MACN;IACJ,CAAC,CAAC,CACDC,KAAK,CAACf,KAAK,IAAI;MACZ;MACAgB,OAAO,CAACC,GAAG,CAACpB,0BAA0B,GAAG,IAAI,GAAGG,KAAK,CAAC;IAC1D,CAAC,CAAC;EACV;EAEA,oBACIZ,KAAA,CAAA8B,aAAA,CAAA9B,KAAA,CAAA+B,QAAA,QACKnB,KAAK,gBACFZ,KAAA,CAAA8B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI1B,CAAC,CAAC,eAAe,CAAC,GAAG,IAAI,IAAGC,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAE0B,OAAO,CAAI,CAAC,gBAEnDtC,KAAA,CAAA8B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI1B,CAAC,CAAC,aAAa,CAAK,CAE9B,CAAC;AAEX,CAAC;AAED,eAAeD,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}