{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/allStoresPage/pages/AllStoresPage.js\";\n// Page of a singular store\n// TODO: Add List of bikes belonging to store\n// Consists of Name, Picture, Description and Information\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport PictureAndDescriptionField from '../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField';\nimport { useParams } from 'react-router-dom';\nimport SingleLineTextField from '../../../components/display/SingleLineTextField';\nimport { STORE_NAME, STORE_PAGE_BY_STORE_NAME } from '../../../constants/URIs/ManagerURI';\nimport { ERR_FETCHING_STORE } from '../../../constants/ErrorMessages';\nimport { getCookie } from '../../../services/Cookies';\nimport StoreList from '../../storeList/components/StoreList';\nimport { ALL_STORES } from '../../../constants/URIs/AdminURIs';\nconst AllStoresPage = () => {\n  const {\n    t\n  } = useTranslation(); // Hook for translation\n\n  const [stores, setStores] = useState([]);\n  const fetchAllStores = async () => {\n    const response = await fetch(ALL_STORES, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    });\n    const data = await response.json();\n    setStores(data);\n  };\n  useEffect(() => {\n    fetchAllStores();\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, t('stores')), /*#__PURE__*/React.createElement(StoreList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }));\n};\nexport default AllStoresPage;","map":{"version":3,"names":["React","useEffect","useState","useTranslation","PictureAndDescriptionField","useParams","SingleLineTextField","STORE_NAME","STORE_PAGE_BY_STORE_NAME","ERR_FETCHING_STORE","getCookie","StoreList","ALL_STORES","AllStoresPage","t","stores","setStores","fetchAllStores","response","fetch","headers","token","data","json","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/allStoresPage/pages/AllStoresPage.js"],"sourcesContent":["// Page of a singular store\n// TODO: Add List of bikes belonging to store\n// Consists of Name, Picture, Description and Information\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport PictureAndDescriptionField from '../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField';\nimport { useParams } from 'react-router-dom';\nimport SingleLineTextField from '../../../components/display/SingleLineTextField';\nimport { STORE_NAME, STORE_PAGE_BY_STORE_NAME } from '../../../constants/URIs/ManagerURI';\nimport { ERR_FETCHING_STORE } from '../../../constants/ErrorMessages';\nimport { getCookie } from '../../../services/Cookies';\nimport StoreList from '../../storeList/components/StoreList';\nimport { ALL_STORES } from '../../../constants/URIs/AdminURIs';\n\nconst AllStoresPage = () => {\n    const { t } = useTranslation(); // Hook for translation\n\n    const [stores, setStores] = useState([])\n\n    const fetchAllStores = async () => {\n        const response = await fetch(\n            ALL_STORES,\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                }\n            }\n        );\n        const data = await response.json();\n        setStores(data);\n    };\n\n    useEffect(() => {\n        fetchAllStores();\n    })\n\n    return (\n        <>\n            {/* Page title */}\n            <h1>{t('stores')}</h1>\n\n            {/* Component displaying the list of stores */}\n            <StoreList />\n        </>\n    );\n};\n\nexport default AllStoresPage;"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,eAAe;AAE9C,OAAOC,0BAA0B,MAAM,mFAAmF;AAC1H,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,mBAAmB,MAAM,iDAAiD;AACjF,SAASC,UAAU,EAAEC,wBAAwB,QAAQ,oCAAoC;AACzF,SAASC,kBAAkB,QAAQ,kCAAkC;AACrE,SAASC,SAAS,QAAQ,2BAA2B;AACrD,OAAOC,SAAS,MAAM,sCAAsC;AAC5D,SAASC,UAAU,QAAQ,mCAAmC;AAE9D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACxB,MAAM;IAAEC;EAAE,CAAC,GAAGX,cAAc,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMe,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxBP,UAAU,EACV;MACIQ,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,SAASC,KAAK;MACnC;IACJ,CACJ,CAAC;IACD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClCP,SAAS,CAACM,IAAI,CAAC;EACnB,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACZgB,cAAc,CAAC,CAAC;EACpB,CAAC,CAAC;EAEF,oBACIjB,KAAA,CAAAwB,aAAA,CAAAxB,KAAA,CAAAyB,QAAA,qBAEIzB,KAAA,CAAAwB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKjB,CAAC,CAAC,QAAQ,CAAM,CAAC,eAGtBd,KAAA,CAAAwB,aAAA,CAACb,SAAS;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACd,CAAC;AAEX,CAAC;AAED,eAAelB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}