{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/storeConfig/components/StoreConfigManager.js\";\nimport React, { useEffect } from \"react\";\n\n// Importing components for display and configuration\nimport PictureAndDescriptionField from \"../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField\";\n\n// Importing hooks for routing and translation\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from 'react-router-dom';\n\n// Importing a text field component\nimport SingleLineTextField from \"../../../components/display/SingleLineTextField\";\nimport { BIKES_OF_STORE, STORE_PAGE_BY_STORE_NAME } from \"../../../constants/URIs/ManagerURIs\";\nimport { ERR_FETCHING_STORE, ERR_UPDATING_STORE } from \"../../../constants/ErrorMessages\";\nimport { useState } from \"react\";\nimport { SUCCESS_UPDATING_STORE } from \"../../../constants/SuccessMessages\";\nimport { BIKE_REGISTRATION, STORE_DISPLAY } from \"../../../constants/URLs/Navigation\";\nimport { STORE_NAME } from \"../../../constants/URLs/General\";\nimport { getCookie } from \"../../../services/Cookies\";\nimport StoreOpeningTimesConfig from \"../../../components/openingTimesConfig/StoreOpeningTimesConfig\";\nimport BikeList from \"../../../components/lists/bikeList/BikeList\";\n\n// TODO make sure, storeName is passed to this component as parameter\n\n// page for the configuration of an existing store\nconst StoreConfigManager = () => {\n  const [newAddress, setNewAddress] = useState('');\n  const {\n    t\n  } = useTranslation();\n  // Hook for navigation\n  const navigate = useNavigate();\n\n  // Extracting store name from URL parameters\n  const storeName = useParams().store;\n\n  // State to hold store data\n  const [store, setStore] = useState();\n  const [bikes, setBikes] = useState([]);\n  const token = getCookie('token');\n\n  // fetches store data\n  const fetchStore = () => {\n    fetch(STORE_PAGE_BY_STORE_NAME.replace(STORE_NAME, storeName), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      setStore(data);\n      fetchBikes();\n    }).catch(error => {\n      console.error(ERR_FETCHING_STORE, error);\n    });\n  };\n  useEffect(() => {\n    fetchStore();\n  }, []);\n  const fetchBikes = async () => {\n    const response = await fetch(BIKES_OF_STORE.replace(STORE_NAME, storeName), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    });\n    const data = await response.json();\n    setBikes(data);\n  };\n\n  // Function to post changes to the store\n  const postChanges = () => {\n    let payload = {\n      address: newAddress\n    };\n    fetch(STORE_PAGE_BY_STORE_NAME.replace(STORE_NAME, storeName), {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(payload)\n    }).then(response => response.json()).then(data => {\n      console.log(SUCCESS_UPDATING_STORE, data);\n    }).catch(error => {\n      console.error(ERR_UPDATING_STORE, error);\n    });\n  };\n\n  // Handler for address change\n  const handleAddressChange = value => {\n    setNewAddress(value);\n  };\n  const handleCancelClick = () => {\n    navigate(-1);\n  };\n  const handleAddBikeClick = () => {\n    navigate(BIKE_REGISTRATION.replace(STORE_NAME, storeName));\n  };\n\n  // Handler for submit button click\n  const handleSubmitClick = () => {\n    postChanges();\n    navigate(STORE_DISPLAY.replace(STORE_NAME, storeName));\n  };\n  return (\n    /*#__PURE__*/\n    // not sure why this is not working withouth the condition\n    React.createElement(React.Fragment, null, \" \", store ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, t('manager_view'), \" \", store.name), /*#__PURE__*/React.createElement(PictureAndDescriptionField, {\n      image: store.image,\n      description: store.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(SingleLineTextField, {\n      editable: true,\n      value: store.address,\n      title: 'address',\n      onChange: handleAddressChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(StoreOpeningTimesConfig, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BikeList, {\n      bikes: bikes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"button regulal\",\n      onClick: handleCancelClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, t('cancel')), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"button regular\",\n      onClick: handleAddBikeClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, t('add_bike_to_store')), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"button accent\",\n      onClick: handleSubmitClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, t('submit_changes')))) : null)\n  );\n};\nexport default StoreConfigManager;","map":{"version":3,"names":["React","useEffect","PictureAndDescriptionField","useParams","useTranslation","useNavigate","SingleLineTextField","BIKES_OF_STORE","STORE_PAGE_BY_STORE_NAME","ERR_FETCHING_STORE","ERR_UPDATING_STORE","useState","SUCCESS_UPDATING_STORE","BIKE_REGISTRATION","STORE_DISPLAY","STORE_NAME","getCookie","StoreOpeningTimesConfig","BikeList","StoreConfigManager","newAddress","setNewAddress","t","navigate","storeName","store","setStore","bikes","setBikes","token","fetchStore","fetch","replace","headers","then","response","json","data","fetchBikes","catch","error","console","postChanges","payload","address","method","body","JSON","stringify","log","handleAddressChange","value","handleCancelClick","handleAddBikeClick","handleSubmitClick","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","name","image","description","editable","title","onChange","className","type","onClick"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/storeConfig/components/StoreConfigManager.js"],"sourcesContent":["\nimport React, { useEffect } from \"react\";\n\n// Importing components for display and configuration\nimport PictureAndDescriptionField from \"../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField\";\n\n// Importing hooks for routing and translation\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from 'react-router-dom';\n\n// Importing a text field component\nimport SingleLineTextField from \"../../../components/display/SingleLineTextField\";\nimport { BIKES_OF_STORE, STORE_PAGE_BY_STORE_NAME } from \"../../../constants/URIs/ManagerURIs\";\nimport { ERR_FETCHING_STORE, ERR_UPDATING_STORE } from \"../../../constants/ErrorMessages\";\nimport { useState } from \"react\";\nimport { SUCCESS_UPDATING_STORE } from \"../../../constants/SuccessMessages\";\nimport { BIKE_REGISTRATION, STORE_DISPLAY } from \"../../../constants/URLs/Navigation\";\nimport { STORE_NAME } from \"../../../constants/URLs/General\";\nimport { getCookie } from \"../../../services/Cookies\";\nimport StoreOpeningTimesConfig from \"../../../components/openingTimesConfig/StoreOpeningTimesConfig\";\nimport BikeList from \"../../../components/lists/bikeList/BikeList\";\n\n// TODO make sure, storeName is passed to this component as parameter\n\n// page for the configuration of an existing store\nconst StoreConfigManager = () => {\n\n    const [newAddress, setNewAddress] = useState('');\n    const { t } = useTranslation();\n    // Hook for navigation\n    const navigate = useNavigate();\n\n    // Extracting store name from URL parameters\n    const storeName = useParams().store;\n\n    // State to hold store data\n    const [store, setStore] = useState();\n    const [bikes, setBikes] = useState([]);\n\n    const token = getCookie('token');\n\n    // fetches store data\n    const fetchStore = () => {\n        fetch(STORE_PAGE_BY_STORE_NAME.replace(STORE_NAME, storeName), {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`\n            }\n        })\n            .then(response => response.json())\n            .then(data => {\n                setStore(data);\n                fetchBikes();\n            })\n            .catch(error => {\n                console.error(ERR_FETCHING_STORE, error);\n            });\n    }\n\n    useEffect(() => {\n        fetchStore();\n    }, []);\n\n    const fetchBikes = async () => {\n        const response = await fetch(BIKES_OF_STORE.replace(STORE_NAME, storeName),\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`\n                }\n            }\n        );\n        const data = await response.json();\n        setBikes(data);\n    };\n\n\n    // Function to post changes to the store\n    const postChanges = () => {\n        let payload = {\n            address: newAddress\n        }\n        fetch(STORE_PAGE_BY_STORE_NAME.replace(STORE_NAME, storeName), {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`\n            },\n            body: JSON.stringify(payload)\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log(SUCCESS_UPDATING_STORE, data);\n            })\n            .catch(error => {\n                console.error(ERR_UPDATING_STORE, error);\n            });\n    }\n\n    // Handler for address change\n    const handleAddressChange = (value) => {\n        setNewAddress(value);\n    }\n\n    const handleCancelClick = () => {\n        navigate(-1);\n    }\n\n    const handleAddBikeClick = () => {\n        navigate(BIKE_REGISTRATION.replace(STORE_NAME, storeName));\n    }\n\n    // Handler for submit button click\n    const handleSubmitClick = () => {\n        postChanges();\n        navigate(STORE_DISPLAY.replace(STORE_NAME, storeName));\n    }\n\n    return (\n        // not sure why this is not working withouth the condition\n        <> {store ?\n            <>\n                <h1>{t('manager_view')} {store.name}</h1>\n\n                {/* Displaying store picture and description */}\n                <PictureAndDescriptionField\n                    image={store.image}\n                    description={store.description}\n                />\n                {/* Single line text field for store address */}\n                <SingleLineTextField editable={true} value={store.address} title={'address'} onChange={handleAddressChange} />\n\n                {/* Configuring store opening times */}\n                <StoreOpeningTimesConfig />\n\n                {/* Displaying list of bikes of the store */}\n                <BikeList bikes={bikes} />\n\n                <div className='button-container'>\n                    <button type='button' className='button regulal' onClick={handleCancelClick}>{t('cancel')}</button>\n                    <button type='button' className='button regular' onClick={handleAddBikeClick}>{t('add_bike_to_store')}</button>\n                    <button type='button' className='button accent' onClick={handleSubmitClick}>{t('submit_changes')}</button>\n                </div>\n            </>\n            : null}\n        </>\n    );\n};\n\nexport default StoreConfigManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}