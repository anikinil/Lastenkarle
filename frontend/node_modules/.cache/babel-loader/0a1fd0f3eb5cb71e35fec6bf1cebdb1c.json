{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/components/navbar/Navbar.js\";\nimport React, { useEffect, useState } from 'react';\nimport MenuItems from './MenuItems';\nimport './Navbar.css';\nimport logo from '../../assets/images/logo.png';\nimport { USER_DATA } from '../../constants/URIs/UserURIs';\nimport { getCookie } from '../../services/Cookies';\nimport { ERR_FETCHING_USER_FLAGS } from '../../constants/ErrorMessages';\nimport { useLocation } from 'react-router-dom';\nconst Navbar = () => {\n  // TODO only update when necessairy\n\n  // gets the current location (Router) to update the navbar after cahnge of user roles\n  const location = useLocation();\n  const token = getCookie('token');\n\n  // default role is visitor (not logged in)\n  const [userRoles, setUserRoles] = useState([Roles.VISITOR]);\n  const [filteredMenuItems, setFilteredMenuItems] = useState([]);\n\n  // TODO find appropriate place for this\n  const Roles = Object.freeze({\n    CUSTOMER: 'Customer',\n    MANAGER: 'Manager',\n    ADMINISTRATOR: 'Administrator',\n    VISITOR: 'Visitor'\n  });\n  const storesAsItems = stores => {};\n\n  // TODO make each title a translatoin constant\n  // TODO use URL constants for each url\n  const menuItems = storesAsItems => {\n    stores.map(s => ({\n      title: s.name,\n      url: `/store/${s.id}`\n    }));\n    return [{\n      title: 'Booking',\n      url: '/booking',\n      roles: [Roles.CUSTOMER, Roles.MANAGER, Roles.ADMINISTRATOR, Roles.VISITOR],\n      submenu: [{\n        title: 'Karlsruhe',\n        url: REGIONAL_BOOKING.replace(REGION_NAME, 'karlsruhe')\n      }, {\n        title: 'Ettlingen',\n        url: REGIONAL_BOOKING.replace(REGION_NAME, 'ettlingen')\n      }, {\n        title: 'Bruchsaal',\n        url: REGIONAL_BOOKING.replace(REGION_NAME, 'bruchsaal')\n      }, {\n        title: 'Malsch',\n        url: REGIONAL_BOOKING.replace(REGION_NAME, 'malsch')\n      }]\n    }, {\n      title: 'Store management',\n      url: '/stores',\n      roles: [Roles.MANAGER, Roles.ADMINISTRATOR],\n      submenu: storesAsItems\n    }, {\n      title: 'Admin activities',\n      roles: [Roles.ADMINISTRATOR],\n      submenu: [{\n        title: 'Bookings',\n        url: '/bookings'\n      }, {\n        title: 'Users',\n        url: '/users'\n      }, {\n        title: 'Stores',\n        url: '/stores'\n      }, {\n        title: 'Bikes',\n        url: '/bikes'\n      }, {\n        title: 'Enrollment',\n        url: '/enrollment'\n      }]\n    }, {\n      title: /*#__PURE__*/React.createElement(FaUser, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 24\n        }\n      }),\n      url: '/my-bookings',\n      roles: [Roles.CUSTOMER, Roles.MANAGER, Roles.ADMINISTRATOR],\n      submenu: [{\n        title: 'Logout',\n        url: LOGOUT\n      }, {\n        title: 'Delete account',\n        url: ACCOUNT_DELETION\n      }]\n    }, {\n      title: /*#__PURE__*/React.createElement(FaUser, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 24\n        }\n      }),\n      url: null,\n      roles: [Roles.VISITOR],\n      submenu: [{\n        title: 'Login',\n        url: LOGIN\n      }, {\n        title: 'Register',\n        url: REGISTER\n      }]\n    }];\n  };\n  const fetchUserRoles = () => {\n    if (token !== 'undefined' && token !== null) {\n      fetch(USER_DATA, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`\n        }\n      }).then(response => response.json()).then(data => {\n        // get the user flags from the response\n        const flags = data.user_flags.map(element => element.flag);\n        // get the store names from the flags\n        const stores = flags.filter(role => role.includes('Store: ')).map(role => role.replace('Store: ', ''));\n        // get the roles from the flags\n        const roles = flags.filter(role => !role.includes('Store: '));\n        // add the manager role if the user has stores\n        if (stores.length > 0) roles.push(Roles.MANAGER);\n        setUserRoles(roles);\n      }).catch(error => {\n        console.error(ERR_FETCHING_USER_FLAGS, error);\n      });\n    } else {\n      setUserRoles([Roles.VISITOR]);\n    }\n  };\n\n  // fetch user roles on first render, if token is present (user is logged in)\n  useEffect(() => {\n    fetchUserRoles();\n  }, [location]);\n  useEffect(() => {\n    let filteredItems = menuItems.filter(item => userRoles.some(role => item.roles.includes(role)));\n    setFilteredMenuItems(filteredItems);\n  }, [userRoles]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/\",\n    className: \"logo-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo-img\",\n    src: logo,\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"menus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, filteredMenuItems.length > 0 ? filteredMenuItems.map((item, index) => /*#__PURE__*/React.createElement(MenuItems, {\n    key: index,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  })) : null)));\n};\nexport default Navbar;","map":{"version":3,"names":["React","useEffect","useState","MenuItems","logo","USER_DATA","getCookie","ERR_FETCHING_USER_FLAGS","useLocation","Navbar","location","token","userRoles","setUserRoles","Roles","VISITOR","filteredMenuItems","setFilteredMenuItems","Object","freeze","CUSTOMER","MANAGER","ADMINISTRATOR","storesAsItems","stores","menuItems","map","s","title","name","url","id","roles","submenu","REGIONAL_BOOKING","replace","REGION_NAME","createElement","FaUser","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","LOGOUT","ACCOUNT_DELETION","LOGIN","REGISTER","fetchUserRoles","fetch","headers","then","response","json","data","flags","user_flags","element","flag","filter","role","includes","length","push","catch","error","console","filteredItems","item","some","className","href","src","alt","index","key"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/components/navbar/Navbar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport MenuItems from './MenuItems';\nimport './Navbar.css';\nimport logo from '../../assets/images/logo.png';\nimport { USER_DATA } from '../../constants/URIs/UserURIs';\nimport { getCookie } from '../../services/Cookies';\nimport { ERR_FETCHING_USER_FLAGS } from '../../constants/ErrorMessages';\nimport { useLocation } from 'react-router-dom';\n\nconst Navbar = () => {\n\n    // TODO only update when necessairy\n\n    // gets the current location (Router) to update the navbar after cahnge of user roles\n    const location = useLocation();\n\n    const token = getCookie('token');\n\n    // default role is visitor (not logged in)\n    const [userRoles, setUserRoles] = useState([Roles.VISITOR]);\n    const [filteredMenuItems, setFilteredMenuItems] = useState([]);\n\n\n    // TODO find appropriate place for this\n    const Roles = Object.freeze({\n        CUSTOMER: 'Customer',\n        MANAGER: 'Manager',\n        ADMINISTRATOR: 'Administrator',\n        VISITOR: 'Visitor'\n    });\n\n\n    const storesAsItems = (stores) => {\n\n    }\n\n    // TODO make each title a translatoin constant\n    // TODO use URL constants for each url\n    const menuItems = (storesAsItems) => {\n\n        stores.map((s) => ({ title: s.name, url: `/store/${s.id}` }))\n\n        return [\n            {\n                title: 'Booking',\n                url: '/booking',\n                roles: [Roles.CUSTOMER, Roles.MANAGER, Roles.ADMINISTRATOR, Roles.VISITOR],\n                submenu: [\n                    {\n                        title: 'Karlsruhe',\n                        url: REGIONAL_BOOKING.replace(REGION_NAME, 'karlsruhe')\n                    },\n                    {\n                        title: 'Ettlingen',\n                        url: REGIONAL_BOOKING.replace(REGION_NAME, 'ettlingen')\n                    },\n                    {\n                        title: 'Bruchsaal',\n                        url: REGIONAL_BOOKING.replace(REGION_NAME, 'bruchsaal')\n                    },\n                    {\n                        title: 'Malsch',\n                        url: REGIONAL_BOOKING.replace(REGION_NAME, 'malsch')\n                    }\n                ]\n            },\n            {\n                title: 'Store management',\n                url: '/stores',\n                roles: [Roles.MANAGER, Roles.ADMINISTRATOR],\n                submenu: storesAsItems\n            },\n            {\n                title: 'Admin activities',\n                roles: [Roles.ADMINISTRATOR],\n                submenu: [\n                    {\n                        title: 'Bookings',\n                        url: '/bookings',\n                    },\n                    {\n                        title: 'Users',\n                        url: '/users',\n                    },\n                    {\n                        title: 'Stores',\n                        url: '/stores',\n                    },\n                    {\n                        title: 'Bikes',\n                        url: '/bikes',\n                    },\n                    {\n                        title: 'Enrollment',\n                        url: '/enrollment',\n                    }\n                ]\n            },\n            {\n                title: <FaUser />,\n                url: '/my-bookings',\n                roles: [Roles.CUSTOMER, Roles.MANAGER, Roles.ADMINISTRATOR],\n                submenu: [\n                    {\n                        title: 'Logout',\n                        url: LOGOUT,\n                    },\n                    {\n                        title: 'Delete account',\n                        url: ACCOUNT_DELETION,\n                    }\n                ]\n            },\n            {\n                title: <FaUser />,\n                url: null,\n                roles: [Roles.VISITOR],\n                submenu: [\n                    {\n                        title: 'Login',\n                        url: LOGIN,\n                    },\n                    {\n                        title: 'Register',\n                        url: REGISTER,\n                    }\n                ]\n            }\n        ]\n    };\n\n    const fetchUserRoles = () => {\n        if (token !== 'undefined' && token !== null) {\n            fetch(USER_DATA, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                }\n            })\n                .then(response => response.json())\n                .then(data => {\n                    // get the user flags from the response\n                    const flags = data.user_flags.map(element => element.flag);\n                    // get the store names from the flags\n                    const stores = flags.filter(role => role.includes('Store: ')).map(role => role.replace('Store: ', ''));\n                    // get the roles from the flags\n                    const roles = (flags.filter(role => !role.includes('Store: ')));\n                    // add the manager role if the user has stores\n                    if (stores.length > 0) roles.push(Roles.MANAGER);\n\n                    setUserRoles(roles);\n                })\n                .catch(error => {\n                    console.error(ERR_FETCHING_USER_FLAGS, error);\n                });\n        } else {\n            setUserRoles([Roles.VISITOR]);\n        }\n    }\n\n    // fetch user roles on first render, if token is present (user is logged in)\n    useEffect(() => {\n        fetchUserRoles();\n    }, [location]);\n\n    useEffect(() => {\n        let filteredItems = menuItems.filter(item =>\n            userRoles.some(role => item.roles.includes(role))\n        );\n        setFilteredMenuItems(filteredItems);\n    }, [userRoles]);\n\n    return (\n        <div className='nav-area'>\n            <a href='/' className='logo-container'>\n                <img className='logo-img' src={logo} alt='Logo' />\n            </a>\n            <nav className='nav'>\n                <ul className='menus'>\n                    {filteredMenuItems.length > 0 ? filteredMenuItems.map((item, index) => (\n                        <MenuItems key={index} item={item} />\n                    )) : null}\n                </ul>\n            </nav>\n        </div>\n    );\n}\n\nexport default Navbar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}