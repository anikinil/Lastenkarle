{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/utils/ProtectedElement.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { getCookie } from '../services/Cookies';\nimport { USER_DATA } from '../constants/URIs/UserURIs';\nimport { ERR_FETCHING_USER_FLAGS } from '../constants/ErrorMessages';\nimport { Roles } from '../components/navbar/menuData';\n\n// ProtectedElement component to restrict access based on user roles\nexport const ProtectedElement = ({\n  element,\n  elementRoles\n}) => {\n  const [userRoles, setUserRoles] = useState([]);\n  const [hasPermission, setHasPermissoin] = useState(false);\n  const fetchUserRoles = () => {\n    const token = getCookie('token');\n    console.log('TOKEN', token);\n    if (token !== 'undefined' && token !== null) {\n      console.log(\"TOKEN FOUND\");\n      fetch(USER_DATA, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`\n        }\n      }).then(response => response.json()).then(data => {\n        setUserRoles(data.user_flags.map(element => element.flag));\n      }).catch(error => {\n        console.error(ERR_FETCHING_USER_FLAGS, error);\n      });\n    } else {\n      setUserRoles([Roles.VISITOR]);\n    }\n  };\n  useEffect(() => {\n    fetchUserRoles();\n    console.log('userRoles:', userRoles);\n    console.log(userRoles);\n    setHasPermissoin(elementRoles.some(role => userRoles.includes(role)));\n  }, []);\n\n  // If the user has permission, render the provided element, otherwise redirect to the no-permission page\n  return hasPermission ? element : /*#__PURE__*/React.createElement(Navigate, {\n    to: \"/no-permission\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  });\n};","map":{"version":3,"names":["React","useEffect","useState","Navigate","getCookie","USER_DATA","ERR_FETCHING_USER_FLAGS","Roles","ProtectedElement","element","elementRoles","userRoles","setUserRoles","hasPermission","setHasPermissoin","fetchUserRoles","token","console","log","fetch","headers","then","response","json","data","user_flags","map","flag","catch","error","VISITOR","some","role","includes","createElement","to","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/utils/ProtectedElement.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { getCookie } from '../services/Cookies';\nimport { USER_DATA } from '../constants/URIs/UserURIs';\nimport { ERR_FETCHING_USER_FLAGS } from '../constants/ErrorMessages';\nimport { Roles } from '../components/navbar/menuData';\n\n// ProtectedElement component to restrict access based on user roles\nexport const ProtectedElement = ({element, elementRoles}) => {\n\n    const [userRoles, setUserRoles] = useState([]);\n    const [hasPermission, setHasPermissoin] = useState(false)\n\n    const fetchUserRoles = () => {\n        const token = getCookie('token');\n        console.log('TOKEN', token)\n        if (token !== 'undefined' && token !== null) {\n            console.log(\"TOKEN FOUND\")\n            fetch(USER_DATA, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                }\n            })\n                .then(response => response.json())\n                .then(data => {\n                    setUserRoles(data.user_flags.map(element => element.flag));\n                })\n                .catch(error => {\n                    console.error(ERR_FETCHING_USER_FLAGS, error);\n                });\n        } else {\n            setUserRoles([Roles.VISITOR]);\n        }\n    }\n\n    useEffect(() => {\n        fetchUserRoles();\n        console.log('userRoles:', userRoles)\n        console.log(userRoles)\n        setHasPermissoin(elementRoles.some(role => userRoles.includes(role)))\n    }, [])\n\n    // If the user has permission, render the provided element, otherwise redirect to the no-permission page\n    return (hasPermission ? (\n        element\n    ) : (\n        <Navigate to='/no-permission' />\n    ));\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,SAAS,QAAQ,4BAA4B;AACtD,SAASC,uBAAuB,QAAQ,4BAA4B;AACpE,SAASC,KAAK,QAAQ,+BAA+B;;AAErD;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAAC;EAACC,OAAO;EAAEC;AAAY,CAAC,KAAK;EAEzD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMa,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,KAAK,GAAGZ,SAAS,CAAC,OAAO,CAAC;IAChCa,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;IAC3B,IAAIA,KAAK,KAAK,WAAW,IAAIA,KAAK,KAAK,IAAI,EAAE;MACzCC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1BC,KAAK,CAACd,SAAS,EAAE;QACbe,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,SAASJ,KAAK;QACnC;MACJ,CAAC,CAAC,CACGK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACVZ,YAAY,CAACY,IAAI,CAACC,UAAU,CAACC,GAAG,CAACjB,OAAO,IAAIA,OAAO,CAACkB,IAAI,CAAC,CAAC;MAC9D,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZZ,OAAO,CAACY,KAAK,CAACvB,uBAAuB,EAAEuB,KAAK,CAAC;MACjD,CAAC,CAAC;IACV,CAAC,MAAM;MACHjB,YAAY,CAAC,CAACL,KAAK,CAACuB,OAAO,CAAC,CAAC;IACjC;EACJ,CAAC;EAED7B,SAAS,CAAC,MAAM;IACZc,cAAc,CAAC,CAAC;IAChBE,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEP,SAAS,CAAC;IACpCM,OAAO,CAACC,GAAG,CAACP,SAAS,CAAC;IACtBG,gBAAgB,CAACJ,YAAY,CAACqB,IAAI,CAACC,IAAI,IAAIrB,SAAS,CAACsB,QAAQ,CAACD,IAAI,CAAC,CAAC,CAAC;EACzE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,OAAQnB,aAAa,GACjBJ,OAAO,gBAEPT,KAAA,CAAAkC,aAAA,CAAC/B,QAAQ;IAACgC,EAAE,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAClC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}