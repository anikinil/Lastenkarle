{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/bikeDisplay/pages/BikePage.js\";\n//Page of singular Bike\n//Consists of a Name, Picture, Description and Information about the store it belongs to\n//Also has BikeCalendar which is component to make a reservation\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport PictureAndDescriptionField from '../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField';\nimport SingleLineTextField from '../../../components/display/SingleLineTextField';\nimport BikeCalendar from '../../booking/components/calendar/BikeCalendar';\nimport { ID } from '../../../constants/URIs/General';\nimport { BIKE_BY_ID, STORE_BY_BIKE_ID } from '../../../constants/URIs/BookingURIs';\nimport { ERR_FETCHING_BIKE, ERR_FETCHING_STORE } from '../../../constants/ErrorMessages';\nimport { getCookie } from '../../../services/Cookies';\nconst BikePage = () => {\n  const {\n    t\n  } = useTranslation();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [bike, setBike] = useState();\n  const [store, setStore] = useState();\n  const token = getCookie('token');\n  const fetchBike = () => {\n    fetch(BIKE_BY_ID.replace(ID, id), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      setBike(data);\n    }).catch(error => {\n      console.error(ERR_FETCHING_BIKE, error);\n    });\n  };\n  const fetchStore = () => {\n    fetch(STORE_BY_BIKE_ID.replace(ID, id), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      setStore(data);\n    }).catch(error => {\n      console.error(ERR_FETCHING_STORE, error);\n    });\n    useEffect(() => {\n      fetchStore();\n    });\n  };\n  useEffect(() => {\n    fetchBike();\n    fetchStore();\n  }, []);\n  const handleStoreClick = () => {\n    navigate(`/store/${store.id}`);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, bike.name), /*#__PURE__*/React.createElement(PictureAndDescriptionField, {\n    editable: false,\n    object: bike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SingleLineTextField, {\n    editable: false,\n    value: store.address,\n    title: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button regular\",\n    onClick: handleStoreClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, t('store'))), /*#__PURE__*/React.createElement(BikeCalendar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }));\n};\nexport default BikePage;","map":{"version":3,"names":["React","useEffect","useState","useTranslation","useNavigate","useParams","PictureAndDescriptionField","SingleLineTextField","BikeCalendar","ID","BIKE_BY_ID","STORE_BY_BIKE_ID","ERR_FETCHING_BIKE","ERR_FETCHING_STORE","getCookie","BikePage","t","navigate","id","bike","setBike","store","setStore","token","fetchBike","fetch","replace","headers","then","response","json","data","catch","error","console","fetchStore","handleStoreClick","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","name","editable","object","value","address","title","className","type","onClick"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/bikeDisplay/pages/BikePage.js"],"sourcesContent":["//Page of singular Bike\n//Consists of a Name, Picture, Description and Information about the store it belongs to\n//Also has BikeCalendar which is component to make a reservation\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport PictureAndDescriptionField from '../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField';\nimport SingleLineTextField from '../../../components/display/SingleLineTextField';\nimport BikeCalendar from '../../booking/components/calendar/BikeCalendar';\nimport { ID } from '../../../constants/URIs/General';\nimport { BIKE_BY_ID, STORE_BY_BIKE_ID } from '../../../constants/URIs/BookingURIs';\nimport { ERR_FETCHING_BIKE, ERR_FETCHING_STORE } from '../../../constants/ErrorMessages';\nimport { getCookie } from '../../../services/Cookies';\n\nconst BikePage = () => {\n\n    const { t } = useTranslation();\n    const navigate = useNavigate();\n\n    const { id } = useParams();\n    const [bike, setBike] = useState();\n    const [store, setStore] = useState();\n\n    const token = getCookie('token');\n\n    const fetchBike = () => {\n        fetch(BIKE_BY_ID.replace(ID, id), {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`,\n            }\n        })\n            .then(response => response.json())\n            .then(data => {\n                setBike(data);\n            })\n            .catch(error => {\n                console.error(ERR_FETCHING_BIKE, error);\n            });\n    }\n\n    const fetchStore = () => {\n        fetch(STORE_BY_BIKE_ID.replace(ID, id), {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`,\n            }\n        })\n            .then(response => response.json())\n            .then(data => {\n                setStore(data);\n            })\n            .catch(error => {\n                console.error(ERR_FETCHING_STORE, error);\n            });\n\n        useEffect(() => {\n            fetchStore();\n        });\n    }\n\n    useEffect(() => {\n        fetchBike();\n        fetchStore();\n    }, [])\n\n    const handleStoreClick = () => {\n        navigate(`/store/${store.id}`)\n    }\n\n    return (\n        <>\n            <h1>{bike.name}</h1>\n\n            <PictureAndDescriptionField editable={false} object={bike} />\n            <SingleLineTextField editable={false} value={store.address} title='address' />\n\n            <div className='button-container'>\n                <button type='button' className='button regular' onClick={handleStoreClick}>{t('store')}</button>\n            </div>\n\n            <BikeCalendar />\n        </>\n    );\n};\n\nexport default BikePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}