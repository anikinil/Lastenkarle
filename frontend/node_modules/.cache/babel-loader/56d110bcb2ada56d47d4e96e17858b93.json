{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/storePageCustomer.js/pages/StorePageCustomer.js\";\n// Page of a singular store\n// TODO: Add List of bikes belonging to store\n// Consists of Name, Picture, Description and Information\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport PictureAndDescriptionField from '../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField';\nimport { useParams } from 'react-router-dom';\nimport SingleLineTextField from '../../../components/display/SingleLineTextField';\nimport { ERR_FETCHING_STORE } from '../../../constants/ErrorMessages';\nimport { getCookie } from '../../../services/Cookies';\nimport { STORE_BY_BIKE_ID } from '../../../constants/URIs/BookingURIs';\nconst StoreDisplay = () => {\n  const {\n    t\n  } = useTranslation(); // Translation hook\n\n  const bikeId = useParams().id; // Get store name from URL parameters\n  const [store, setStore] = useState(); // State to hold store data\n\n  const token = getCookie('token'); // Get authentication token from cookies\n\n  // Function to fetch store data from the server\n  const fetchStore = () => {\n    fetch(STORE_BY_BIKE_ID.replace(ID, bikeId), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(response => response.json()) // Parse JSON response\n    .then(data => {\n      setStore(data); // Set store data to state\n    }).catch(error => {\n      console.error(ERR_FETCHING_STORE, error); // Log error if fetching fails\n    });\n  };\n\n  // Fetch store data when component mounts\n  useEffect(() => {\n    fetchStore();\n  }, []); // Empty dependency array ensures this runs only once\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, store === null || store === void 0 ? void 0 : store.name), \" \", /*#__PURE__*/React.createElement(PictureAndDescriptionField, {\n    editable: false,\n    object: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), \" \", /*#__PURE__*/React.createElement(SingleLineTextField, {\n    editable: false,\n    value: store === null || store === void 0 ? void 0 : store.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), \" \");\n};\nexport default StoreDisplay;","map":{"version":3,"names":["React","useEffect","useState","useTranslation","PictureAndDescriptionField","useParams","SingleLineTextField","ERR_FETCHING_STORE","getCookie","STORE_BY_BIKE_ID","StoreDisplay","t","bikeId","id","store","setStore","token","fetchStore","fetch","replace","ID","headers","then","response","json","data","catch","error","console","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","name","editable","object","value","address"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/storePageCustomer.js/pages/StorePageCustomer.js"],"sourcesContent":["// Page of a singular store\n// TODO: Add List of bikes belonging to store\n// Consists of Name, Picture, Description and Information\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport PictureAndDescriptionField from '../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField';\nimport { useParams } from 'react-router-dom';\nimport SingleLineTextField from '../../../components/display/SingleLineTextField';\nimport { ERR_FETCHING_STORE } from '../../../constants/ErrorMessages';\nimport { getCookie } from '../../../services/Cookies';\nimport { STORE_BY_BIKE_ID } from '../../../constants/URIs/BookingURIs';\n\nconst StoreDisplay = () => {\n    const { t } = useTranslation(); // Translation hook\n\n    const bikeId = useParams().id; // Get store name from URL parameters\n    const [store, setStore] = useState(); // State to hold store data\n\n    const token = getCookie('token'); // Get authentication token from cookies\n\n    // Function to fetch store data from the server\n    const fetchStore = () => {\n        fetch(STORE_BY_BIKE_ID.replace(ID, bikeId), {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`,\n            }\n        })\n            .then(response => response.json()) // Parse JSON response\n            .then(data => {\n                setStore(data); // Set store data to state\n            })\n            .catch(error => {\n                console.error(ERR_FETCHING_STORE, error); // Log error if fetching fails\n            });\n    }\n\n    // Fetch store data when component mounts\n    useEffect(() => {\n        fetchStore();\n    }, []); // Empty dependency array ensures this runs only once\n\n    return (\n        <>\n            <h1>{store?.name}</h1> {/* Display store name */}\n\n            <PictureAndDescriptionField editable={false} object={store} /> {/* Display picture and description */}\n            <SingleLineTextField editable={false} value={store?.address} /> {/* Display store address */}\n\n            {/* TODO add enrollment component for managers to enroll other managers to this particular store */}\n        </>\n    );\n};\n\nexport default StoreDisplay;"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,eAAe;AAE9C,OAAOC,0BAA0B,MAAM,mFAAmF;AAC1H,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,mBAAmB,MAAM,iDAAiD;AACjF,SAASC,kBAAkB,QAAQ,kCAAkC;AACrE,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAASC,gBAAgB,QAAQ,qCAAqC;AAEtE,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACvB,MAAM;IAAEC;EAAE,CAAC,GAAGR,cAAc,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMS,MAAM,GAAGP,SAAS,CAAC,CAAC,CAACQ,EAAE,CAAC,CAAC;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEtC,MAAMc,KAAK,GAAGR,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;;EAElC;EACA,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACrBC,KAAK,CAACT,gBAAgB,CAACU,OAAO,CAACC,EAAE,EAAER,MAAM,CAAC,EAAE;MACxCS,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,SAASL,KAAK;MACnC;IACJ,CAAC,CAAC,CACGM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAAA,CAClCF,IAAI,CAACG,IAAI,IAAI;MACVV,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAACpB,kBAAkB,EAAEoB,KAAK,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC;EACV,CAAC;;EAED;EACA1B,SAAS,CAAC,MAAM;IACZgB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIjB,KAAA,CAAA6B,aAAA,CAAA7B,KAAA,CAAA8B,QAAA,qBACI9B,KAAA,CAAA6B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKtB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEuB,IAAS,CAAC,KAAC,eAEvBrC,KAAA,CAAA6B,aAAA,CAACzB,0BAA0B;IAACkC,QAAQ,EAAE,KAAM;IAACC,MAAM,EAAEzB,KAAM;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,KAAC,eAC/DpC,KAAA,CAAA6B,aAAA,CAACvB,mBAAmB;IAACgC,QAAQ,EAAE,KAAM;IAACE,KAAK,EAAE1B,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAE2B,OAAQ;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,KAGjE,CAAC;AAEX,CAAC;AAED,eAAe1B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}