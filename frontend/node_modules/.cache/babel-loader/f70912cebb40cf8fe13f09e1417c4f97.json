{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/renting/pages/RegionalRenting.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\nimport Map from '../components/Map';\nimport FilterForAvailabilities from '../components/FilterForAvailabilities';\nimport AvailabilityCalendar from '../components/calendar/AvailabilityCalendar';\nimport BikeList from '../../../components/lists/bikeList/BikeList';\nimport { ALL_BIKES, ALL_STORES } from '../../../constants/URIs/RentingURIs';\nimport { ERR_FETCHING_BIKES, ERR_FETCHING_DATA, ERR_FETCHING_STORES } from '../../../constants/ErrorMessages';\nimport BikeListCustomer from '../../../components/lists/bikeList/listVersions/BikeListCustomer';\n//Standard page for a specific region\n//TODO: Add Map of region with station markers\n//TODO: Add Filter Bar for Availabilities\n//TODO: Add Calendar overview of reservations sorted by bike\n\nconst RegionalRenting = () => {\n  const {\n    t\n  } = useTranslation();\n  const regionName = useParams().region;\n  const [bikesInRegion, setBikesInRegion] = useState([]);\n  const fetchAllStores = async () => {\n    try {\n      const response = await fetch(ALL_STORES);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error(ERR_FETCHING_STORES, error);\n    }\n  };\n\n  // Fetchs all bikes\n  const fetchAllBikes = async () => {\n    try {\n      const response = await fetch(ALL_BIKES);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error(ERR_FETCHING_BIKES, error);\n    }\n  };\n\n  // Filters stores by the region of the page\n  const filterStoresByRegion = allStores => {\n    return allStores.filter(store => store.region.name.toLowerCase() === regionName);\n  };\n\n  // Filters bikes by the stores in the region of the page\n  const filterBikesByRegionStores = (allBikes, storesInRegion) => {\n    return allBikes.filter(bike => storesInRegion.some(store => store.id === bike.store));\n  };\n\n  // useEffect hook to fetch data when the component mounts\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const allStores = await fetchAllStores(); // Fetch all stores\n        const allBikes = await fetchAllBikes(); // Fetch all bikes\n        const storesInRegion = filterStoresByRegion(allStores); // Filter stores by region\n        const bikesInRegion = filterBikesByRegionStores(allBikes, storesInRegion); // Filter bikes by region stores\n        setBikesInRegion(bikesInRegion); // Update state with bikes in the region\n      } catch (error) {\n        console.error(ERR_FETCHING_DATA, error); // Log any errors that occur during data fetching\n      }\n    };\n    fetchData(); // Call the fetchData function\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, t('rent_in') + ': ' + regionName), /*#__PURE__*/React.createElement(BikeListCustomer, {\n    bikes: bikesInRegion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }));\n};\nexport default RegionalRenting;","map":{"version":3,"names":["React","useEffect","useState","useTranslation","useParams","Map","FilterForAvailabilities","AvailabilityCalendar","BikeList","ALL_BIKES","ALL_STORES","ERR_FETCHING_BIKES","ERR_FETCHING_DATA","ERR_FETCHING_STORES","BikeListCustomer","RegionalRenting","t","regionName","region","bikesInRegion","setBikesInRegion","fetchAllStores","response","fetch","data","json","error","console","fetchAllBikes","filterStoresByRegion","allStores","filter","store","name","toLowerCase","filterBikesByRegionStores","allBikes","storesInRegion","bike","some","id","fetchData","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","bikes"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/renting/pages/RegionalRenting.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\n\nimport Map from '../components/Map';\nimport FilterForAvailabilities from '../components/FilterForAvailabilities';\nimport AvailabilityCalendar from '../components/calendar/AvailabilityCalendar';\nimport BikeList from '../../../components/lists/bikeList/BikeList';\nimport { ALL_BIKES, ALL_STORES } from '../../../constants/URIs/RentingURIs';\nimport { ERR_FETCHING_BIKES, ERR_FETCHING_DATA, ERR_FETCHING_STORES } from '../../../constants/ErrorMessages';\nimport BikeListCustomer from '../../../components/lists/bikeList/listVersions/BikeListCustomer';\n//Standard page for a specific region\n//TODO: Add Map of region with station markers\n//TODO: Add Filter Bar for Availabilities\n//TODO: Add Calendar overview of reservations sorted by bike\n\nconst RegionalRenting = () => {\n\n    const { t } = useTranslation();\n\n    const regionName = useParams().region;\n\n    const [bikesInRegion, setBikesInRegion] = useState([]);\n\n    const fetchAllStores = async () => {\n        try {\n            const response = await fetch(ALL_STORES);\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error(ERR_FETCHING_STORES, error);\n        }\n    }\n\n    // Fetchs all bikes\n    const fetchAllBikes = async () => {\n        try {\n            const response = await fetch(ALL_BIKES);\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error(ERR_FETCHING_BIKES, error);\n        }\n    };\n\n    // Filters stores by the region of the page\n    const filterStoresByRegion = (allStores) => {\n        return allStores.filter(store => store.region.name.toLowerCase() === regionName);\n    }\n\n    // Filters bikes by the stores in the region of the page\n    const filterBikesByRegionStores = (allBikes, storesInRegion) => {\n        return allBikes.filter(bike => storesInRegion.some(store => store.id === bike.store));\n    }\n\n    // useEffect hook to fetch data when the component mounts\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const allStores = await fetchAllStores(); // Fetch all stores\n                const allBikes = await fetchAllBikes(); // Fetch all bikes\n                const storesInRegion = filterStoresByRegion(allStores); // Filter stores by region\n                const bikesInRegion = filterBikesByRegionStores(allBikes, storesInRegion); // Filter bikes by region stores\n                setBikesInRegion(bikesInRegion); // Update state with bikes in the region\n            } catch (error) {\n                console.error(ERR_FETCHING_DATA, error); // Log any errors that occur during data fetching\n            }\n        };\n        fetchData(); // Call the fetchData function\n    }, []);\n\n    return (\n        <>\n            <h1>{t('rent_in') + ': ' + regionName}</h1>\n\n            {/* <Map /> */}\n            {/* <FilterForAvailabilities /> */}\n            {/* <AvailabilityCalendar /> */}\n            \n            <BikeListCustomer bikes={bikesInRegion} />\n        </>\n\n    );\n};\n\nexport default RegionalRenting;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}