{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/booking/components/calendar/BikeCalendar.js\";\n// Calendar for page of a singular bike\n// TODO: Reservation Calendar with two months in advance view\n// TODO: Legend for Colours (available, booked, closed, unavailable)\nimport React, { useState } from 'react';\nimport './BikeCalendar.css'; // CSS für die Farblegende\n\nconst getDaysInMonth = (month, year) => {\n  return new Date(year, month + 1, 0).getDate();\n};\nconst BikeCalendar = () => {\n  const today = new Date();\n  const currentMonth = today.getMonth();\n  const currentYear = today.getFullYear();\n  const [selectedStartDate, setSelectedStartDate] = useState(null);\n  const [selectedEndDate, setSelectedEndDate] = useState(null);\n  const [availability, setAvailability] = useState({\n    // Beispiel-Daten für die Verfügbarkeit (0 = buchbar, 1 = reserviert, 2 = geschlossen, 3 = nicht buchbar)\n    '2024-09-06': 0,\n    '2024-09-07': 1,\n    '2024-09-08': 3\n    // Weitere Verfügbarkeiten\n  });\n  const handleDayClick = date => {\n    const dateString = date.toISOString().split('T')[0];\n    if (availability[dateString] !== 0) {\n      // Tag nicht buchbar\n      return;\n    }\n    if (!selectedStartDate || selectedStartDate && selectedEndDate) {\n      setSelectedStartDate(date);\n      setSelectedEndDate(null);\n    } else if (selectedStartDate && !selectedEndDate) {\n      if (date >= selectedStartDate) {\n        setSelectedEndDate(date);\n      } else {\n        setSelectedStartDate(date);\n      }\n    }\n  };\n  const renderCalendarDays = (month, year) => {\n    const daysInMonth = getDaysInMonth(month, year);\n    const daysArray = Array.from({\n      length: daysInMonth\n    }, (_, i) => new Date(year, month, i + 1));\n    return daysArray.map(day => {\n      const dateString = day.toISOString().split('T')[0];\n      const isSelectedStart = selectedStartDate && selectedStartDate.toISOString().split('T')[0] === dateString;\n      const isSelectedEnd = selectedEndDate && selectedEndDate.toISOString().split('T')[0] === dateString;\n      let dayClass = '';\n      if (availability[dateString] === 0) {\n        dayClass = 'available';\n      } else if (availability[dateString] === 1) {\n        dayClass = 'reserved';\n      } else if (availability[dateString] === 2) {\n        dayClass = 'closed';\n      } else {\n        dayClass = 'not-bookable';\n      }\n      if (isSelectedStart || isSelectedEnd) {\n        dayClass += ' selected';\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: dateString,\n        className: `calendar-day ${dayClass}`,\n        onClick: () => handleDayClick(day),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, day.getDate());\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"booking-calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"month-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Aktueller Monat \", currentMonth + 1, \" \", currentYear), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, renderCalendarDays(currentMonth, currentYear))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"month-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"N\\xE4chster Monat \", currentMonth + 2, \" \", currentYear), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, renderCalendarDays(currentMonth + 1, currentYear))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selection-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Abholung: \", selectedStartDate ? selectedStartDate.toDateString() : \"Bitte wählen Sie ein Datum\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"R\\xFCckgabe: \", selectedEndDate ? selectedEndDate.toDateString() : \"Bitte wählen Sie ein Datum\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"legend-color available\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 12\n    }\n  }), \" Buchbar\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"legend-color reserved\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 12\n    }\n  }), \" Reserviert\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"legend-color closed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 12\n    }\n  }), \" Standort geschlossen\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"legend-color not-bookable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 12\n    }\n  }), \" Nicht buchbar\")));\n};\nexport default BikeCalendar;","map":{"version":3,"names":["React","useState","getDaysInMonth","month","year","Date","getDate","BikeCalendar","today","currentMonth","getMonth","currentYear","getFullYear","selectedStartDate","setSelectedStartDate","selectedEndDate","setSelectedEndDate","availability","setAvailability","handleDayClick","date","dateString","toISOString","split","renderCalendarDays","daysInMonth","daysArray","Array","from","length","_","i","map","day","isSelectedStart","isSelectedEnd","dayClass","createElement","key","className","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","toDateString"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/booking/components/calendar/BikeCalendar.js"],"sourcesContent":["// Calendar for page of a singular bike\n// TODO: Reservation Calendar with two months in advance view\n// TODO: Legend for Colours (available, booked, closed, unavailable)\nimport React, { useState } from 'react';\nimport './BikeCalendar.css'; // CSS für die Farblegende\n\nconst getDaysInMonth = (month, year) => {\n  return new Date(year, month + 1, 0).getDate();\n};\n\nconst BikeCalendar = () => {\n  const today = new Date();\n  const currentMonth = today.getMonth();\n  const currentYear = today.getFullYear();\n\n  const [selectedStartDate, setSelectedStartDate] = useState(null);\n  const [selectedEndDate, setSelectedEndDate] = useState(null);\n  const [availability, setAvailability] = useState({\n    // Beispiel-Daten für die Verfügbarkeit (0 = buchbar, 1 = reserviert, 2 = geschlossen, 3 = nicht buchbar)\n    '2024-09-06': 0,\n    '2024-09-07': 1,\n    '2024-09-08': 3,\n    // Weitere Verfügbarkeiten\n  });\n\n  const handleDayClick = (date) => {\n    const dateString = date.toISOString().split('T')[0];\n\n    if (availability[dateString] !== 0) {\n      // Tag nicht buchbar\n      return;\n    }\n\n    if (!selectedStartDate || (selectedStartDate && selectedEndDate)) {\n      setSelectedStartDate(date);\n      setSelectedEndDate(null);\n    } else if (selectedStartDate && !selectedEndDate) {\n      if (date >= selectedStartDate) {\n        setSelectedEndDate(date);\n      } else {\n        setSelectedStartDate(date);\n      }\n    }\n  };\n\n  const renderCalendarDays = (month, year) => {\n    const daysInMonth = getDaysInMonth(month, year);\n    const daysArray = Array.from({ length: daysInMonth }, (_, i) => new Date(year, month, i + 1));\n\n    return daysArray.map((day) => {\n      const dateString = day.toISOString().split('T')[0];\n      const isSelectedStart = selectedStartDate && selectedStartDate.toISOString().split('T')[0] === dateString;\n      const isSelectedEnd = selectedEndDate && selectedEndDate.toISOString().split('T')[0] === dateString;\n\n      let dayClass = '';\n      if (availability[dateString] === 0) {\n        dayClass = 'available';\n      } else if (availability[dateString] === 1) {\n        dayClass = 'reserved';\n      } else if (availability[dateString] === 2) {\n        dayClass = 'closed';\n      } else {\n        dayClass = 'not-bookable';\n      }\n\n      if (isSelectedStart || isSelectedEnd) {\n        dayClass += ' selected';\n      }\n\n      return (\n        <div\n          key={dateString}\n          className={`calendar-day ${dayClass}`}\n          onClick={() => handleDayClick(day)}\n        >\n          {day.getDate()}\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className=\"booking-calendar\">\n      <div className=\"month-container\">\n        <h2>Aktueller Monat {currentMonth + 1} {currentYear}</h2>\n        <div className=\"calendar-grid\">\n          {renderCalendarDays(currentMonth, currentYear)}\n        </div>\n      </div>\n\n      <div className=\"month-container\">\n        <h2>Nächster Monat {currentMonth + 2} {currentYear}</h2>\n        <div className=\"calendar-grid\">\n          {renderCalendarDays(currentMonth + 1, currentYear)}\n        </div>\n      </div>\n\n      <div className=\"selection-info\">\n        <p>Abholung: {selectedStartDate ? selectedStartDate.toDateString() : \"Bitte wählen Sie ein Datum\"}</p>\n        <p>Rückgabe: {selectedEndDate ? selectedEndDate.toDateString() : \"Bitte wählen Sie ein Datum\"}</p>\n      </div>\n\n      <div className=\"legend\">\n        <p><span className=\"legend-color available\"></span> Buchbar</p>\n        <p><span className=\"legend-color reserved\"></span> Reserviert</p>\n        <p><span className=\"legend-color closed\"></span> Standort geschlossen</p>\n        <p><span className=\"legend-color not-bookable\"></span> Nicht buchbar</p>\n      </div>\n    </div>\n  );\n};\n\nexport default BikeCalendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}