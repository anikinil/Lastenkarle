{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/enrollment/pages/Enrollment.js\";\nimport React, { useState, startTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\n\n// const roles = [\n//     { key: 1, value: 'admin' },\n//     { key: 2, value: 'Manager of \\'Store 1\\'' },\n//     { key: 3, value: 'Manager of \\'Store 2\\'' },\n//     { key: 4, value: 'Manager of \\'Store 3\\'' },\n//     { key: 5, value: 'Manager of \\'Store 4\\'' }\n// ]\n\nconst Enrollment = () => {\n  const {\n    t\n  } = useTranslation();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState();\n  const [email, setEmail] = useState();\n  const [stores, setStores] = useState([]);\n  const [selectedRole, setSelectedRole] = useState({});\n  const fetchStores = () => {\n    // TODO proper URI variable\n    fetch('URI_ADMIN_STORES', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      setStores(data);\n    });\n  };\n  useEffect(() => {\n    fetchStores();\n  }, []);\n  const roleOptions = [...stores.map(store => ({\n    value: 'Store: ' + store.name,\n    label: 'Manager: ' + store.name\n  })), {\n    value: 'Administrator',\n    label: 'Admin'\n  }];\n  const postEnrollment = () => {\n    let payload = {\n      contact_data: email,\n      user_status: selectedRole\n    };\n\n    // POST enrollment request\n    fetch(URI_ADMIN_ENROLL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(payload)\n    }).then(response => {\n      if (response) {\n        alert(t('enrollment_successful'));\n        navigateToNextPage();\n      } else {\n        return response.json().then(errorText => {\n          throw new Error(errorText.detail);\n        });\n      }\n    }).catch(error => {\n      alert(ERR_POSTING_ENROLLMENT + ' ' + error.message);\n    });\n  };\n  const handleRoleChange = selectedRoleOption => {\n    setSelectedRole(selectedRoleOption.value);\n  };\n\n  // this prevents user from switching to new line by hitting [Enter]\n  const handleFieldKeyDown = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n    }\n  };\n  const handleEnrollClick = () => {\n    postEnrollment();\n    // TODO notify on success/failure perhaps via alert (in this line)\n    // TODO add proper variable\n    navigate('/home');\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, t('enrollment')), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, t('enter_one_of_the_following_to_identify_user')), /*#__PURE__*/React.createElement(\"textarea\", {\n    title: t('enter_username'),\n    className: \"username\",\n    rows: \"1\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    onKeyDown: handleFieldKeyDown,\n    placeholder: t('enter_username'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    title: t('enter_email'),\n    className: \"email\",\n    rows: \"1\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    onKeyDown: handleFieldKeyDown,\n    placeholder: t('enter_email'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, t('select_role')), /*#__PURE__*/React.createElement(\"select\", {\n    title: \"roles\",\n    className: \"select\",\n    onChange: handleRoleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, roleOptions.map(e => /*#__PURE__*/React.createElement(\"option\", {\n    key: e.key,\n    value: e.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 39\n    }\n  }, e.value)), \";\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button accent\",\n    onClick: handleEnrollClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, t('enroll'))));\n};\nexport default Enrollment;","map":{"version":3,"names":["React","useState","startTransition","useTranslation","useNavigate","Enrollment","t","navigate","username","setUsername","email","setEmail","stores","setStores","selectedRole","setSelectedRole","fetchStores","fetch","headers","token","then","response","json","data","useEffect","roleOptions","map","store","value","name","label","postEnrollment","payload","contact_data","user_status","URI_ADMIN_ENROLL","method","body","JSON","stringify","alert","navigateToNextPage","errorText","Error","detail","catch","error","ERR_POSTING_ENROLLMENT","message","handleRoleChange","selectedRoleOption","handleFieldKeyDown","event","key","preventDefault","handleEnrollClick","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","className","rows","onChange","e","target","onKeyDown","placeholder","type","onClick"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/enrollment/pages/Enrollment.js"],"sourcesContent":["import React, { useState, startTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useNavigate } from 'react-router-dom';\n\n// const roles = [\n//     { key: 1, value: 'admin' },\n//     { key: 2, value: 'Manager of \\'Store 1\\'' },\n//     { key: 3, value: 'Manager of \\'Store 2\\'' },\n//     { key: 4, value: 'Manager of \\'Store 3\\'' },\n//     { key: 5, value: 'Manager of \\'Store 4\\'' }\n// ]\n\nconst Enrollment = () => {\n\n    const { t } = useTranslation();\n\n    const navigate = useNavigate();\n\n    const [username, setUsername] = useState();\n    const [email, setEmail] = useState();\n\n    const [stores, setStores] = useState([]);\n    const [selectedRole, setSelectedRole] = useState({});\n\n    const fetchStores= () => {\n        // TODO proper URI variable\n        fetch('URI_ADMIN_STORES', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`\n            },\n        })\n            .then(response => {\n                return response.json()\n            })\n            .then(data => {\n                setStores(data)\n            })\n    }\n    useEffect(() => {\n        fetchStores();\n    }, [])\n\n    const roleOptions = [...stores.map((store) => (\n        { value: 'Store: ' + store.name, label: 'Manager: ' + store.name }\n    )), { value: 'Administrator', label: 'Admin' }];\n\n    const postEnrollment = () => {\n\n        let payload = {\n            contact_data: email,\n            user_status: selectedRole\n        };\n\n        // POST enrollment request\n        fetch(URI_ADMIN_ENROLL, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`\n            },\n            body: JSON.stringify(payload)\n        })\n            .then(response => {\n                if (response) {\n                    alert(t('enrollment_successful'));\n                    navigateToNextPage();\n                }\n                else {\n                    return response.json().then((errorText) => {\n                        throw new Error(errorText.detail);\n                    });\n                }\n            })\n            .catch(error => {\n                alert(ERR_POSTING_ENROLLMENT + ' ' + error.message);\n            })\n    }\n\n    const handleRoleChange = (selectedRoleOption) => {\n        setSelectedRole(selectedRoleOption.value)\n    }\n\n    // this prevents user from switching to new line by hitting [Enter]\n    const handleFieldKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n        }\n    };\n\n    const handleEnrollClick = () => {\n        postEnrollment()\n        // TODO notify on success/failure perhaps via alert (in this line)\n        // TODO add proper variable\n        navigate('/home')\n    }\n\n    return (\n        <>\n            <h1>{t('enrollment')}</h1>\n\n            <p>{t('enter_one_of_the_following_to_identify_user')}</p>\n\n            <textarea\n                title={t('enter_username')}\n                className='username'\n                rows='1'\n                value={username}\n                onChange={e => setUsername(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_username')}\n            >\n            </textarea>\n\n            <textarea\n                title={t('enter_email')}\n                className='email'\n                rows='1'\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_email')}\n            >\n            </textarea>\n\n            {/* TODO style */}\n\n            <p>{t('select_role')}</p>\n            <select title='roles' className='select' onChange={handleRoleChange}>\n                {roleOptions.map(e => <option key={e.key} value={e.key}>{e.value}</option>)};\n            </select>\n            \n            <div className='button-container'>\n                <button type='button' className='button accent' onClick={handleEnrollClick}>{t('enroll')}</button>\n            </div>\n        </>\n    );\n};\n\nexport default Enrollment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}