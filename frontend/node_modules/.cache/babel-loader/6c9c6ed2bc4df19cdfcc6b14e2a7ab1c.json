{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/userList/pages/UserList.js\";\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport '../../../components/lists/List.css';\nimport UserListItem from '../components/UserListItem';\nimport './UserList.css';\nimport { FaSortAlphaDown, FaSortAlphaUp } from 'react-icons/fa';\n\n// TODO implement fetching\nlet usersLst = [{\n  id: 1,\n  name: 'ilja42'\n}, {\n  id: 2,\n  name: 'alma123'\n}, {\n  id: 3,\n  name: 'rüdiger'\n}];\nconst UserList = () => {\n  const {\n    t\n  } = useTranslation();\n  const [token, setToken] = useState();\n\n  // NOTE after fetching implemented:\n  // const [users, setUsers] = useState([]);\n  const [users, setUsers] = useState([usersLst]);\n  const [sortAZ, setSortAZ] = useState(true);\n  const fetchUsers = async () => {\n    const response = await fetch('URI_ADMIN_USERS', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    });\n    const data = await response.json();\n    setBookings(data);\n  };\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const handleSortClick = () => {\n    setSortAZ(!sortAZ);\n    resort();\n  };\n  const resort = () => {\n    users.sort((a, b) => sortAZ ? a.name.localeCompare(b.name) : b.name.localeCompare(a.name));\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, t('users')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"sort-button\",\n    title: t('sort'),\n    onClick: handleSortClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, sortAZ ? /*#__PURE__*/React.createElement(FaSortAlphaDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 31\n    }\n  }) : /*#__PURE__*/React.createElement(FaSortAlphaUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 53\n    }\n  }))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, users.map(user => /*#__PURE__*/React.createElement(UserListItem, {\n    user: user,\n    key: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }))));\n};\nexport default UserList;","map":{"version":3,"names":["React","useState","useTranslation","UserListItem","FaSortAlphaDown","FaSortAlphaUp","usersLst","id","name","UserList","t","token","setToken","users","setUsers","sortAZ","setSortAZ","fetchUsers","response","fetch","headers","data","json","setBookings","useEffect","handleSortClick","resort","sort","a","b","localeCompare","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","type","title","onClick","map","user","key"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/userList/pages/UserList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport '../../../components/lists/List.css';\nimport UserListItem from '../components/UserListItem'\nimport './UserList.css'\n\nimport { FaSortAlphaDown, FaSortAlphaUp } from 'react-icons/fa';\n\n// TODO implement fetching\nlet usersLst = [\n    {\n        id: 1,\n        name: 'ilja42',\n    },\n    {\n        id: 2,\n        name: 'alma123',\n    },\n    {\n        id: 3,\n        name: 'rüdiger',\n    }\n]\n\nconst UserList = () => {\n\n    const { t } = useTranslation();\n    \n    const [token, setToken] = useState();\n\n    // NOTE after fetching implemented:\n    // const [users, setUsers] = useState([]);\n    const [users, setUsers] = useState([usersLst]);\n\n    const [sortAZ, setSortAZ] = useState(true);\n\n\n    const fetchUsers = async () => {\n        const response = await fetch('URI_ADMIN_USERS', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`,\n            }\n        });\n        const data = await response.json();\n        setBookings(data);\n    };\n\n    useEffect(() => {\n        fetchUsers();\n    }, [])\n\n    const handleSortClick = () => {\n        setSortAZ(!sortAZ)\n        resort()\n    }\n\n    const resort = () => {\n        users.sort((a, b) => sortAZ ? a.name.localeCompare(b.name) : b.name.localeCompare(a.name))\n    }\n\n    return (\n        <>\n            <h1>{t('users')}</h1>\n\n            <div className='list-button-container'>\n                <button type='button' className='sort-button' title={t('sort')} onClick={handleSortClick}>\n                    {sortAZ ? <FaSortAlphaDown /> : <FaSortAlphaUp />}\n                </button>\n            </div>\n\n            <ul className='list'>\n                {users.map((user) => (\n                    <UserListItem user={user} key={user.id} />\n                ))}\n            </ul>\n        </>\n    );\n};\n\nexport default UserList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}