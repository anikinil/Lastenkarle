{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/booking/pages/RegionalBooking.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\nimport Map from '../components/Map';\nimport FilterForAvailabilities from '../components/FilterForAvailabilities';\nimport AvailabilityCalendar from '../components/calendar/AvailabilityCalendar';\nimport BikeList from '../../allBikesList/components/BikeList';\nimport { ALL_BIKES, ALL_STORES } from '../../../constants/URIs/BookingURIs';\nimport { ERR_FETCHING_BIKES, ERR_FETCHING_STORES } from '../../../constants/ErrorMessages';\n//Standard page for a specific region\n//TODO: Add Map of region with station markers\n//TODO: Add Filter Bar for Availabilities\n//TODO: Add Calendar overview of reservations sorted by bike\n\nconst RegionalBooking = () => {\n  const {\n    t\n  } = useTranslation();\n  const regionName = useParams().region;\n  const [bikesInRegion, setBikesInRegion] = useState([]);\n  const fetchData = async () => {\n    try {\n      // Fetch data\n      const allStores = await fetchAllStores();\n      const allBikes = await fetchAllBikes();\n\n      // Filter data\n      const storesInRegion = filterStoresByRegion(allStores);\n      const bikesInRegion = filterBikesByRegionStores(allBikes, storesInRegion);\n\n      // Update state\n      setBikesInRegion(bikesInRegion);\n    } catch (error) {\n      console.error(ERR_FETCHING_DATA, error);\n    }\n  };\n  const filterStoresByRegion = allStores => {\n    return allStores.filter(store => store.region.name.toLowerCase() === regionName);\n  };\n  const filterBikesByRegionStores = (allBikes, storesInRegion) => {\n    return allBikes.filter(bike => storesInRegion.some(store => store.id === bike.store));\n  };\n  useEffect(() => {\n    const allStores = fetchAllStores();\n    const allBikes = fetchAllBikes();\n    const storesInRegion = filterStoresByRegion(allStores);\n    setBikesInRegion(filterBikesByRegionStores(allBikes, storesInRegion));\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, t('rent_in') + ': ' + regionName), /*#__PURE__*/React.createElement(BikeList, {\n    bikes: bikesInRegion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }));\n};\nexport default RegionalBooking;","map":{"version":3,"names":["React","useEffect","useState","useTranslation","useParams","Map","FilterForAvailabilities","AvailabilityCalendar","BikeList","ALL_BIKES","ALL_STORES","ERR_FETCHING_BIKES","ERR_FETCHING_STORES","RegionalBooking","t","regionName","region","bikesInRegion","setBikesInRegion","fetchData","allStores","fetchAllStores","allBikes","fetchAllBikes","storesInRegion","filterStoresByRegion","filterBikesByRegionStores","error","console","ERR_FETCHING_DATA","filter","store","name","toLowerCase","bike","some","id","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","bikes"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/booking/pages/RegionalBooking.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\n\nimport Map from '../components/Map';\nimport FilterForAvailabilities from '../components/FilterForAvailabilities';\nimport AvailabilityCalendar from '../components/calendar/AvailabilityCalendar';\nimport BikeList from '../../allBikesList/components/BikeList';\nimport { ALL_BIKES, ALL_STORES } from '../../../constants/URIs/BookingURIs';\nimport { ERR_FETCHING_BIKES, ERR_FETCHING_STORES } from '../../../constants/ErrorMessages';\n//Standard page for a specific region\n//TODO: Add Map of region with station markers\n//TODO: Add Filter Bar for Availabilities\n//TODO: Add Calendar overview of reservations sorted by bike\n\nconst RegionalBooking = () => {\n\n    const { t } = useTranslation();\n\n    const regionName = useParams().region;\n\n    const [bikesInRegion, setBikesInRegion] = useState([]);\n\n    const fetchData = async () => {\n        try {\n            // Fetch data\n            const allStores = await fetchAllStores();\n            const allBikes = await fetchAllBikes();\n\n            // Filter data\n            const storesInRegion = filterStoresByRegion(allStores);\n            const bikesInRegion = filterBikesByRegionStores(allBikes, storesInRegion);\n\n            // Update state\n            setBikesInRegion(bikesInRegion);\n        } catch (error) {\n            console.error(ERR_FETCHING_DATA, error);\n        }\n    };\n\n    const filterStoresByRegion = (allStores) => {\n        return allStores.filter(store => store.region.name.toLowerCase() === regionName);\n    }\n\n    const filterBikesByRegionStores = (allBikes, storesInRegion) => {\n        return allBikes.filter(bike => storesInRegion.some(store => store.id === bike.store));\n    }\n\n    useEffect(() => {\n        const allStores = fetchAllStores();\n        const allBikes = fetchAllBikes();\n        const storesInRegion = filterStoresByRegion(allStores);\n        setBikesInRegion(filterBikesByRegionStores(allBikes, storesInRegion));\n    }, []);\n\n    return (\n        <>\n            <h1>{t('rent_in') + ': ' + regionName}</h1>\n\n            {/* <Map /> */}\n            {/* <FilterForAvailabilities /> */}\n            {/* <AvailabilityCalendar /> */}\n            <BikeList bikes={bikesInRegion} />\n        </>\n\n    );\n};\n\nexport default RegionalBooking;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,uBAAuB,MAAM,uCAAuC;AAC3E,OAAOC,oBAAoB,MAAM,6CAA6C;AAC9E,OAAOC,QAAQ,MAAM,wCAAwC;AAC7D,SAASC,SAAS,EAAEC,UAAU,QAAQ,qCAAqC;AAC3E,SAASC,kBAAkB,EAAEC,mBAAmB,QAAQ,kCAAkC;AAC1F;AACA;AACA;AACA;;AAEA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAE1B,MAAM;IAAEC;EAAE,CAAC,GAAGX,cAAc,CAAC,CAAC;EAE9B,MAAMY,UAAU,GAAGX,SAAS,CAAC,CAAC,CAACY,MAAM;EAErC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMiB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA;MACA,MAAMC,SAAS,GAAG,MAAMC,cAAc,CAAC,CAAC;MACxC,MAAMC,QAAQ,GAAG,MAAMC,aAAa,CAAC,CAAC;;MAEtC;MACA,MAAMC,cAAc,GAAGC,oBAAoB,CAACL,SAAS,CAAC;MACtD,MAAMH,aAAa,GAAGS,yBAAyB,CAACJ,QAAQ,EAAEE,cAAc,CAAC;;MAEzE;MACAN,gBAAgB,CAACD,aAAa,CAAC;IACnC,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACE,iBAAiB,EAAEF,KAAK,CAAC;IAC3C;EACJ,CAAC;EAED,MAAMF,oBAAoB,GAAIL,SAAS,IAAK;IACxC,OAAOA,SAAS,CAACU,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACf,MAAM,CAACgB,IAAI,CAACC,WAAW,CAAC,CAAC,KAAKlB,UAAU,CAAC;EACpF,CAAC;EAED,MAAMW,yBAAyB,GAAGA,CAACJ,QAAQ,EAAEE,cAAc,KAAK;IAC5D,OAAOF,QAAQ,CAACQ,MAAM,CAACI,IAAI,IAAIV,cAAc,CAACW,IAAI,CAACJ,KAAK,IAAIA,KAAK,CAACK,EAAE,KAAKF,IAAI,CAACH,KAAK,CAAC,CAAC;EACzF,CAAC;EAED9B,SAAS,CAAC,MAAM;IACZ,MAAMmB,SAAS,GAAGC,cAAc,CAAC,CAAC;IAClC,MAAMC,QAAQ,GAAGC,aAAa,CAAC,CAAC;IAChC,MAAMC,cAAc,GAAGC,oBAAoB,CAACL,SAAS,CAAC;IACtDF,gBAAgB,CAACQ,yBAAyB,CAACJ,QAAQ,EAAEE,cAAc,CAAC,CAAC;EACzE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIxB,KAAA,CAAAqC,aAAA,CAAArC,KAAA,CAAAsC,QAAA,qBACItC,KAAA,CAAAqC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK9B,CAAC,CAAC,SAAS,CAAC,GAAG,IAAI,GAAGC,UAAe,CAAC,eAK3Cf,KAAA,CAAAqC,aAAA,CAAC7B,QAAQ;IAACqC,KAAK,EAAE5B,aAAc;IAAAsB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACnC,CAAC;AAGX,CAAC;AAED,eAAe/B,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}