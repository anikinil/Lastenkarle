{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/enrollment/pages/Enrollment.js\";\n// Page shown to Admins and/or managers to enroll users as admins or managers\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\nimport { USER_FLAGS } from '../../../constants/URIs/AdminURIs';\nimport { ALL_STORES } from '../../../constants/URIs/BookingURIs';\nimport { getCookie } from '../../../services/Cookies';\nimport { ERR_POSTING_ENROLLMENT } from '../../../constants/ErrorMessages';\nconst Enrollment = () => {\n  const {\n    t\n  } = useTranslation(); // Translation hook\n  const navigate = useNavigate(); // Navigation hook\n\n  // State variables\n  const [email, setEmail] = useState();\n  const [stores, setStores] = useState([]);\n  const [selectedRole, setSelectedRole] = useState({});\n  const token = getCookie('token'); // Get authentication token from cookies\n\n  // Fetch stores from the server\n  const fetchStores = () => {\n    fetch(ALL_STORES, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(response => response.json()).then(data => setStores(data)).catch(error => console.error('Error fetching stores:', error));\n  };\n\n  // Fetch stores on component mount\n  useEffect(() => {\n    fetchStores();\n    console.log('stores', stores);\n  }, []);\n\n  // Generate role options for the select dropdown\n  // TODO make proper parsing for API\n  const roleOptions = [...stores.map(store => ({\n    value: store.name,\n    label: t('manager_of') + store.name\n  })), {\n    value: Role.ADMNISTRATOR,\n    label: t('admin')\n  }, {\n    value: t('test'),\n    label: t('test')\n  }];\n\n  // Post enrollment data to the server\n  const postEnrollment = () => {\n    console.log('IN POST selectedRole', selectedRole);\n    const payload = {\n      contact_data: email,\n      // user_status: selectedRole\n      user_status: 'Administrator'\n    };\n    fetch(USER_FLAGS, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(payload)\n    }).then(response => {\n      if (response.ok) {\n        alert(t('enrollment_successful'));\n      } else {\n        return response.json().then(errorText => {\n          throw new Error(errorText.detail);\n        });\n      }\n    }).catch(error => {\n      alert(ERR_POSTING_ENROLLMENT + ' ' + error.message);\n    });\n  };\n\n  // Handle role change in the select dropdown\n  const handleRoleChange = event => {\n    setSelectedRole(event.target.value);\n    console.log(event.target.value);\n  };\n\n  // Prevent user from switching to a new line by hitting [Enter]\n  const handleFieldKeyDown = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n    }\n  };\n\n  // Handle enroll button click\n  const handleEnrollClick = () => {\n    postEnrollment();\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, t('enrollment')), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, t('enter_one_of_the_following_to_identify_user')), /*#__PURE__*/React.createElement(\"textarea\", {\n    title: t('enter_email'),\n    className: \"email\",\n    rows: \"1\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    onKeyDown: handleFieldKeyDown,\n    placeholder: t('enter_email'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, t('select_role')), /*#__PURE__*/React.createElement(\"select\", {\n    title: \"roles\",\n    className: \"select\",\n    onChange: handleRoleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, roleOptions.map(e => /*#__PURE__*/React.createElement(\"option\", {\n    key: e.value,\n    value: e.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 39\n    }\n  }, e.label))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button accent\",\n    onClick: handleEnrollClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, t('enroll'))));\n};\nexport default Enrollment;","map":{"version":3,"names":["React","useState","useEffect","useTranslation","useNavigate","USER_FLAGS","ALL_STORES","getCookie","ERR_POSTING_ENROLLMENT","Enrollment","t","navigate","email","setEmail","stores","setStores","selectedRole","setSelectedRole","token","fetchStores","fetch","headers","then","response","json","data","catch","error","console","log","roleOptions","map","store","value","name","label","Role","ADMNISTRATOR","postEnrollment","payload","contact_data","user_status","method","body","JSON","stringify","ok","alert","errorText","Error","detail","message","handleRoleChange","event","target","handleFieldKeyDown","key","preventDefault","handleEnrollClick","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","className","rows","onChange","e","onKeyDown","placeholder","type","onClick"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/enrollment/pages/Enrollment.js"],"sourcesContent":["// Page shown to Admins and/or managers to enroll users as admins or managers\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\n\nimport { USER_FLAGS } from '../../../constants/URIs/AdminURIs';\nimport { ALL_STORES } from '../../../constants/URIs/BookingURIs';\nimport { getCookie } from '../../../services/Cookies';\nimport { ERR_POSTING_ENROLLMENT } from '../../../constants/ErrorMessages';\n\nconst Enrollment = () => {\n    const { t } = useTranslation(); // Translation hook\n    const navigate = useNavigate(); // Navigation hook\n\n    // State variables\n    const [email, setEmail] = useState();\n    const [stores, setStores] = useState([]);\n    const [selectedRole, setSelectedRole] = useState({});\n\n    const token = getCookie('token'); // Get authentication token from cookies\n\n    // Fetch stores from the server\n    const fetchStores = () => {\n        fetch(ALL_STORES, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`\n            },\n        })\n            .then(response => response.json())\n            .then(data => setStores(data))\n            .catch(error => console.error('Error fetching stores:', error));\n    };\n\n    // Fetch stores on component mount\n    useEffect(() => {\n        fetchStores();\n        console.log('stores', stores)\n    }, []);\n\n    // Generate role options for the select dropdown\n    // TODO make proper parsing for API\n    const roleOptions = [\n        ...stores.map((store) => (\n            { value: store.name, label: t('manager_of') + store.name }\n        )),\n        { value: Role.ADMNISTRATOR, label: t('admin') },\n        { value: t('test'), label: t('test') },\n    ];\n\n    // Post enrollment data to the server\n    const postEnrollment = () => {\n        console.log('IN POST selectedRole', selectedRole)\n        const payload = {\n            contact_data: email,\n            // user_status: selectedRole\n            user_status: 'Administrator'\n        };\n\n        fetch(USER_FLAGS, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`\n            },\n            body: JSON.stringify(payload)\n        })\n            .then(response => {\n                if (response.ok) {\n                    alert(t('enrollment_successful'));\n                } else {\n                    return response.json().then((errorText) => {\n                        throw new Error(errorText.detail);\n                    });\n                }\n            })\n            .catch(error => {\n                alert(ERR_POSTING_ENROLLMENT + ' ' + error.message);\n            });\n    };\n\n    // Handle role change in the select dropdown\n    const handleRoleChange = (event) => {\n        setSelectedRole(event.target.value);\n        console.log(event.target.value)\n    };\n\n    // Prevent user from switching to a new line by hitting [Enter]\n    const handleFieldKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n        }\n    };\n\n    // Handle enroll button click\n    const handleEnrollClick = () => {\n        postEnrollment();\n    };\n\n    return (\n        <>\n            <h1>{t('enrollment')}</h1>\n\n            <p>{t('enter_one_of_the_following_to_identify_user')}</p>\n{/* \n            <textarea\n                title={t('enter_username')}\n                className='username'\n                rows='1'\n                value={username}\n                onChange={e => setUsername(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_username')}\n            /> */}\n\n            <textarea\n                title={t('enter_email')}\n                className='email'\n                rows='1'\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_email')}\n            />\n\n            <p>{t('select_role')}</p>\n            <select title='roles' className='select' onChange={handleRoleChange}>\n                {roleOptions.map(e => <option key={e.value} value={e.value}>{e.label}</option>)}\n            </select>\n\n            <div className='button-container'>\n                <button type='button' className='button accent' onClick={handleEnrollClick}>{t('enroll')}</button>\n            </div>\n        </>\n    );\n};\n\nexport default Enrollment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}