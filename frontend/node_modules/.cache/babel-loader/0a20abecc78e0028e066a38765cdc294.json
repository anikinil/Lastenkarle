{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/enrollment/pages/Enrollment.js\";\n//Page shown to Admins and/or managers to enroll users as admins or managers\nimport React, { useState, startTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\nimport { USER_FLAGS } from '../../../constants/URIs/AdminURIs';\nconst storesLst = [{\n  id: 1,\n  name: 'Store 1'\n}, {\n  id: 2,\n  name: 'Store 2'\n}, {\n  id: 3,\n  name: 'Store 3'\n}, {\n  id: 4,\n  name: 'Store 4'\n}];\nconst Enrollment = () => {\n  const {\n    t\n  } = useTranslation();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState();\n  const [email, setEmail] = useState();\n\n  // NOTE change when fetching implemented to:\n  // const [stores, setStores] = useState([]);\n  const [stores, setStores] = useState(storesLst);\n  const [selectedRole, setSelectedRole] = useState({});\n\n  // TODO token acquisition from cookie\n  const [token, setToken] = useState();\n\n  // NOTE when fetching implemented\n  // const fetchStores= () => {\n  //     fetch(ALL_STORES, {\n  //         headers: {\n  //             'Content-Type': 'application/json',\n  //             'Authorization': `Token ${token}`\n  //         },\n  //     })\n  //         .then(response => {\n  //             return response.json()\n  //         })\n  //         .then(data => {\n  //             setStores(data)\n  //         })\n  // }\n  // useEffect(() => {\n  //     fetchStores();\n  // }, [])\n\n  // THINK if variables for labels needed\n  const roleOptions = [...stores.map(store => ({\n    value: store.name,\n    label: t('manager_of') + store.name\n  })), {\n    value: t('admin'),\n    label: 'admin'\n  }];\n  const postEnrollment = () => {\n    let payload = {\n      contact_data: email,\n      user_status: selectedRole\n    };\n\n    // post enrollment request\n    // JAN maybe a dedicated URI for enrollment, for better encapsulation\n    fetch(USER_FLAGS, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(payload)\n    }).then(response => {\n      if (response) {\n        alert(t('enrollment_successful'));\n      } else {\n        return response.json().then(errorText => {\n          throw new Error(errorText.detail);\n        });\n      }\n    }).catch(error => {\n      // TODO proper error handling\n      // TODO proper error variable\n      alert('ERR_POSTING_ENROLLMENT' + ' ' + error.message);\n    });\n  };\n  const handleRoleChange = selectedRoleOption => {\n    setSelectedRole(selectedRoleOption.value);\n  };\n\n  // this prevents user from switching to new line by hitting [Enter]\n  const handleFieldKeyDown = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n    }\n  };\n  const handleEnrollClick = () => {\n    postEnrollment();\n    // TODO notify on success/failure perhaps via alert (in this line)\n    // TODO add proper variable\n    navigate('/');\n  };\n  return (\n    /*#__PURE__*/\n    // TODO use SingleLineInput component\n    React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, t('enrollment')), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, t('enter_one_of_the_following_to_identify_user')), /*#__PURE__*/React.createElement(\"textarea\", {\n      title: t('enter_username'),\n      className: \"username\",\n      rows: \"1\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      onKeyDown: handleFieldKeyDown,\n      placeholder: t('enter_username'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      title: t('enter_email'),\n      className: \"email\",\n      rows: \"1\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      onKeyDown: handleFieldKeyDown,\n      placeholder: t('enter_email'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, t('select_role')), /*#__PURE__*/React.createElement(\"select\", {\n      title: \"roles\",\n      className: \"select\",\n      onChange: handleRoleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, roleOptions.map(e => /*#__PURE__*/React.createElement(\"option\", {\n      key: e.value,\n      value: e.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 39\n      }\n    }, e.label)), \";\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"button accent\",\n      onClick: handleEnrollClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, t('enroll'))))\n  );\n};\nexport default Enrollment;","map":{"version":3,"names":["React","useState","startTransition","useTranslation","useNavigate","USER_FLAGS","storesLst","id","name","Enrollment","t","navigate","username","setUsername","email","setEmail","stores","setStores","selectedRole","setSelectedRole","token","setToken","roleOptions","map","store","value","label","postEnrollment","payload","contact_data","user_status","fetch","method","headers","body","JSON","stringify","then","response","alert","json","errorText","Error","detail","catch","error","message","handleRoleChange","selectedRoleOption","handleFieldKeyDown","event","key","preventDefault","handleEnrollClick","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","className","rows","onChange","e","target","onKeyDown","placeholder","type","onClick"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/enrollment/pages/Enrollment.js"],"sourcesContent":["//Page shown to Admins and/or managers to enroll users as admins or managers\nimport React, { useState, startTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useNavigate } from 'react-router-dom';\n\nimport { USER_FLAGS } from '../../../constants/URIs/AdminURIs'\n\nconst storesLst = [\n    { id: 1, name: 'Store 1' },\n    { id: 2, name: 'Store 2' },\n    { id: 3, name: 'Store 3' },\n    { id: 4, name: 'Store 4' }\n]\n\nconst Enrollment = () => {\n\n    const { t } = useTranslation();\n\n    const navigate = useNavigate();\n\n    const [username, setUsername] = useState();\n    const [email, setEmail] = useState();\n\n    // NOTE change when fetching implemented to:\n    // const [stores, setStores] = useState([]);\n    const [stores, setStores] = useState(storesLst);\n    const [selectedRole, setSelectedRole] = useState({});\n\n    // TODO token acquisition from cookie\n    const [token, setToken] = useState()\n\n    // NOTE when fetching implemented\n    // const fetchStores= () => {\n    //     fetch(ALL_STORES, {\n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //             'Authorization': `Token ${token}`\n    //         },\n    //     })\n    //         .then(response => {\n    //             return response.json()\n    //         })\n    //         .then(data => {\n    //             setStores(data)\n    //         })\n    // }\n    // useEffect(() => {\n    //     fetchStores();\n    // }, [])\n\n    // THINK if variables for labels needed\n    const roleOptions = [...stores.map((store) => (\n        { value: store.name, label: t('manager_of') + store.name }\n    )), { value: t('admin'), label: 'admin' }];\n\n    const postEnrollment = () => {\n\n        let payload = {\n            contact_data: email,\n            user_status: selectedRole\n        };\n\n        // post enrollment request\n        // JAN maybe a dedicated URI for enrollment, for better encapsulation\n        fetch(USER_FLAGS, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`\n            },\n            body: JSON.stringify(payload)\n        })\n            .then(response => {\n                if (response) {\n                    alert(t('enrollment_successful'));\n                }\n                else {\n                    return response.json().then((errorText) => {\n                        throw new Error(errorText.detail);\n                    });\n                }\n            })\n            .catch(error => {\n                // TODO proper error handling\n                // TODO proper error variable\n                alert('ERR_POSTING_ENROLLMENT' + ' ' + error.message);\n            })\n    }\n\n    const handleRoleChange = (selectedRoleOption) => {\n        setSelectedRole(selectedRoleOption.value)\n    }\n\n    // this prevents user from switching to new line by hitting [Enter]\n    const handleFieldKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n        }\n    };\n\n    const handleEnrollClick = () => {\n        postEnrollment()\n        // TODO notify on success/failure perhaps via alert (in this line)\n        // TODO add proper variable\n        navigate('/')\n    }\n\n    return (\n        // TODO use SingleLineInput component\n        <>\n            <h1>{t('enrollment')}</h1>\n\n            <p>{t('enter_one_of_the_following_to_identify_user')}</p>\n\n            <textarea\n                title={t('enter_username')}\n                className='username'\n                rows='1'\n                value={username}\n                onChange={e => setUsername(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_username')}\n            >\n            </textarea>\n\n            <textarea\n                title={t('enter_email')}\n                className='email'\n                rows='1'\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_email')}\n            >\n            </textarea>\n\n            {/* TODO style */}\n\n            <p>{t('select_role')}</p>\n            <select title='roles' className='select' onChange={handleRoleChange}>\n                {roleOptions.map(e => <option key={e.value} value={e.value}>{e.label}</option>)};\n            </select>\n            \n            <div className='button-container'>\n                <button type='button' className='button accent' onClick={handleEnrollClick}>{t('enroll')}</button>\n            </div>\n        </>\n    );\n};\n\nexport default Enrollment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}