{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/components/LanguageToggle.js\";\nimport i18n from \"i18next\";\nimport { getLangDataByCode, langData } from \"../utils/languageToggle\";\nimport React, { useEffect, useState } from \"react\";\nconst LanguageToggle = () => {\n  const langs = langData;\n  const [currLang, setCurrLang] = useState(getLangDataByCode(i18n.language));\n  useEffect(() => {\n    // Set the current language to match i18n.language when the component mounts\n    console.log(\"LANG: \" + getLangDataByCode(i18n.language).label);\n    setCurrLang(getLangDataByCode(i18n.language));\n  }, []); // Empty dependency array ensures the effect runs only once on mount\n\n  const switchLangauge = () => {\n    const nextIdx = langs.indexOf(currLang) + 1;\n    const nextLang = nextIdx < langs.length ? langs[nextIdx] : langs[0];\n    setCurrLang(nextLang);\n    i18n.changeLanguage(nextLang.code);\n  };\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"language-toggle\",\n    onClick: switchLangauge,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, currLang.label);\n};\nexport default LanguageToggle;","map":{"version":3,"names":["i18n","getLangDataByCode","langData","React","useEffect","useState","LanguageToggle","langs","currLang","setCurrLang","language","console","log","label","switchLangauge","nextIdx","indexOf","nextLang","length","changeLanguage","code","createElement","className","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/components/LanguageToggle.js"],"sourcesContent":["\nimport i18n from \"i18next\";\nimport { getLangDataByCode, langData } from \"../utils/languageToggle\";\nimport React, { useEffect, useState } from \"react\";\n\nconst LanguageToggle = () => {\n\n    const langs = langData;\n    const [currLang, setCurrLang] = useState(getLangDataByCode(i18n.language))\n    \n    useEffect(() => {\n        // Set the current language to match i18n.language when the component mounts\n        console.log(\"LANG: \" + getLangDataByCode(i18n.language).label)\n        setCurrLang(getLangDataByCode(i18n.language));\n    }, []); // Empty dependency array ensures the effect runs only once on mount\n\n\n    const switchLangauge = () => {\n        const nextIdx = langs.indexOf(currLang) + 1;\n        const nextLang = nextIdx < langs.length ? langs[nextIdx] : langs[0]\n        setCurrLang(nextLang)\n        i18n.changeLanguage(nextLang.code)\n    }\n\n    return (\n        <button className='language-toggle' onClick={switchLangauge}>{currLang.label}</button>\n    );\n}\n\nexport default LanguageToggle;"],"mappings":";AACA,OAAOA,IAAI,MAAM,SAAS;AAC1B,SAASC,iBAAiB,EAAEC,QAAQ,QAAQ,yBAAyB;AACrE,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAEzB,MAAMC,KAAK,GAAGL,QAAQ;EACtB,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAACJ,iBAAiB,CAACD,IAAI,CAACU,QAAQ,CAAC,CAAC;EAE1EN,SAAS,CAAC,MAAM;IACZ;IACAO,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGX,iBAAiB,CAACD,IAAI,CAACU,QAAQ,CAAC,CAACG,KAAK,CAAC;IAC9DJ,WAAW,CAACR,iBAAiB,CAACD,IAAI,CAACU,QAAQ,CAAC,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAGR,MAAMI,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,OAAO,GAAGR,KAAK,CAACS,OAAO,CAACR,QAAQ,CAAC,GAAG,CAAC;IAC3C,MAAMS,QAAQ,GAAGF,OAAO,GAAGR,KAAK,CAACW,MAAM,GAAGX,KAAK,CAACQ,OAAO,CAAC,GAAGR,KAAK,CAAC,CAAC,CAAC;IACnEE,WAAW,CAACQ,QAAQ,CAAC;IACrBjB,IAAI,CAACmB,cAAc,CAACF,QAAQ,CAACG,IAAI,CAAC;EACtC,CAAC;EAED,oBACIjB,KAAA,CAAAkB,aAAA;IAAQC,SAAS,EAAC,iBAAiB;IAACC,OAAO,EAAET,cAAe;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAErB,QAAQ,CAACK,KAAc,CAAC;AAE9F,CAAC;AAED,eAAeP,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}