{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/bikeDisplay/pages/BikePage.js\";\n//Page of singular Bike\n//Consists of a Name, Picture, Description and Information about the store it belongs to\n//Also has BikeCalendar which is component to make a reservation\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport PictureAndDescriptionField from '../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField';\nimport BikeCalendar from '../../booking/components/calendar/BikeCalendar';\nimport AddressField from '../../../components/display/addressField/AddressField';\nimport { BIKES_OF_STORE } from '../../../constants/URIs/ManagerURI';\nimport { BIKE_BY_ID } from '../../../constants/URIs/BookingURIs';\n\n// TODO implement fetching\n//TODO: Add calandar as availability overview\nconst bikes = [{\n  id: 1,\n  name: 'Lastenrad 1',\n  image: require('../../../assets/images/bike1.jpg'),\n  description: 'This is a description of Bike 1!',\n  storeId: 2\n}, {\n  id: 2,\n  name: 'Lastenrad 2',\n  image: require('../../../assets/images/bike2.jpg'),\n  description: 'This is a description of Bike 2!',\n  storeId: 3\n}, {\n  id: 3,\n  name: 'Lastenrad 3',\n  image: require('../../../assets/images/bike3.jpg'),\n  description: 'This is a description of Bike 3!',\n  storeId: 1\n}, {\n  id: 4,\n  name: 'Lastenrad 4',\n  image: require('../../../assets/images/bike4.jpg'),\n  description: 'This is a description of Bike 4!',\n  storeId: 3\n}, {\n  id: 5,\n  name: 'Lastenrad 5',\n  image: '',\n  description: 'This is a description of Bike 5!',\n  storeId: 2\n}];\nlet stores = [{\n  id: 1,\n  name: 'Store 1',\n  image: require('../../../assets/images/store1.jpg'),\n  description: 'This is a description of Store 1',\n  address: 'Musterstraße 123, 76137 Karlsruhe'\n}, {\n  id: 2,\n  name: 'Store 2',\n  image: require('../../../assets/images/store1.jpg').default,\n  description: 'This is a description of Store 2',\n  address: 'Musterstraße 123, 76137 Karlsruhe'\n}, {\n  id: 3,\n  name: 'Store 3',\n  image: null,\n  description: 'This is a description of Store 3',\n  address: 'Musterstraße 123, 76137 Karlsruhe'\n}];\nconst BikePage = () => {\n  const {\n    t\n  } = useTranslation();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const bike = bikes.find(b => b.id === parseInt(id));\n  const store = stores.find(s => s.id === parseInt(bike.storeId));\n  const fetchBike = () => {\n    fetch(BIKE_BY_ID.replace(ID, params.id)).then(response => response.json()).then(data => {\n      setStore(data);\n    }).catch(error => {\n      console.error(ERR_FETCHING_STORE, error);\n    });\n  };\n  useEffect(() => {\n    fetchBike();\n  }, []);\n  const handleStoreClick = () => {\n    navigate(`/store/${store.id}`);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, bike.name), /*#__PURE__*/React.createElement(PictureAndDescriptionField, {\n    editable: false,\n    object: bike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AddressField, {\n    editable: false,\n    object: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button regular\",\n    onClick: handleStoreClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, t('store'))), /*#__PURE__*/React.createElement(BikeCalendar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }));\n};\nexport default BikePage;","map":{"version":3,"names":["React","useEffect","useState","useTranslation","useNavigate","useParams","PictureAndDescriptionField","BikeCalendar","AddressField","BIKES_OF_STORE","BIKE_BY_ID","bikes","id","name","image","require","description","storeId","stores","address","default","BikePage","t","navigate","bike","find","b","parseInt","store","s","fetchBike","fetch","replace","ID","params","then","response","json","data","setStore","catch","error","console","ERR_FETCHING_STORE","handleStoreClick","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","editable","object","className","type","onClick"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/bikeDisplay/pages/BikePage.js"],"sourcesContent":["//Page of singular Bike\n//Consists of a Name, Picture, Description and Information about the store it belongs to\n//Also has BikeCalendar which is component to make a reservation\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\n\nimport { useNavigate, useParams } from 'react-router-dom';\nimport PictureAndDescriptionField from '../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField';\nimport BikeCalendar from '../../booking/components/calendar/BikeCalendar'\nimport AddressField from '../../../components/display/addressField/AddressField';\nimport { BIKES_OF_STORE } from '../../../constants/URIs/ManagerURI';\nimport { BIKE_BY_ID } from '../../../constants/URIs/BookingURIs';\n\n// TODO implement fetching\n//TODO: Add calandar as availability overview\nconst bikes = [\n    {\n        id: 1,\n        name: 'Lastenrad 1',\n        image: require('../../../assets/images/bike1.jpg'),\n        description: 'This is a description of Bike 1!',\n        storeId: 2\n    },\n    {\n        id: 2,\n        name: 'Lastenrad 2',\n        image: require('../../../assets/images/bike2.jpg'),\n        description: 'This is a description of Bike 2!',\n        storeId: 3\n    },\n    {\n        id: 3,\n        name: 'Lastenrad 3',\n        image: require('../../../assets/images/bike3.jpg'),\n        description: 'This is a description of Bike 3!',\n        storeId: 1\n    },\n    {\n        id: 4,\n        name: 'Lastenrad 4',\n        image: require('../../../assets/images/bike4.jpg'),\n        description: 'This is a description of Bike 4!',\n        storeId: 3\n    },\n    {\n        id: 5,\n        name: 'Lastenrad 5',\n        image: '',\n        description: 'This is a description of Bike 5!',\n        storeId: 2\n    }\n]\nlet stores = [\n    {\n        id: 1,\n        name: 'Store 1',\n        image: require('../../../assets/images/store1.jpg'),\n        description: 'This is a description of Store 1',\n        address: 'Musterstraße 123, 76137 Karlsruhe'\n    },\n    {\n        id: 2,\n        name: 'Store 2',\n        image: require('../../../assets/images/store1.jpg').default,\n        description: 'This is a description of Store 2',\n        address: 'Musterstraße 123, 76137 Karlsruhe'\n    },\n    {\n        id: 3,\n        name: 'Store 3',\n        image: null,\n        description: 'This is a description of Store 3',\n        address: 'Musterstraße 123, 76137 Karlsruhe'\n    }\n]\n\nconst BikePage = () => {\n\n    const { t } = useTranslation();\n    const navigate = useNavigate();\n\n    const { id } = useParams();\n    const bike = bikes.find(b => b.id === parseInt(id));\n    const store = stores.find(s => s.id === parseInt(bike.storeId))\n\n    const fetchBike = () => {\n        fetch(BIKE_BY_ID.replace(ID, params.id))\n            .then(response => response.json())\n            .then(data => {\n                setStore(data);\n            })\n            .catch(error => {\n                console.error(ERR_FETCHING_STORE, error);\n            });\n    }\n\n    useEffect(() => {\n        fetchBike();\n    }, [])\n\n    const handleStoreClick = () => {\n        navigate(`/store/${store.id}`)\n    }\n\n    return (\n        <>\n            <h1>{bike.name}</h1>\n\n            <PictureAndDescriptionField editable={false} object={bike} />\n            <AddressField editable={false} object={store} />\n\n            <div className='button-container'>\n                <button type='button' className='button regular' onClick={handleStoreClick}>{t('store')}</button>\n            </div>\n\n            <BikeCalendar />\n        </>\n    );\n};\n\nexport default BikePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}