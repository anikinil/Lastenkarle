{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/booking/components/calendar/BikeCalendar.js\";\n// Calendar for page of a singular bike\n// TODO: Calendar with two months in advance view\n// TODO: Legend for Colours (available, booked, closed, unavailable)\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css'; // Standard-Styles von react-calendar importieren\n\nconst CalendarComponent = ({\n  onChange\n}) => {\n  const [date, setDate] = useState(new Date());\n\n  // Mock-Daten direkt im Code\n  const availabilities = [{\n    date: '2024-07-01',\n    status: 'available'\n  }, {\n    date: '2024-07-02',\n    status: 'booked'\n  }, {\n    date: '2024-07-03',\n    status: 'closed'\n  }\n  // Weitere Verfügbarkeiten hier...\n  ];\n  const handleDateChange = date => {\n    setDate(date);\n    onChange(date);\n  };\n  const tileClassName = ({\n    date,\n    view\n  }) => {\n    if (view === 'month') {\n      const dateString = date.toISOString().split('T')[0];\n      const availability = availabilities.find(a => a.date === dateString);\n      if (availability) {\n        if (availability.status === 'available') {\n          return 'react-calendar__tile--available';\n        } else if (availability.status === 'booked') {\n          return 'react-calendar__tile--booked';\n        } else if (availability.status === 'closed') {\n          return 'react-calendar__tile--closed';\n        }\n      }\n    }\n    return '';\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    onChange: handleDateChange,\n    value: date,\n    tileClassName: tileClassName,\n    minDetail: \"month\",\n    maxDetail: \"month\",\n    activeStartDate: new Date() // Startdatum ist der aktuelle Monat\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }));\n};\nexport default CalendarComponent;","map":{"version":3,"names":["React","useState","Calendar","CalendarComponent","onChange","date","setDate","Date","availabilities","status","handleDateChange","tileClassName","view","dateString","toISOString","split","availability","find","a","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","value","minDetail","maxDetail","activeStartDate"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/booking/components/calendar/BikeCalendar.js"],"sourcesContent":["// Calendar for page of a singular bike\n// TODO: Calendar with two months in advance view\n// TODO: Legend for Colours (available, booked, closed, unavailable)\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css'; // Standard-Styles von react-calendar importieren\n\nconst CalendarComponent = ({ onChange }) => {\n    const [date, setDate] = useState(new Date());\n\n    // Mock-Daten direkt im Code\n    const availabilities = [\n        { date: '2024-07-01', status: 'available' },\n        { date: '2024-07-02', status: 'booked' },\n        { date: '2024-07-03', status: 'closed' },\n        // Weitere Verfügbarkeiten hier...\n    ];\n\n    const handleDateChange = (date) => {\n        setDate(date);\n        onChange(date);\n    };\n\n    const tileClassName = ({ date, view }) => {\n        if (view === 'month') {\n            const dateString = date.toISOString().split('T')[0];\n            const availability = availabilities.find(a => a.date === dateString);\n            if (availability) {\n                if (availability.status === 'available') {\n                    return 'react-calendar__tile--available';\n                } else if (availability.status === 'booked') {\n                    return 'react-calendar__tile--booked';\n                } else if (availability.status === 'closed') {\n                    return 'react-calendar__tile--closed';\n                }\n            }\n        }\n        return '';\n    };\n\n    return (\n        <div>\n            <Calendar\n                onChange={handleDateChange}\n                value={date}\n                tileClassName={tileClassName}\n                minDetail=\"month\"\n                maxDetail=\"month\"\n                activeStartDate={new Date()} // Startdatum ist der aktuelle Monat\n            />\n        </div>\n    );\n};\n\nexport default CalendarComponent;"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,kCAAkC,CAAC,CAAC;;AAE3C,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACxC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAIM,IAAI,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMC,cAAc,GAAG,CACnB;IAAEH,IAAI,EAAE,YAAY;IAAEI,MAAM,EAAE;EAAY,CAAC,EAC3C;IAAEJ,IAAI,EAAE,YAAY;IAAEI,MAAM,EAAE;EAAS,CAAC,EACxC;IAAEJ,IAAI,EAAE,YAAY;IAAEI,MAAM,EAAE;EAAS;EACvC;EAAA,CACH;EAED,MAAMC,gBAAgB,GAAIL,IAAI,IAAK;IAC/BC,OAAO,CAACD,IAAI,CAAC;IACbD,QAAQ,CAACC,IAAI,CAAC;EAClB,CAAC;EAED,MAAMM,aAAa,GAAGA,CAAC;IAAEN,IAAI;IAAEO;EAAK,CAAC,KAAK;IACtC,IAAIA,IAAI,KAAK,OAAO,EAAE;MAClB,MAAMC,UAAU,GAAGR,IAAI,CAACS,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACnD,MAAMC,YAAY,GAAGR,cAAc,CAACS,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACb,IAAI,KAAKQ,UAAU,CAAC;MACpE,IAAIG,YAAY,EAAE;QACd,IAAIA,YAAY,CAACP,MAAM,KAAK,WAAW,EAAE;UACrC,OAAO,iCAAiC;QAC5C,CAAC,MAAM,IAAIO,YAAY,CAACP,MAAM,KAAK,QAAQ,EAAE;UACzC,OAAO,8BAA8B;QACzC,CAAC,MAAM,IAAIO,YAAY,CAACP,MAAM,KAAK,QAAQ,EAAE;UACzC,OAAO,8BAA8B;QACzC;MACJ;IACJ;IACA,OAAO,EAAE;EACb,CAAC;EAED,oBACIT,KAAA,CAAAmB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIzB,KAAA,CAAAmB,aAAA,CAACjB,QAAQ;IACLE,QAAQ,EAAEM,gBAAiB;IAC3BgB,KAAK,EAAErB,IAAK;IACZM,aAAa,EAAEA,aAAc;IAC7BgB,SAAS,EAAC,OAAO;IACjBC,SAAS,EAAC,OAAO;IACjBC,eAAe,EAAE,IAAItB,IAAI,CAAC,CAAE,CAAC;IAAA;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAChC,CACA,CAAC;AAEd,CAAC;AAED,eAAetB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module"}