{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/Register.js\";\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { REGISTER, LOGIN } from '../constants/URIs/UserURIs';\nconst Register = () => {\n  const {\n    t\n  } = useTranslation();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [password, setPassword] = useState('');\n  const [token, setToken] = useState();\n  const handleSubmitClick = () => {\n    postRegister();\n    setTokenCookie();\n  };\n  const postRegister = () => {\n    let payload = {\n      contact_data: contactData,\n      username: username,\n      password: password\n    };\n    if (yearOfBirth !== '') {\n      payload.year_of_birth = yearOfBirth;\n    }\n\n    // Send the POST request to the server endpoint\n    fetch(REGISTER, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    })\n    // TODO check if async causing problems\n    .then(async response => {\n      if (response.ok) {\n        const text = await response.text();\n        if (!text.trim()) {\n          postLogin();\n        } else {\n          return JSON.parse(text);\n        }\n      } else {\n        // If the request was not successful, throw an error\n        const errorData = await response.json();\n        throw new Error(errorData.message);\n      }\n    }).catch(error => {\n      // TODO add error message constants\n      // Handle any network or other errors that occurred during the request\n      alert(ERR_MAKING_REGISTER_REQUEST + ' ' + error.message);\n    });\n  };\n\n  // POST login request after successful registration\n  const postLogin = () => {\n    let payload = {\n      username: username,\n      password: password\n    };\n\n    // POST login request\n    fetch(LOGIN, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    })\n    // TODO check if async causing problems\n    .then(async response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        // If the request was not successful, throw an error\n        const errorData = await response.json();\n        throw new Error(errorData.message);\n      }\n    }).then(data => {\n      setToken(data.token);\n      navigateToNextPage();\n    }).catch(error => {\n      // TODO remove magic number\n      // Handle any network or other errors that occurred during the request\n      alert('Error making login request: ' + error.message);\n    });\n  };\n  const handleHelmholtzRegistrationClick = () => {\n    window.location.replace(URL_USER_HELMHOLTZ);\n  };\n  const setTokenCookie = () => {\n    var days = 1;\n    const expirationDate = new Date();\n    expirationDate.setDate(expirationDate.getDate() + days);\n    document.cookie = `${'token'}=${token}; expires=${expirationDate.toUTCString()}; path=/`;\n  };\n\n  // this prevents user from switching to new line by hitting [Enter]\n  const handleFieldKeyDown = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n    }\n  };\n  const navigateToNextPage = () => {\n    navigate('/');\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, t('register')), /*#__PURE__*/React.createElement(\"textarea\", {\n    title: t('enter_username'),\n    className: \"username\",\n    rows: \"1\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    onKeyDown: handleFieldKeyDown,\n    placeholder: t('enter_username'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    title: t('enter_email'),\n    className: \"email\",\n    rows: \"1\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    onKeyDown: handleFieldKeyDown,\n    placeholder: t('enter_email'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    title: t('enter_first_name'),\n    className: \"first_name\",\n    rows: \"1\",\n    value: firstName,\n    onChange: e => setFirstName(e.target.value),\n    onKeyDown: handleFieldKeyDown,\n    placeholder: t('enter_first_name'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    title: t('enter_last_name'),\n    className: \"last_name\",\n    rows: \"1\",\n    value: lastName,\n    onChange: e => setLastName(e.target.value),\n    onKeyDown: handleFieldKeyDown,\n    placeholder: t('enter_last_name'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    title: t('enter_password'),\n    className: \"password\",\n    rows: \"1\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    onKeyDown: handleFieldKeyDown,\n    placeholder: t('enter_password'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmitClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, t('submit')), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleHelmholtzRegistrationClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, t('helmholtz_registration')));\n};\nexport default Register;","map":{"version":3,"names":["React","useState","useTranslation","REGISTER","LOGIN","Register","t","username","setUsername","email","setEmail","firstName","setFirstName","lastName","setLastName","password","setPassword","token","setToken","handleSubmitClick","postRegister","setTokenCookie","payload","contact_data","contactData","yearOfBirth","year_of_birth","fetch","method","headers","body","JSON","stringify","then","response","ok","text","trim","postLogin","parse","errorData","json","Error","message","catch","error","alert","ERR_MAKING_REGISTER_REQUEST","data","navigateToNextPage","handleHelmholtzRegistrationClick","window","location","replace","URL_USER_HELMHOLTZ","days","expirationDate","Date","setDate","getDate","document","cookie","toUTCString","handleFieldKeyDown","event","key","preventDefault","navigate","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","className","rows","value","onChange","e","target","onKeyDown","placeholder","type","onClick"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { REGISTER, LOGIN } from '../constants/URIs/UserURIs';\n\nconst Register = () => {\n\n    const { t } = useTranslation();\n\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [token, setToken] = useState()\n\n    const handleSubmitClick = () => {\n        postRegister();\n        setTokenCookie();\n    }\n\n    const postRegister = () => {\n\n        let payload = {\n            contact_data: contactData,\n            username: username,\n            password: password,\n        };\n\n        if (yearOfBirth !== '') {\n            payload.year_of_birth = yearOfBirth;\n        }\n\n        // Send the POST request to the server endpoint\n        fetch(REGISTER, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n        })\n            // TODO check if async causing problems\n            .then(async response => {\n                if (response.ok) {\n                    const text = await response.text();\n                    if (!text.trim()) {\n                        postLogin();\n                    } else {\n                        return JSON.parse(text);\n                    }\n\n                }\n                else {\n                    // If the request was not successful, throw an error\n                    const errorData = await response.json();\n                    throw new Error(errorData.message);\n                }\n            })\n            .catch(error => {\n                // TODO add error message constants\n                // Handle any network or other errors that occurred during the request\n                alert(ERR_MAKING_REGISTER_REQUEST + ' ' + error.message);\n            });\n    }\n\n    // POST login request after successful registration\n    const postLogin = () => {\n\n        let payload = {\n            username: username,\n            password: password\n        };\n\n        // POST login request\n        fetch(LOGIN, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(payload)\n        })\n            // TODO check if async causing problems\n            .then(async response => {\n                if (response.ok) {\n                    return response.json();\n                } else {\n                    // If the request was not successful, throw an error\n                    const errorData = await response.json();\n                    throw new Error(errorData.message);\n                }\n            })\n            .then(data => {\n                setToken(data.token);\n                navigateToNextPage();\n            })\n            .catch(error => {\n                // TODO remove magic number\n                // Handle any network or other errors that occurred during the request\n                alert('Error making login request: ' + error.message);\n            });\n    }\n\n    const handleHelmholtzRegistrationClick = () => {\n        window.location.replace(URL_USER_HELMHOLTZ);\n    }\n\n    const setTokenCookie = () => {\n        var days = 1\n        const expirationDate = new Date();\n        expirationDate.setDate(expirationDate.getDate() + days);\n        document.cookie = `${'token'}=${token}; expires=${expirationDate.toUTCString()}; path=/`;\n    };\n\n    // this prevents user from switching to new line by hitting [Enter]\n    const handleFieldKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n        }\n    };\n\n    const navigateToNextPage = () => {\n        navigate('/')\n    }\n\n    return (\n        <>\n            <h1>{t('register')}</h1>\n\n            <textarea\n                title={t('enter_username')}\n                className='username'\n                rows='1'\n                value={username}\n                onChange={e => setUsername(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_username')}\n            >\n            </textarea>\n\n            <textarea\n                title={t('enter_email')}\n                className='email'\n                rows='1'\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_email')}\n            >\n            </textarea>\n\n            <textarea\n                title={t('enter_first_name')}\n                className='first_name'\n                rows='1'\n                value={firstName}\n                onChange={e => setFirstName(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_first_name')}\n            >\n            </textarea>\n\n            <textarea\n                title={t('enter_last_name')}\n                className='last_name'\n                rows='1'\n                value={lastName}\n                onChange={e => setLastName(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_last_name')}\n            >\n            </textarea>\n\n            <textarea\n                title={t('enter_password')}\n                className='password'\n                rows='1'\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_password')}\n            >\n            </textarea>\n\n            <input type='text' value={username} onChange={e => setUsername(e.target.value)}></input>\n            <button onClick={handleSubmitClick}>{t('submit')}</button>\n\n            {/* TODO should be defined as \"Register via Helmholtz AAI\" in translation files */}\n            <button onClick={handleHelmholtzRegistrationClick}>{t('helmholtz_registration')}</button>\n        </>\n    );\n};\n\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}