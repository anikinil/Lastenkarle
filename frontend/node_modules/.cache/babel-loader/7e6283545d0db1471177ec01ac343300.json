{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/bikeBooking/pages/BikeBookingPage.js\";\n// Page of singular Bike\n// Consists of a Name, Picture, Description and Information about the store it belongs to\n// Also has BikeCalendar which is component to make a reservation\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport PictureAndDescriptionField from '../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField';\nimport SingleLineTextField from '../../../components/display/SingleLineTextField';\nimport BikeCalendar from '../../booking/components/calendar/BikeCalendar';\nimport { ID } from '../../../constants/URIs/General';\nimport { BIKE_BY_ID, STORE_BY_BIKE_ID } from '../../../constants/URIs/BookingURIs';\nimport { ERR_FETCHING_BIKE, ERR_FETCHING_STORE } from '../../../constants/ErrorMessages';\nimport { getCookie } from '../../../services/Cookies';\n\n// const bike = {\n//     id: 1,\n//     name: 'Lastenrad 1',\n//     image: require('../../../assets/images/bike1.jpg'),\n//     description: 'This is a description of Bike 1!',\n//     storeId: 2\n// }\n\n// const store = {\n//     address: 'Musterstraße 1, 12345 Musterstadt'\n// }\n\nconst BikeBookingPage = () => {\n  const {\n    t\n  } = useTranslation(); // Translation hook\n  const navigate = useNavigate(); // Navigation hook\n\n  const {\n    id\n  } = useParams(); // Get bike ID from URL parameters\n  const [bike, setBike] = useState(); // State to store bike data\n  const [store, setStore] = useState(); // State to store store data\n\n  const token = getCookie('token'); // Get authentication token from cookies\n\n  // fetch bike\n  const fetchBike = () => {\n    fetch(BIKE_BY_ID.replace(ID, id), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      setBike(data); // Set bike data to state\n    }).catch(error => {\n      console.error(ERR_FETCHING_BIKE, error); // Log error if fetching bike fails\n    });\n  };\n\n  // fetch store\n  const fetchStore = () => {\n    fetch(STORE_BY_BIKE_ID.replace(ID, id), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      setStore(data); // Set store data to state\n    }).catch(error => {\n      console.error(ERR_FETCHING_STORE, error); // Log error if fetching store fails\n    });\n  };\n\n  // Fetch bike and store data when component mounts\n  useEffect(() => {\n    fetchBike();\n    fetchStore();\n  }, []);\n\n  // Handle click on store button\n  const handleStoreClick = () => {\n    navigate(`/store/${bike.storeId}`); // Navigate to store page\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, bike.name), \" \", /*#__PURE__*/React.createElement(PictureAndDescriptionField, {\n    editable: false,\n    object: bike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SingleLineTextField, {\n    editable: false,\n    value: store.address,\n    title: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button regular\",\n    onClick: handleStoreClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, t('store')), \" \"), /*#__PURE__*/React.createElement(BikeCalendar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }));\n};\nexport default BikeBookingPage;","map":{"version":3,"names":["React","useEffect","useState","useTranslation","useNavigate","useParams","PictureAndDescriptionField","SingleLineTextField","BikeCalendar","ID","BIKE_BY_ID","STORE_BY_BIKE_ID","ERR_FETCHING_BIKE","ERR_FETCHING_STORE","getCookie","BikeBookingPage","t","navigate","id","bike","setBike","store","setStore","token","fetchBike","fetch","replace","headers","then","response","json","data","catch","error","console","fetchStore","handleStoreClick","storeId","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","name","editable","object","value","address","title","className","type","onClick"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/bikeBooking/pages/BikeBookingPage.js"],"sourcesContent":["// Page of singular Bike\n// Consists of a Name, Picture, Description and Information about the store it belongs to\n// Also has BikeCalendar which is component to make a reservation\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport PictureAndDescriptionField from '../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField';\nimport SingleLineTextField from '../../../components/display/SingleLineTextField';\nimport BikeCalendar from '../../booking/components/calendar/BikeCalendar';\nimport { ID } from '../../../constants/URIs/General';\nimport { BIKE_BY_ID, STORE_BY_BIKE_ID } from '../../../constants/URIs/BookingURIs';\nimport { ERR_FETCHING_BIKE, ERR_FETCHING_STORE } from '../../../constants/ErrorMessages';\nimport { getCookie } from '../../../services/Cookies';\n\n// const bike = {\n//     id: 1,\n//     name: 'Lastenrad 1',\n//     image: require('../../../assets/images/bike1.jpg'),\n//     description: 'This is a description of Bike 1!',\n//     storeId: 2\n// }\n\n// const store = {\n//     address: 'Musterstraße 1, 12345 Musterstadt'\n// }\n\nconst BikeBookingPage = () => {\n    const { t } = useTranslation(); // Translation hook\n    const navigate = useNavigate(); // Navigation hook\n\n    const { id } = useParams(); // Get bike ID from URL parameters\n    const [bike, setBike] = useState(); // State to store bike data\n    const [store, setStore] = useState(); // State to store store data\n\n    const token = getCookie('token'); // Get authentication token from cookies\n\n    // fetch bike\n    const fetchBike = () => {\n        fetch(BIKE_BY_ID.replace(ID, id), {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`,\n            }\n        })\n            .then(response => response.json())\n            .then(data => {\n                setBike(data); // Set bike data to state\n            })\n            .catch(error => {\n                console.error(ERR_FETCHING_BIKE, error); // Log error if fetching bike fails\n            });\n    }\n\n    // fetch store\n    const fetchStore = () => {\n        fetch(STORE_BY_BIKE_ID.replace(ID, id), {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`,\n            }\n        })\n            .then(response => response.json())\n            .then(data => {\n                setStore(data); // Set store data to state\n            })\n            .catch(error => {\n                console.error(ERR_FETCHING_STORE, error); // Log error if fetching store fails\n            });\n    }\n\n    // Fetch bike and store data when component mounts\n    useEffect(() => {\n        fetchBike();\n        fetchStore();\n    }, [])\n\n    // Handle click on store button\n    const handleStoreClick = () => {\n        navigate(`/store/${bike.storeId}`) // Navigate to store page\n    }\n\n    return (\n        <>\n            <h1>{bike.name}</h1> {/* Display bike name */}\n\n            {/* Display bike picture and description */}\n            <PictureAndDescriptionField editable={false} object={bike} />\n             {/* Display store address */}\n            <SingleLineTextField editable={false} value={store.address} title='address' />\n\n            <div className='button-container'>\n                <button type='button' className='button regular' onClick={handleStoreClick}>{t('store')}</button> {/* Button to navigate to store page */}\n            </div>\n\n            {/* Display bike calendar for reservations */}\n            <BikeCalendar />\n        </>\n    );\n};\n\nexport default BikeBookingPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}