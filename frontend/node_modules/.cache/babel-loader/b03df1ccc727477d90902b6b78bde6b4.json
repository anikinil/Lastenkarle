{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/components/lists/storeList/listVersions/StoreListAdmin.js\";\n// Import necessary libraries and components\nimport React, { useState } from 'react';\nimport { FaSortAlphaDown, FaSortAlphaUp } from 'react-icons/fa';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\nimport StoreListItemAdmin from '../listItemVersions/StoreListItemAdmin';\nconst StoreListAdmin = ({\n  stores\n}) => {\n  // Initialize translation and navigation hooks\n  const {\n    t\n  } = useTranslation();\n  const navigate = useNavigate();\n\n  // State to manage sorting order\n  const [sortAZ, setSortAZ] = useState(true);\n\n  // Handle sort button click\n  const handleSortClick = () => {\n    setSortAZ(!sortAZ);\n    resort();\n  };\n\n  // Resort the stores based on the current sorting order\n  const resort = () => {\n    stores.sort((a, b) => sortAZ ? a.name.localeCompare(b.name) : b.name.localeCompare(a.name));\n  };\n\n  // Handle new store button click\n  const handleNewStoreClick = () => {\n    navigate(STORE_REGISTRATION);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"sort-button\",\n    onClick: handleSortClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, sortAZ ? /*#__PURE__*/React.createElement(FaSortAlphaUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 31\n    }\n  }) : /*#__PURE__*/React.createElement(FaSortAlphaDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 51\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"new-store-button\",\n    onClick: handleNewStoreClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, t('add_new_store'))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, stores.map(store => /*#__PURE__*/React.createElement(StoreListItemAdmin, {\n    store: store,\n    key: store.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }))));\n};\nexport default StoreListAdmin;","map":{"version":3,"names":["React","useState","FaSortAlphaDown","FaSortAlphaUp","useTranslation","useNavigate","StoreListItemAdmin","StoreListAdmin","stores","t","navigate","sortAZ","setSortAZ","handleSortClick","resort","sort","a","b","name","localeCompare","handleNewStoreClick","STORE_REGISTRATION","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","map","store","key","id"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/components/lists/storeList/listVersions/StoreListAdmin.js"],"sourcesContent":["// Import necessary libraries and components\nimport React, { useState } from 'react';\nimport { FaSortAlphaDown, FaSortAlphaUp } from 'react-icons/fa';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\nimport StoreListItemAdmin from '../listItemVersions/StoreListItemAdmin';\n\nconst StoreListAdmin = ({ stores }) => {\n    // Initialize translation and navigation hooks\n    const { t } = useTranslation();\n    const navigate = useNavigate();\n\n    // State to manage sorting order\n    const [sortAZ, setSortAZ] = useState(true);\n\n    // Handle sort button click\n    const handleSortClick = () => {\n        setSortAZ(!sortAZ);\n        resort();\n    }\n\n    // Resort the stores based on the current sorting order\n    const resort = () => {\n        stores.sort((a, b) => sortAZ ? a.name.localeCompare(b.name) : b.name.localeCompare(a.name));\n    }\n\n    // Handle new store button click\n    const handleNewStoreClick = () => {\n        navigate(STORE_REGISTRATION);\n    }\n\n    return (\n        <>\n            {/* Buttons for sorting and adding new store */}\n            <div className='list-button-container'>\n                <button type='button' className='sort-button' onClick={handleSortClick}>\n                    {sortAZ ? <FaSortAlphaUp /> : <FaSortAlphaDown />}\n                </button>\n                <button type='button' className='new-store-button' onClick={handleNewStoreClick}>{t('add_new_store')}</button>\n            </div>\n\n            {/* List of stores */}\n            <ul className='list'>\n                {stores.map((store) => (\n                    <StoreListItemAdmin store={store} key={store.id} />\n                ))}\n            </ul>\n        </>\n    );\n};\n\nexport default StoreListAdmin;"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,EAAEC,aAAa,QAAQ,gBAAgB;AAC/D,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,kBAAkB,MAAM,wCAAwC;AAEvE,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EACnC;EACA,MAAM;IAAEC;EAAE,CAAC,GAAGL,cAAc,CAAC,CAAC;EAC9B,MAAMM,QAAQ,GAAGL,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAE1C;EACA,MAAMY,eAAe,GAAGA,CAAA,KAAM;IAC1BD,SAAS,CAAC,CAACD,MAAM,CAAC;IAClBG,MAAM,CAAC,CAAC;EACZ,CAAC;;EAED;EACA,MAAMA,MAAM,GAAGA,CAAA,KAAM;IACjBN,MAAM,CAACO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKN,MAAM,GAAGK,CAAC,CAACE,IAAI,CAACC,aAAa,CAACF,CAAC,CAACC,IAAI,CAAC,GAAGD,CAAC,CAACC,IAAI,CAACC,aAAa,CAACH,CAAC,CAACE,IAAI,CAAC,CAAC;EAC/F,CAAC;;EAED;EACA,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAC9BV,QAAQ,CAACW,kBAAkB,CAAC;EAChC,CAAC;EAED,oBACIrB,KAAA,CAAAsB,aAAA,CAAAtB,KAAA,CAAAuB,QAAA,qBAEIvB,KAAA,CAAAsB,aAAA;IAAKE,SAAS,EAAC,uBAAuB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClC9B,KAAA,CAAAsB,aAAA;IAAQS,IAAI,EAAC,QAAQ;IAACP,SAAS,EAAC,aAAa;IAACQ,OAAO,EAAEnB,eAAgB;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClEnB,MAAM,gBAAGX,KAAA,CAAAsB,aAAA,CAACnB,aAAa;IAAAsB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,gBAAG9B,KAAA,CAAAsB,aAAA,CAACpB,eAAe;IAAAuB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC5C,CAAC,eACT9B,KAAA,CAAAsB,aAAA;IAAQS,IAAI,EAAC,QAAQ;IAACP,SAAS,EAAC,kBAAkB;IAACQ,OAAO,EAAEZ,mBAAoB;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAErB,CAAC,CAAC,eAAe,CAAU,CAC5G,CAAC,eAGNT,KAAA,CAAAsB,aAAA;IAAIE,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACftB,MAAM,CAACyB,GAAG,CAAEC,KAAK,iBACdlC,KAAA,CAAAsB,aAAA,CAAChB,kBAAkB;IAAC4B,KAAK,EAAEA,KAAM;IAACC,GAAG,EAAED,KAAK,CAACE,EAAG;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACrD,CACD,CACN,CAAC;AAEX,CAAC;AAED,eAAevB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}