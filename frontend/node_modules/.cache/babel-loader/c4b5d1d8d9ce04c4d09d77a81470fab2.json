{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/Register.js\";\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { REGISTER } from '../constants/URIs/UserURIs';\nimport { useNavigate } from 'react-router-dom';\nimport { HELMHOLTZ, HOME, LOGIN } from '../constants/URLs/Navigation';\nimport { ERR_POSTING_LOGIN_REQUEST, ERR_POSTING_REGISTER_REQUEST } from '../constants/ErrorMessages';\nconst Register = () => {\n  const {\n    t\n  } = useTranslation(); // Translation hook\n  const navigate = useNavigate(); // Navigation hook\n\n  // State variables for form fields\n  const [username, setUsername] = useState('');\n  const [contactData, setContactData] = useState('');\n  const [yearOfBirth, setYearOfBirth] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [password, setPassword] = useState('');\n  const [token, setToken] = useState();\n\n  // Handle register button click\n  const handleRegisterClick = () => {\n    postRegister();\n    setTokenCookie();\n  };\n\n  // Function to post registration data\n  const postRegister = () => {\n    let payload = {\n      contact_data: contactData,\n      username: username,\n      password: password\n    };\n    if (yearOfBirth !== '') {\n      payload.year_of_birth = yearOfBirth;\n    }\n    console.log(payload);\n\n    // Send the POST request to the server endpoint\n    fetch(REGISTER, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    })\n    // TODO fix post request\n    // TODO add navigation and account for different locations where user needs to be navigated to\n    .then(async response => {\n      if (response.ok) {\n        const text = await response.text();\n        if (!text.trim()) {\n          postLogin();\n        } else {\n          return JSON.parse(text);\n        }\n      } else {\n        // If the request was not successful, throw an error\n        const errorData = await response.json();\n        throw new Error(errorData.message);\n      }\n    }).catch(error => {\n      alert(ERR_POSTING_REGISTER_REQUEST + ' ' + error.message);\n    });\n  };\n\n  // Function to post login data after successful registration\n  const postLogin = () => {\n    let payload = {\n      username: username,\n      password: password\n    };\n\n    // Send the POST request to the login endpoint\n    fetch(LOGIN, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    }).then(async response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        // If the request was not successful, throw an error\n        const errorData = await response.json();\n        throw new Error(errorData.message);\n      }\n    }).then(data => {\n      setToken(data.token);\n    }).catch(error => {\n      alert(ERR_POSTING_LOGIN_REQUEST + ' ' + error.message);\n    });\n  };\n\n  // Handle Helmholtz registration button click\n  const handleHelmholtzRegistrationClick = () => {\n    window.location.replace(HELMHOLTZ);\n  };\n\n  // Function to set token cookie\n  const setTokenCookie = () => {\n    var days = 1;\n    const expirationDate = new Date();\n    expirationDate.setDate(expirationDate.getDate() + days);\n    document.cookie = `${'token'}=${token}; expires=${expirationDate.toUTCString()}; path=/`;\n  };\n\n  // Prevent user from switching to new line by hitting [Enter]\n  const handleFieldKeyDown = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n    }\n  };\n\n  // Handle login button click\n  const handleLoginClick = () => {\n    navigate(LOGIN);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, t('register')), /*#__PURE__*/React.createElement(\"textarea\", {\n    title: t('enter_username'),\n    className: \"username\",\n    rows: \"1\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    onKeyDown: handleFieldKeyDown,\n    placeholder: t('enter_username'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    title: t('enter_contact_data'),\n    className: \"contact-data\",\n    rows: \"1\",\n    value: contactData,\n    onChange: e => setContactData(e.target.value),\n    onKeyDown: handleFieldKeyDown,\n    placeholder: t('enter_contact_data'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    title: t('enter_year_of_birth'),\n    className: \"year-of-birth\",\n    rows: \"1\",\n    value: yearOfBirth,\n    onChange: e => setYearOfBirth(e.target.value),\n    onKeyDown: handleFieldKeyDown,\n    placeholder: t('enter_year_of_birth'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    title: t('enter_first_name'),\n    className: \"first_name\",\n    rows: \"1\",\n    value: firstName,\n    onChange: e => setFirstName(e.target.value),\n    onKeyDown: handleFieldKeyDown,\n    placeholder: t('enter_first_name'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    title: t('enter_last_name'),\n    className: \"last_name\",\n    rows: \"1\",\n    value: lastName,\n    onChange: e => setLastName(e.target.value),\n    onKeyDown: handleFieldKeyDown,\n    placeholder: t('enter_last_name'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    title: t('enter_password'),\n    className: \"password\",\n    rows: \"1\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    onKeyDown: handleFieldKeyDown,\n    placeholder: t('enter_password'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button accent\",\n    onClick: handleRegisterClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, t('register')), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button regular\",\n    onClick: handleHelmholtzRegistrationClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, t('helmholtz_registration')), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button regular\",\n    onClick: handleLoginClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, t('login_instead'))));\n};\nexport default Register;","map":{"version":3,"names":["React","useState","useTranslation","REGISTER","useNavigate","HELMHOLTZ","HOME","LOGIN","ERR_POSTING_LOGIN_REQUEST","ERR_POSTING_REGISTER_REQUEST","Register","t","navigate","username","setUsername","contactData","setContactData","yearOfBirth","setYearOfBirth","firstName","setFirstName","lastName","setLastName","password","setPassword","token","setToken","handleRegisterClick","postRegister","setTokenCookie","payload","contact_data","year_of_birth","console","log","fetch","method","headers","body","JSON","stringify","then","response","ok","text","trim","postLogin","parse","errorData","json","Error","message","catch","error","alert","data","handleHelmholtzRegistrationClick","window","location","replace","days","expirationDate","Date","setDate","getDate","document","cookie","toUTCString","handleFieldKeyDown","event","key","preventDefault","handleLoginClick","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","className","rows","value","onChange","e","target","onKeyDown","placeholder","type","onClick"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { REGISTER } from '../constants/URIs/UserURIs';\nimport { useNavigate } from 'react-router-dom';\nimport { HELMHOLTZ, HOME, LOGIN } from '../constants/URLs/Navigation';\nimport { ERR_POSTING_LOGIN_REQUEST, ERR_POSTING_REGISTER_REQUEST } from '../constants/ErrorMessages';\n\nconst Register = () => {\n    const { t } = useTranslation(); // Translation hook\n    const navigate = useNavigate(); // Navigation hook\n\n    // State variables for form fields\n    const [username, setUsername] = useState('');\n    const [contactData, setContactData] = useState('');\n    const [yearOfBirth, setYearOfBirth] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [password, setPassword] = useState('');\n    const [token, setToken] = useState();\n\n    // Handle register button click\n    const handleRegisterClick = () => {\n        postRegister();\n        setTokenCookie();\n    };\n\n    // Function to post registration data\n    const postRegister = () => {\n        let payload = {\n            contact_data: contactData,\n            username: username,\n            password: password,\n        };\n\n        if (yearOfBirth !== '') {\n            payload.year_of_birth = yearOfBirth;\n        }\n\n        console.log(payload)\n\n        // Send the POST request to the server endpoint\n        fetch(REGISTER, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n        })\n        // TODO fix post request\n        // TODO add navigation and account for different locations where user needs to be navigated to\n            .then(async response => {\n                if (response.ok) {\n                    const text = await response.text();\n                    if (!text.trim()) {\n                        postLogin();\n                    } else {\n                        return JSON.parse(text);\n                    }\n                } else {\n                    // If the request was not successful, throw an error\n                    const errorData = await response.json();\n                    throw new Error(errorData.message);\n                }\n            })\n            .catch(error => {\n                alert(ERR_POSTING_REGISTER_REQUEST + ' ' + error.message);\n            });\n    };\n\n    // Function to post login data after successful registration\n    const postLogin = () => {\n        let payload = {\n            username: username,\n            password: password\n        };\n\n        // Send the POST request to the login endpoint\n        fetch(LOGIN, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(payload)\n        })\n            .then(async response => {\n                if (response.ok) {\n                    return response.json();\n                } else {\n                    // If the request was not successful, throw an error\n                    const errorData = await response.json();\n                    throw new Error(errorData.message);\n                }\n            })\n            .then(data => {\n                setToken(data.token);\n            })\n            .catch(error => {\n                alert(ERR_POSTING_LOGIN_REQUEST + ' ' + error.message);\n            });\n    };\n\n    // Handle Helmholtz registration button click\n    const handleHelmholtzRegistrationClick = () => {\n        window.location.replace(HELMHOLTZ);\n    };\n\n    // Function to set token cookie\n    const setTokenCookie = () => {\n        var days = 1;\n        const expirationDate = new Date();\n        expirationDate.setDate(expirationDate.getDate() + days);\n        document.cookie = `${'token'}=${token}; expires=${expirationDate.toUTCString()}; path=/`;\n    };\n\n    // Prevent user from switching to new line by hitting [Enter]\n    const handleFieldKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n        }\n    };\n\n    // Handle login button click\n    const handleLoginClick = () => {\n        navigate(LOGIN);\n    };\n\n    return (\n        <>\n            <h1>{t('register')}</h1>\n\n            <textarea\n                title={t('enter_username')}\n                className='username'\n                rows='1'\n                value={username}\n                onChange={e => setUsername(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_username')}\n            >\n            </textarea>\n\n            <textarea\n                title={t('enter_contact_data')}\n                className='contact-data'\n                rows='1'\n                value={contactData}\n                onChange={e => setContactData(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_contact_data')}\n            >\n            </textarea>\n\n            <textarea\n                title={t('enter_year_of_birth')}\n                className='year-of-birth'\n                rows='1'\n                value={yearOfBirth}\n                onChange={e => setYearOfBirth(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_year_of_birth')}\n            >\n            </textarea>\n\n            <textarea\n                title={t('enter_first_name')}\n                className='first_name'\n                rows='1'\n                value={firstName}\n                onChange={e => setFirstName(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_first_name')}\n            >\n            </textarea>\n\n            <textarea\n                title={t('enter_last_name')}\n                className='last_name'\n                rows='1'\n                value={lastName}\n                onChange={e => setLastName(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_last_name')}\n            >\n            </textarea>\n\n            <textarea\n                title={t('enter_password')}\n                className='password'\n                rows='1'\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_password')}\n            >\n            </textarea>\n\n            <div className='button-container'>\n                <button type='button' className='button accent' onClick={handleRegisterClick}>{t('register')}</button>\n                <button type='button' className='button regular' onClick={handleHelmholtzRegistrationClick}>{t('helmholtz_registration')}</button>\n                <button type='button' className='button regular' onClick={handleLoginClick}>{t('login_instead')}</button>\n            </div>\n        </>\n    );\n};\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}