{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/components/navbar/Navbar.js\";\nimport React, { useEffect, useState } from 'react';\nimport { accountItemVersions, menuItems, Roles } from '../../components/navbar/menuData';\nimport MenuItems from './MenuItems';\nimport MenuItem from './MenuItem';\nimport './Navbar.css';\nimport logo from '../../assets/images/logo.png';\nimport { USER_DATA } from '../../constants/URIs/UserURIs';\nimport { getCookie } from '../../services/Cookies';\nimport { ERR_FETCHING_USER_DATA } from '../../constants/ErrorMessages';\nimport { useLocation } from 'react-router-dom';\nconst Navbar = () => {\n  // gets the current location (Router) to update the navbar after cahnge of user roles\n  const location = useLocation();\n  const token = getCookie('token');\n\n  // default role is visitor (not logged in)\n  const [userRoles, setUserRoles] = useState([Roles.VISITOR]);\n  const [filteredMenuItems, setFilteredMenuItems] = useState([]);\n  const fetchUserRoles = () => {\n    if (token !== 'undefined') {\n      fetch(USER_DATA, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`\n        }\n      }).then(response => response.json()).then(data => {\n        setUserRoles(data.user_flags.map(element => element.flag));\n      }).catch(error => {\n        console.error(ERR_FETCHING_USER_DATA, error);\n      });\n    } else {\n      setUserRoles([Roles.VISITOR]);\n    }\n  };\n\n  // fetch user roles on first render, if token is present (user is logged in)\n  useEffect(() => {\n    fetchUserRoles();\n  }, []);\n  useEffect(() => {\n    const filteredItems = menuItems.filter(item => userRoles.some(role => item.roles.includes(role)));\n    setFilteredMenuItems(filteredItems);\n    console.log('filteredMenuItems:', filteredMenuItems);\n  }, []);\n  const getAccountItemByRoles = roles => {\n    if (!roles || roles.length === 0) return null; // Return null or a default item if no roles are provided\n\n    // Use a Set for faster lookups\n    const rolesSet = new Set(roles);\n\n    // Find the first matching account item configuration\n    const matchingAccountItem = accountItemVersions.find(version => version.roles.some(role => rolesSet.has(role)));\n\n    // Return the matched item, or provide a default/fallback item for visitors if no match\n    return matchingAccountItem || accountItemVersions.find(version => version.roles.includes(Roles.VISITOR));\n  };\n  useEffect(() => {\n    console.log(\"filteredMenuItems:\", filteredMenuItems);\n  }, [filteredMenuItems]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/\",\n    className: \"logo-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo-img\",\n    src: logo,\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"menus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, filteredMenuItems.length > 0 ? filteredMenuItems.map((item, index) => /*#__PURE__*/React.createElement(MenuItems, {\n    key: index,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    className: \"account-menu-item\",\n    item: getAccountItemByRoles(userRoles),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  })))));\n};\nexport default Navbar;","map":{"version":3,"names":["React","useEffect","useState","accountItemVersions","menuItems","Roles","MenuItems","MenuItem","logo","USER_DATA","getCookie","ERR_FETCHING_USER_DATA","useLocation","Navbar","location","token","userRoles","setUserRoles","VISITOR","filteredMenuItems","setFilteredMenuItems","fetchUserRoles","fetch","headers","then","response","json","data","user_flags","map","element","flag","catch","error","console","filteredItems","filter","item","some","role","roles","includes","log","getAccountItemByRoles","length","rolesSet","Set","matchingAccountItem","find","version","has","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","href","src","alt","index","key"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/components/navbar/Navbar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { accountItemVersions, menuItems, Roles } from '../../components/navbar/menuData'\nimport MenuItems from './MenuItems';\nimport MenuItem from './MenuItem';\nimport './Navbar.css';\nimport logo from '../../assets/images/logo.png';\nimport { USER_DATA } from '../../constants/URIs/UserURIs';\nimport { getCookie } from '../../services/Cookies';\nimport { ERR_FETCHING_USER_DATA } from '../../constants/ErrorMessages';\nimport { useLocation } from 'react-router-dom';\n\nconst Navbar = () => {\n\n    // gets the current location (Router) to update the navbar after cahnge of user roles\n    const location = useLocation();\n\n    const token = getCookie('token');\n\n    // default role is visitor (not logged in)\n    const [userRoles, setUserRoles] = useState([Roles.VISITOR]);\n    const [filteredMenuItems, setFilteredMenuItems] = useState([]);\n    \n    const fetchUserRoles = () => {\n        if (token !== 'undefined') {\n            fetch(USER_DATA, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                }\n            })\n            .then(response => response.json())\n            .then(data => {\n                setUserRoles(data.user_flags.map(element => element.flag));\n            })\n            .catch(error => {\n                console.error(ERR_FETCHING_USER_DATA, error);\n            });\n        } else {\n            setUserRoles([Roles.VISITOR]);\n        }\n    }\n\n    // fetch user roles on first render, if token is present (user is logged in)\n    useEffect(() => {\n        fetchUserRoles();\n    }, []);\n\n    useEffect(() => {\n        const filteredItems = menuItems.filter(item =>\n            userRoles.some(role => item.roles.includes(role))\n        );\n        setFilteredMenuItems(filteredItems);\n        console.log('filteredMenuItems:', filteredMenuItems);\n    }, []);\n\n    const getAccountItemByRoles = (roles) => {\n        if (!roles || roles.length === 0) return null; // Return null or a default item if no roles are provided\n    \n        // Use a Set for faster lookups\n        const rolesSet = new Set(roles);\n    \n        // Find the first matching account item configuration\n        const matchingAccountItem = accountItemVersions.find(version =>\n            version.roles.some(role => rolesSet.has(role))\n        );\n    \n        // Return the matched item, or provide a default/fallback item for visitors if no match\n        return matchingAccountItem || accountItemVersions.find(version => version.roles.includes(Roles.VISITOR));\n    };\n\n    useEffect(() => {\n        console.log(\"filteredMenuItems:\", filteredMenuItems);\n    }, [filteredMenuItems]);\n\n    return (\n        <div className='nav-area'>\n            <a href='/' className='logo-container'>\n                <img className='logo-img' src={logo} alt='Logo' />\n            </a>\n            <nav className='nav'>\n                <ul className='menus'>\n                    {filteredMenuItems.length > 0 ? filteredMenuItems.map((item, index) => (\n                        <MenuItems key={index} item={item} />\n                    )) : null}\n                    <li>\n                        <MenuItem className='account-menu-item' item={getAccountItemByRoles(userRoles)} />\n                    </li>\n                </ul>\n            </nav>\n        </div>\n    );\n}\n\nexport default Navbar;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,mBAAmB,EAAEC,SAAS,EAAEC,KAAK,QAAQ,kCAAkC;AACxF,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,cAAc;AACrB,OAAOC,IAAI,MAAM,8BAA8B;AAC/C,SAASC,SAAS,QAAQ,+BAA+B;AACzD,SAASC,SAAS,QAAQ,wBAAwB;AAClD,SAASC,sBAAsB,QAAQ,+BAA+B;AACtE,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAEjB;EACA,MAAMC,QAAQ,GAAGF,WAAW,CAAC,CAAC;EAE9B,MAAMG,KAAK,GAAGL,SAAS,CAAC,OAAO,CAAC;;EAEhC;EACA,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,CAACG,KAAK,CAACa,OAAO,CAAC,CAAC;EAC3D,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE9D,MAAMmB,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAIN,KAAK,KAAK,WAAW,EAAE;MACvBO,KAAK,CAACb,SAAS,EAAE;QACbc,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,SAASR,KAAK;QACnC;MACJ,CAAC,CAAC,CACDS,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACVV,YAAY,CAACU,IAAI,CAACC,UAAU,CAACC,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAAC,CAAC;MAC9D,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZC,OAAO,CAACD,KAAK,CAACtB,sBAAsB,EAAEsB,KAAK,CAAC;MAChD,CAAC,CAAC;IACN,CAAC,MAAM;MACHhB,YAAY,CAAC,CAACZ,KAAK,CAACa,OAAO,CAAC,CAAC;IACjC;EACJ,CAAC;;EAED;EACAjB,SAAS,CAAC,MAAM;IACZoB,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAENpB,SAAS,CAAC,MAAM;IACZ,MAAMkC,aAAa,GAAG/B,SAAS,CAACgC,MAAM,CAACC,IAAI,IACvCrB,SAAS,CAACsB,IAAI,CAACC,IAAI,IAAIF,IAAI,CAACG,KAAK,CAACC,QAAQ,CAACF,IAAI,CAAC,CACpD,CAAC;IACDnB,oBAAoB,CAACe,aAAa,CAAC;IACnCD,OAAO,CAACQ,GAAG,CAAC,oBAAoB,EAAEvB,iBAAiB,CAAC;EACxD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMwB,qBAAqB,GAAIH,KAAK,IAAK;IACrC,IAAI,CAACA,KAAK,IAAIA,KAAK,CAACI,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC,CAAC;;IAE/C;IACA,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAACN,KAAK,CAAC;;IAE/B;IACA,MAAMO,mBAAmB,GAAG5C,mBAAmB,CAAC6C,IAAI,CAACC,OAAO,IACxDA,OAAO,CAACT,KAAK,CAACF,IAAI,CAACC,IAAI,IAAIM,QAAQ,CAACK,GAAG,CAACX,IAAI,CAAC,CACjD,CAAC;;IAED;IACA,OAAOQ,mBAAmB,IAAI5C,mBAAmB,CAAC6C,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACT,KAAK,CAACC,QAAQ,CAACpC,KAAK,CAACa,OAAO,CAAC,CAAC;EAC5G,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACZiC,OAAO,CAACQ,GAAG,CAAC,oBAAoB,EAAEvB,iBAAiB,CAAC;EACxD,CAAC,EAAE,CAACA,iBAAiB,CAAC,CAAC;EAEvB,oBACInB,KAAA,CAAAmD,aAAA;IAAKC,SAAS,EAAC,UAAU;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrB1D,KAAA,CAAAmD,aAAA;IAAGQ,IAAI,EAAC,GAAG;IAACP,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClC1D,KAAA,CAAAmD,aAAA;IAAKC,SAAS,EAAC,UAAU;IAACQ,GAAG,EAAEpD,IAAK;IAACqD,GAAG,EAAC,MAAM;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAClD,CAAC,eACJ1D,KAAA,CAAAmD,aAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChB1D,KAAA,CAAAmD,aAAA;IAAIC,SAAS,EAAC,OAAO;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAChBvC,iBAAiB,CAACyB,MAAM,GAAG,CAAC,GAAGzB,iBAAiB,CAACU,GAAG,CAAC,CAACQ,IAAI,EAAEyB,KAAK,kBAC9D9D,KAAA,CAAAmD,aAAA,CAAC7C,SAAS;IAACyD,GAAG,EAAED,KAAM;IAACzB,IAAI,EAAEA,IAAK;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACvC,CAAC,GAAG,IAAI,eACT1D,KAAA,CAAAmD,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACI1D,KAAA,CAAAmD,aAAA,CAAC5C,QAAQ;IAAC6C,SAAS,EAAC,mBAAmB;IAACf,IAAI,EAAEM,qBAAqB,CAAC3B,SAAS,CAAE;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACjF,CACJ,CACH,CACJ,CAAC;AAEd,CAAC;AAED,eAAe7C,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}