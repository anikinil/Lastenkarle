{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/storeOverview/pages/StorePage.js\";\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport PictureAndDescriptionField from '../../../components/IO/PictureAndDescriptionField';\nimport AddressField from '../../../components/IO/AddressField';\nimport { useParams } from 'react-router-dom';\n\n// import image from '../../../assets/images/store1.jpg'\n\n// TODO implement fetching\nlet stores = [{\n  id: 1,\n  name: 'Store 1',\n  image: require('../../../assets/images/store1.jpg'),\n  description: \"This is a description of Store 1\",\n  address: \"Musterstraße 123, 76137 Karlsruhe\"\n}, {\n  id: 2,\n  name: 'Store 2',\n  image: require('../../../assets/images/store1.jpg').default,\n  description: \"This is a description of Store 2\",\n  address: \"Musterstraße 123, 76137 Karlsruhe\"\n}, {\n  id: 3,\n  name: 'Store 3',\n  image: null,\n  description: \"This is a description of Store 3\",\n  address: \"Musterstraße 123, 76137 Karlsruhe\"\n}];\nconst StorePage = () => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    id\n  } = useParams();\n  const store = stores.find(s => s.id === parseInt(id));\n\n  // REMOVE\n  // const pictureFile = store.image\n  const editable = false;\n  const [pictureFile, setPictureFile] = useState(store.image);\n  const [description, setDescription] = useState(store.description);\n  console.log(pictureFile);\n  function handlePictureFileChange(event) {\n    setPictureFile(event.target.files[0]);\n  }\n  const handleImgContainerClick = () => {\n    document.getElementById('pictureFileInput').click();\n  };\n  const handleRemovePictureClick = () => {\n    setPictureFile(null);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, store.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-container\",\n    type: \"file\",\n    onClick: handleImgContainerClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, pictureFile ? /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img\",\n    alt: t('image'),\n    src: store.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"img-container-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, t('select_a_picture'))), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"pictureFileInput\",\n    type: \"file\",\n    title: t('image-selection'),\n    accept: \"image/*\",\n    onChange: handlePictureFileChange,\n    style: {\n      display: 'none'\n    },\n    disabled: !editable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(PictureAndDescriptionField, {\n    editable: false,\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AddressField, {\n    editable: false,\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }));\n};\nexport default StorePage;","map":{"version":3,"names":["React","useState","useTranslation","PictureAndDescriptionField","AddressField","useParams","stores","id","name","image","require","description","address","default","StorePage","t","store","find","s","parseInt","editable","pictureFile","setPictureFile","setDescription","console","log","handlePictureFileChange","event","target","files","handleImgContainerClick","document","getElementById","click","handleRemovePictureClick","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onClick","alt","src","title","accept","onChange","style","display","disabled"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/storeOverview/pages/StorePage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport PictureAndDescriptionField from '../../../components/IO/PictureAndDescriptionField';\nimport AddressField from '../../../components/IO/AddressField';\nimport { useParams } from 'react-router-dom';\n\n// import image from '../../../assets/images/store1.jpg'\n\n// TODO implement fetching\nlet stores = [\n    {\n        id: 1,\n        name: 'Store 1',\n        image: require('../../../assets/images/store1.jpg'),\n        description: \"This is a description of Store 1\",\n        address: \"Musterstraße 123, 76137 Karlsruhe\"\n    },\n    {\n        id: 2,\n        name: 'Store 2',\n        image: require('../../../assets/images/store1.jpg').default,\n        description: \"This is a description of Store 2\",\n        address: \"Musterstraße 123, 76137 Karlsruhe\"\n    },\n    {\n        id: 3,\n        name: 'Store 3',\n        image: null,\n        description: \"This is a description of Store 3\",\n        address: \"Musterstraße 123, 76137 Karlsruhe\"\n    }\n]\n\nconst StorePage = () => {\n\n    const { t } = useTranslation();\n\n    const { id } = useParams();\n    const store = stores.find(s => s.id === parseInt(id));\n\n    // REMOVE\n    // const pictureFile = store.image\n    const editable = false\n    const [pictureFile, setPictureFile] = useState(store.image)\n    const [description, setDescription] = useState(store.description)\n\n    console.log(pictureFile)\n\n    function handlePictureFileChange(event) {\n        setPictureFile(event.target.files[0])\n    }\n\n    const handleImgContainerClick = () => {\n        document.getElementById('pictureFileInput').click();\n    };\n\n    const handleRemovePictureClick = () => {\n        setPictureFile(null)\n    }\n\n    return (\n        <>\n            <h1>{store.name}</h1>\n\n            <div className=\"img-container\" type=\"file\" onClick={handleImgContainerClick}>\n                    {pictureFile ?\n                        <img className=\"img\" alt={t('image')} src={store.image}></img>\n                        :\n                        <span className=\"img-container-label\">{t('select_a_picture')}</span>\n                    }\n                </div>\n\n                <input\n                    id=\"pictureFileInput\"\n                    type=\"file\"\n                    title={t('image-selection')}\n                    accept=\"image/*\"\n                    onChange={handlePictureFileChange}\n                    style={{ display: 'none' }}\n                    disabled={!editable}\n                />\n\n            <PictureAndDescriptionField editable={false} store={store}/>\n            <AddressField editable={false} store={store}/>\n        </>\n    );\n};\n\nexport default StorePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}