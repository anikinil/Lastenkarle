{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/bikeBooking/pages/BikeBookingPage.js\";\n// Page of singular Bike\n// Consists of a Name, Picture, Description and Information about the store it belongs to\n// Also has BikeCalendar which is component to make a reservation\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport PictureAndDescriptionField from '../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField';\nimport SingleLineTextField from '../../../components/display/SingleLineTextField';\nimport BikeCalendar from '../../booking/components/calendar/BikeCalendar';\nimport { ID } from '../../../constants/URIs/General';\nimport { BIKE_BY_ID, STORE_BY_BIKE_ID } from '../../../constants/URIs/BookingURIs';\nimport { ERR_FETCHING_BIKE, ERR_FETCHING_STORE } from '../../../constants/ErrorMessages';\nimport { getCookie } from '../../../services/Cookies';\nconst bike = {\n  id: 1,\n  name: 'Lastenrad 1',\n  image: require('../../../assets/images/bike1.jpg'),\n  description: 'This is a description of Bike 1!',\n  storeId: 2\n};\nconst store = {\n  address: 'Musterstraße 1, 12345 Musterstadt'\n};\nconst BikeBookingPage = () => {\n  const {\n    t\n  } = useTranslation(); // Translation hook\n  const navigate = useNavigate(); // Navigation hook\n\n  const {\n    id\n  } = useParams(); // Get bike ID from URL parameters\n\n  const token = getCookie('token'); // Get authentication token from cookies\n\n  // Handle click on store button\n  const handleStoreClick = () => {\n    navigate(`/store/${bike.storeId}`); // Navigate to store page\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, bike.name), \" \", /*#__PURE__*/React.createElement(PictureAndDescriptionField, {\n    editable: false,\n    object: bike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SingleLineTextField, {\n    editable: false,\n    value: store.address,\n    title: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button regular\",\n    onClick: handleStoreClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, t('store')), \" \"), /*#__PURE__*/React.createElement(BikeCalendar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }));\n};\nexport default BikeBookingPage;","map":{"version":3,"names":["React","useEffect","useState","useTranslation","useNavigate","useParams","PictureAndDescriptionField","SingleLineTextField","BikeCalendar","ID","BIKE_BY_ID","STORE_BY_BIKE_ID","ERR_FETCHING_BIKE","ERR_FETCHING_STORE","getCookie","bike","id","name","image","require","description","storeId","store","address","BikeBookingPage","t","navigate","token","handleStoreClick","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","editable","object","value","title","className","type","onClick"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/bikeBooking/pages/BikeBookingPage.js"],"sourcesContent":["// Page of singular Bike\n// Consists of a Name, Picture, Description and Information about the store it belongs to\n// Also has BikeCalendar which is component to make a reservation\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport PictureAndDescriptionField from '../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField';\nimport SingleLineTextField from '../../../components/display/SingleLineTextField';\nimport BikeCalendar from '../../booking/components/calendar/BikeCalendar';\nimport { ID } from '../../../constants/URIs/General';\nimport { BIKE_BY_ID, STORE_BY_BIKE_ID } from '../../../constants/URIs/BookingURIs';\nimport { ERR_FETCHING_BIKE, ERR_FETCHING_STORE } from '../../../constants/ErrorMessages';\nimport { getCookie } from '../../../services/Cookies';\n\nconst bike = {\n    id: 1,\n    name: 'Lastenrad 1',\n    image: require('../../../assets/images/bike1.jpg'),\n    description: 'This is a description of Bike 1!',\n    storeId: 2\n}\n\nconst store = {\n    address: 'Musterstraße 1, 12345 Musterstadt'\n}\n\nconst BikeBookingPage = () => {\n    const { t } = useTranslation(); // Translation hook\n    const navigate = useNavigate(); // Navigation hook\n\n    const { id } = useParams(); // Get bike ID from URL parameters\n\n    const token = getCookie('token'); // Get authentication token from cookies\n\n    // Handle click on store button\n    const handleStoreClick = () => {\n        navigate(`/store/${bike.storeId}`) // Navigate to store page\n    }\n\n    return (\n        <>\n            <h1>{bike.name}</h1> {/* Display bike name */}\n\n            {/* Display bike picture and description */}\n            <PictureAndDescriptionField editable={false} object={bike} />\n             {/* Display store address */}\n            <SingleLineTextField editable={false} value={store.address} title='address' />\n\n            <div className='button-container'>\n                <button type='button' className='button regular' onClick={handleStoreClick}>{t('store')}</button> {/* Button to navigate to store page */}\n            </div>\n\n            {/* Display bike calendar for reservations */}\n            <BikeCalendar />\n        </>\n    );\n};\n\nexport default BikeBookingPage;"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAOC,0BAA0B,MAAM,mFAAmF;AAC1H,OAAOC,mBAAmB,MAAM,iDAAiD;AACjF,OAAOC,YAAY,MAAM,gDAAgD;AACzE,SAASC,EAAE,QAAQ,iCAAiC;AACpD,SAASC,UAAU,EAAEC,gBAAgB,QAAQ,qCAAqC;AAClF,SAASC,iBAAiB,EAAEC,kBAAkB,QAAQ,kCAAkC;AACxF,SAASC,SAAS,QAAQ,2BAA2B;AAErD,MAAMC,IAAI,GAAG;EACTC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAEC,OAAO,CAAC,kCAAkC,CAAC;EAClDC,WAAW,EAAE,kCAAkC;EAC/CC,OAAO,EAAE;AACb,CAAC;AAED,MAAMC,KAAK,GAAG;EACVC,OAAO,EAAE;AACb,CAAC;AAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC1B,MAAM;IAAEC;EAAE,CAAC,GAAGtB,cAAc,CAAC,CAAC,CAAC,CAAC;EAChC,MAAMuB,QAAQ,GAAGtB,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAM;IAAEY;EAAG,CAAC,GAAGX,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE5B,MAAMsB,KAAK,GAAGb,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;;EAElC;EACA,MAAMc,gBAAgB,GAAGA,CAAA,KAAM;IAC3BF,QAAQ,CAAC,UAAUX,IAAI,CAACM,OAAO,EAAE,CAAC,EAAC;EACvC,CAAC;EAED,oBACIrB,KAAA,CAAA6B,aAAA,CAAA7B,KAAA,CAAA8B,QAAA,qBACI9B,KAAA,CAAA6B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKrB,IAAI,CAACE,IAAS,CAAC,KAAC,eAGrBjB,KAAA,CAAA6B,aAAA,CAACvB,0BAA0B;IAAC+B,QAAQ,EAAE,KAAM;IAACC,MAAM,EAAEvB,IAAK;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAE7DpC,KAAA,CAAA6B,aAAA,CAACtB,mBAAmB;IAAC8B,QAAQ,EAAE,KAAM;IAACE,KAAK,EAAEjB,KAAK,CAACC,OAAQ;IAACiB,KAAK,EAAC,SAAS;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAE9EpC,KAAA,CAAA6B,aAAA;IAAKY,SAAS,EAAC,kBAAkB;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7BpC,KAAA,CAAA6B,aAAA;IAAQa,IAAI,EAAC,QAAQ;IAACD,SAAS,EAAC,gBAAgB;IAACE,OAAO,EAAEf,gBAAiB;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEX,CAAC,CAAC,OAAO,CAAU,CAAC,KAChG,CAAC,eAGNzB,KAAA,CAAA6B,aAAA,CAACrB,YAAY;IAAAuB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACjB,CAAC;AAEX,CAAC;AAED,eAAeZ,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}