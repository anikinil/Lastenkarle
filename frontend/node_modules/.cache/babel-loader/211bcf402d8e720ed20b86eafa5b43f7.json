{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/Login.js\";\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nconst Login = () => {\n  const {\n    t\n  } = useTranslation();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [token, setToken] = useState();\n\n  // function handleLoginClick() {\n  //     postLogin();\n  // }\n\n  // POST login request\n  // const postLogin = () => {\n\n  //     let payload = {\n  //         username: username,\n  //         password: password\n  //     };\n\n  //     // POST login request\n  //     fetch(URI_USER_LOGIN, {\n  //         method: 'POST',\n  //         headers: {\n  //             'Content-Type': 'application/json',\n  //         },\n  //         body: JSON.stringify(payload)\n  //     })\n  //         .then(response => {\n  //             if (response?.ok) {\n  //                 return response.json();\n  //             } else {\n  //                 // If the request was not successful, throw an error\n  //                 return response.json().then(errorData => {\n  //                     throw new Error(errorData.message);\n  //                 });\n  //             }\n  //         })\n  //         .then(data => {\n  //             const token = data.token;\n  //             navigateToNextPage(token);\n  //         })\n  //         .catch(error => {\n  //             // Handle any network or other errors that occurred during the request\n  //             alert('Error making login request.' + error.message);\n  //         });\n  // }\n\n  // const handeHelmholtzSignInClick = () => {\n  //     window.location.replace(URL_USER_HELMHOLTZ);\n  // }\n\n  // const handleSignInClick = () => {\n  //     // navigate to register page\n  // }\n\n  // const setTokenCookie = () => {\n  //     var days = 1\n  //     const expirationDate = new Date();\n  //     expirationDate.setDate(expirationDate.getDate() + days);\n  //     document.cookie = `${'token'}=${token}; expires=${expirationDate.toUTCString()}; path=/`;\n  // };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    title: t('enter_username'),\n    className: \"username\",\n    rows: \"1\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    onKeyDown: handleUSernameFieldKeyDown,\n    placeholder: t('enter_username'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setUsernameCookie(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, t('submit')));\n};\nexport default Login;","map":{"version":3,"names":["React","useState","useTranslation","Login","t","username","setUsername","password","setPassword","token","setToken","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","className","rows","value","onChange","e","target","onKeyDown","handleUSernameFieldKeyDown","placeholder","type","onClick","setUsernameCookie"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\n\nconst Login = () => {\n\n    const { t } = useTranslation()\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [token, setToken] = useState()\n\n    // function handleLoginClick() {\n    //     postLogin();\n    // }\n\n    // POST login request\n    // const postLogin = () => {\n\n    //     let payload = {\n    //         username: username,\n    //         password: password\n    //     };\n\n    //     // POST login request\n    //     fetch(URI_USER_LOGIN, {\n    //         method: 'POST',\n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //         },\n    //         body: JSON.stringify(payload)\n    //     })\n    //         .then(response => {\n    //             if (response?.ok) {\n    //                 return response.json();\n    //             } else {\n    //                 // If the request was not successful, throw an error\n    //                 return response.json().then(errorData => {\n    //                     throw new Error(errorData.message);\n    //                 });\n    //             }\n    //         })\n    //         .then(data => {\n    //             const token = data.token;\n    //             navigateToNextPage(token);\n    //         })\n    //         .catch(error => {\n    //             // Handle any network or other errors that occurred during the request\n    //             alert('Error making login request.' + error.message);\n    //         });\n    // }\n\n    // const handeHelmholtzSignInClick = () => {\n    //     window.location.replace(URL_USER_HELMHOLTZ);\n    // }\n\n    // const handleSignInClick = () => {\n    //     // navigate to register page\n    // }\n\n    // const setTokenCookie = () => {\n    //     var days = 1\n    //     const expirationDate = new Date();\n    //     expirationDate.setDate(expirationDate.getDate() + days);\n    //     document.cookie = `${'token'}=${token}; expires=${expirationDate.toUTCString()}; path=/`;\n    // };\n\n    return (\n        <>\n            <h1>Login</h1>\n\n            <textarea\n                title={t('enter_username')}\n                className='username'\n                rows='1'\n                value={username}\n                onChange={e => setUsername(e.target.value)}\n                onKeyDown={handleUSernameFieldKeyDown}\n                placeholder={t('enter_username')}\n            >\n            </textarea>\n\n            <input type='text' value={username} onChange={e => setUsername(e.target.value)}></input>\n            <button onClick={() => setUsernameCookie()}>{t('submit')}</button>\n        </>\n    );\n};\n\nexport default Login;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,eAAe;AAG9C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAEhB,MAAM;IAAEC;EAAE,CAAC,GAAGF,cAAc,CAAC,CAAC;EAE9B,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC;;EAEpC;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACID,KAAA,CAAAW,aAAA,CAAAX,KAAA,CAAAY,QAAA,qBACIZ,KAAA,CAAAW,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,OAAS,CAAC,eAEdlB,KAAA,CAAAW,aAAA;IACIQ,KAAK,EAAEf,CAAC,CAAC,gBAAgB,CAAE;IAC3BgB,SAAS,EAAC,UAAU;IACpBC,IAAI,EAAC,GAAG;IACRC,KAAK,EAAEjB,QAAS;IAChBkB,QAAQ,EAAEC,CAAC,IAAIlB,WAAW,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAC3CI,SAAS,EAAEC,0BAA2B;IACtCC,WAAW,EAAExB,CAAC,CAAC,gBAAgB,CAAE;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAE3B,CAAC,eAEXlB,KAAA,CAAAW,aAAA;IAAOkB,IAAI,EAAC,MAAM;IAACP,KAAK,EAAEjB,QAAS;IAACkB,QAAQ,EAAEC,CAAC,IAAIlB,WAAW,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAQ,CAAC,eACxFlB,KAAA,CAAAW,aAAA;IAAQmB,OAAO,EAAEA,CAAA,KAAMC,iBAAiB,CAAC,CAAE;IAAAlB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEd,CAAC,CAAC,QAAQ,CAAU,CACnE,CAAC;AAEX,CAAC;AAED,eAAeD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}