{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/Login.js\";\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { LOGIN, USER_DATA } from '../constants/URIs/UserURIs';\nimport { useNavigate } from 'react-router-dom';\nimport { HELMHOLTZ, HOME, REGISTER } from '../constants/URLs/Navigation';\nimport { getCookie, setCookie } from '../services/Cookies';\nimport { ERR_FETCHING_USER_DATA } from '../constants/ErrorMessages';\nimport { Roles } from '../constants/Roles';\nconst Login = () => {\n  // Translation hook\n  const {\n    t\n  } = useTranslation();\n\n  // Navigation hook\n  const navigate = useNavigate();\n\n  // State hooks for username and password\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Handle login button click\n  function handleLoginClick() {\n    postLogin();\n  }\n\n  // Post login request\n  const postLogin = () => {\n    let payload = {\n      username: username,\n      password: password\n    };\n\n    // Post login request\n    fetch(LOGIN, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    }).then(response => {\n      if (response === null || response === void 0 ? void 0 : response.ok) {\n        return response.json();\n      } else {\n        // If the request was not successful, throw an error\n        return response.json().then(errorData => {\n          throw new Error(errorData.message);\n        });\n      }\n    })\n    // Set the token and user role state variables\n    .then(data => {\n      setCookie('token', data.token);\n      fetchUserRoles();\n      // TODO account for different locations from which user can log in and navigate back to them\n      navigate(HOME);\n    }).catch(error => {\n      // Handle any network or other errors that occurred during the request\n      alert('Error making login request.' + error.message);\n    });\n  };\n  const fetchUserRoles = () => {\n    const token = getCookie('token');\n    if (token !== 'undefined' && token !== null) {\n      fetch(USER_DATA, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`\n        }\n      }).then(response => response.json()).then(data => {\n        // get the user flags from the response\n        const flags = data.user_flags.map(element => element.flag);\n        // get the store names from the flags\n        const stores = flags.filter(role => role.includes('Store: ')).map(role => role.replace('Store: ', ''));\n        // get the roles from the flags\n        const roles = flags.filter(role => !role.includes('Store: '));\n        // if the user is manager of at least one store, add the manager role\n        if (stores.length > 0) {\n          roles.push(Roles.MANAGER);\n          setUserStores(stores);\n        }\n        setCookie('userRoles', roles);\n      }).catch(error => {\n        console.error(ERR_FETCHING_USER_DATA, error);\n      });\n    } else {\n      setUserRoles([Roles.VISITOR]);\n    }\n  };\n\n  // Handle Helmholtz login button click\n  const handleHelmholtzLoginClick = () => {\n    window.location.replace(HELMHOLTZ);\n  };\n\n  // Handle register button click\n  const handleRegisterClick = () => {\n    navigate(REGISTER);\n  };\n\n  // Prevent user from switching to a new line by hitting [Enter]\n  const handleFieldKeyDown = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, t('login')), /*#__PURE__*/React.createElement(\"textarea\", {\n    title: t('enter_username'),\n    className: \"username\",\n    rows: \"1\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    onKeyDown: handleFieldKeyDown,\n    placeholder: t('enter_username'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    title: t('enter_password'),\n    className: \"password\",\n    rows: \"1\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    onKeyDown: handleFieldKeyDown,\n    placeholder: t('enter_password'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button accent\",\n    onClick: handleLoginClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, t('login')), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button regular\",\n    onClick: handleHelmholtzLoginClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, t('helmholtz_login')), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button regular\",\n    onClick: handleRegisterClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, t('register_instead'))));\n};\nexport default Login;","map":{"version":3,"names":["React","useState","useTranslation","LOGIN","USER_DATA","useNavigate","HELMHOLTZ","HOME","REGISTER","getCookie","setCookie","ERR_FETCHING_USER_DATA","Roles","Login","t","navigate","username","setUsername","password","setPassword","handleLoginClick","postLogin","payload","fetch","method","headers","body","JSON","stringify","then","response","ok","json","errorData","Error","message","data","token","fetchUserRoles","catch","error","alert","flags","user_flags","map","element","flag","stores","filter","role","includes","replace","roles","length","push","MANAGER","setUserStores","console","setUserRoles","VISITOR","handleHelmholtzLoginClick","window","location","handleRegisterClick","handleFieldKeyDown","event","key","preventDefault","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","className","rows","value","onChange","e","target","onKeyDown","placeholder","type","onClick"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { LOGIN, USER_DATA } from '../constants/URIs/UserURIs';\nimport { useNavigate } from 'react-router-dom';\nimport { HELMHOLTZ, HOME, REGISTER } from '../constants/URLs/Navigation';\nimport { getCookie, setCookie } from '../services/Cookies';\nimport { ERR_FETCHING_USER_DATA } from '../constants/ErrorMessages';\nimport { Roles } from '../constants/Roles';\n\nconst Login = () => {\n    // Translation hook\n    const { t } = useTranslation();\n\n    // Navigation hook\n    const navigate = useNavigate();\n\n    // State hooks for username and password\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    // Handle login button click\n    function handleLoginClick() {\n        postLogin();\n    }\n\n    // Post login request\n    const postLogin = () => {\n        let payload = {\n            username: username,\n            password: password\n        };\n\n        // Post login request\n        fetch(LOGIN, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(payload)\n        })\n            .then(response => {\n                if (response?.ok) {\n                    return response.json();\n                } else {\n                    // If the request was not successful, throw an error\n                    return response.json().then(errorData => {\n                        throw new Error(errorData.message);\n                    });\n                }\n            })\n            // Set the token and user role state variables\n            .then(data => {\n                setCookie('token', data.token);\n                fetchUserRoles();\n                // TODO account for different locations from which user can log in and navigate back to them\n                navigate(HOME);\n            })\n            .catch(error => {\n                // Handle any network or other errors that occurred during the request\n                alert('Error making login request.' + error.message);\n            });\n    }\n\n    const fetchUserRoles = () => {\n        const token = getCookie('token');\n        if (token !== 'undefined' && token !== null) {\n            fetch(USER_DATA, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                }\n            })\n                .then(response => response.json())\n                .then(data => {\n                    // get the user flags from the response\n                    const flags = data.user_flags.map(element => element.flag);\n                    // get the store names from the flags\n                    const stores = flags.filter(role => role.includes('Store: ')).map(role => role.replace('Store: ', ''));\n                    // get the roles from the flags\n                    const roles = (flags.filter(role => !role.includes('Store: ')));\n                    // if the user is manager of at least one store, add the manager role\n                    if (stores.length > 0) { roles.push(Roles.MANAGER); setUserStores(stores); }\n                    setCookie('userRoles', roles);\n                })\n                .catch(error => {\n                    console.error(ERR_FETCHING_USER_DATA, error);\n                });\n        } else {\n            setUserRoles([Roles.VISITOR]);\n        }\n    }\n\n    // Handle Helmholtz login button click\n    const handleHelmholtzLoginClick = () => {\n        window.location.replace(HELMHOLTZ);\n    }\n\n    // Handle register button click\n    const handleRegisterClick = () => {\n        navigate(REGISTER);\n    }\n\n    // Prevent user from switching to a new line by hitting [Enter]\n    const handleFieldKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n        }\n    };\n\n    return (\n        <>\n            {/* Login header */}\n            <h1>{t('login')}</h1>\n\n            {/* Username input field */}\n            <textarea\n                title={t('enter_username')}\n                className='username'\n                rows='1'\n                value={username}\n                onChange={e => setUsername(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_username')}\n            >\n            </textarea>\n\n            {/* Password input field */}\n            <textarea\n                title={t('enter_password')}\n                className='password'\n                rows='1'\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_password')}\n            >\n            </textarea>\n\n            {/* Button container */}\n            <div className='button-container'>\n                <button type='button' className='button accent' onClick={handleLoginClick}>{t('login')}</button>\n                <button type='button' className='button regular' onClick={handleHelmholtzLoginClick}>{t('helmholtz_login')}</button>\n                <button type='button' className='button regular' onClick={handleRegisterClick}>{t('register_instead')}</button>\n            </div>\n        </>\n    );\n};\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}