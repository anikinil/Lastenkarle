{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/booking/pages/RegionalBooking.js\";\nimport React from \"react\";\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport PictureAndDescriptionField from '../../../components/IO/PictureAndDescriptionField';\nimport AddressField from '../../../components/IO/AddressField';\nimport { useParams } from 'react-router-dom';\n//Standard page for a specific region\n//TODO: Add Map of Region with store markers\n//TODO: Add calandar table for bikes in region\n//TODO: Add bike list of region\nlet regions = [{\n  id: 'karlsruhe',\n  name: 'Karlsruhe'\n  //bikes: [bikes in this region]\n}, {\n  id: 'ettlingen',\n  name: 'Ettlingen'\n}, {\n  id: 'malsch',\n  name: 'Malsch'\n}, {\n  id: 'bruchsaal',\n  name: 'Bruchsaal'\n}];\nconst RegionalBooking = () => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    id\n  } = useParams();\n  const region = regions.find(s => s.id === id);\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, region.name);\n};\nexport default RegionalBooking;","map":{"version":3,"names":["React","useState","useTranslation","PictureAndDescriptionField","AddressField","useParams","regions","id","name","RegionalBooking","t","region","find","s","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/booking/pages/RegionalBooking.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport PictureAndDescriptionField from '../../../components/IO/PictureAndDescriptionField';\nimport AddressField from '../../../components/IO/AddressField';\nimport { useParams } from 'react-router-dom';\n//Standard page for a specific region\n//TODO: Add Map of Region with store markers\n//TODO: Add calandar table for bikes in region\n//TODO: Add bike list of region\nlet regions = [\n    {\n        id: 'karlsruhe',\n        name: 'Karlsruhe',\n        //bikes: [bikes in this region]\n    },\n    {\n        id: 'ettlingen',\n        name: 'Ettlingen',\n    },\n    {\n        id: 'malsch',\n        name: 'Malsch',\n    },\n    {\n        id: 'bruchsaal',\n        name: 'Bruchsaal'\n    }\n]\n\nconst RegionalBooking = () => {\n    const { t } = useTranslation();\n\n    const { id } = useParams();\n    const region = regions.find(s => s.id === id);\n    return (\n        <h1>{region.name}</h1>\n    );\n};\n  \nexport default RegionalBooking;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,eAAe;AAE9C,OAAOC,0BAA0B,MAAM,mDAAmD;AAC1F,OAAOC,YAAY,MAAM,qCAAqC;AAC9D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C;AACA;AACA;AACA;AACA,IAAIC,OAAO,GAAG,CACV;EACIC,EAAE,EAAE,WAAW;EACfC,IAAI,EAAE;EACN;AACJ,CAAC,EACD;EACID,EAAE,EAAE,WAAW;EACfC,IAAI,EAAE;AACV,CAAC,EACD;EACID,EAAE,EAAE,QAAQ;EACZC,IAAI,EAAE;AACV,CAAC,EACD;EACID,EAAE,EAAE,WAAW;EACfC,IAAI,EAAE;AACV,CAAC,CACJ;AAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC1B,MAAM;IAAEC;EAAE,CAAC,GAAGR,cAAc,CAAC,CAAC;EAE9B,MAAM;IAAEK;EAAG,CAAC,GAAGF,SAAS,CAAC,CAAC;EAC1B,MAAMM,MAAM,GAAGL,OAAO,CAACM,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACN,EAAE,KAAKA,EAAE,CAAC;EAC7C,oBACIP,KAAA,CAAAc,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKT,MAAM,CAACH,IAAS,CAAC;AAE9B,CAAC;AAED,eAAeC,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}