{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/components/navbar/Navbar.js\";\nimport React, { useEffect, useState } from 'react';\nimport MenuItems from './MenuItems';\nimport './Navbar.css';\nimport logo from '../../assets/images/logo.png';\nimport { getCookie } from '../../services/Cookies';\nimport { useLocation } from 'react-router-dom';\nimport { FaUser } from 'react-icons/fa';\nimport { ACCOUNT_DELETION, LOGIN, LOGOUT, REGISTER, REGIONAL_BOOKING, STORE_CONFIG } from '../../constants/URLs/Navigation';\nimport { REGION_NAME, STORE_NAME } from '../../constants/URLs/General';\nimport { Roles } from '../../constants/Roles';\nimport { useTranslation } from 'react-i18next';\nconst Navbar = () => {\n  const {\n    t\n  } = useTranslation();\n  const location = useLocation();\n  const [userRoles, setUserRoles] = useState([Roles.VISITOR]);\n  const [userStores, setUserStores] = useState([]);\n  const [filteredMenuItems, setFilteredMenuItems] = useState([]);\n  const fetchUserData = () => {\n    const roles = getCookie('userRoles');\n    const stores = getCookie('userStores');\n    setUserRoles(roles ? roles.split(',') : [Roles.VISITOR]);\n    setUserStores(stores ? stores.split(',') : []);\n  };\n  const getMenuItems = () => {\n    const storeItems = userStores.map(store => ({\n      title: store,\n      url: STORE_CONFIG.replace(STORE_NAME, store)\n    }));\n    return [{\n      title: t('booking'),\n      url: '/booking',\n      roles: [Roles.CUSTOMER, Roles.MANAGER, Roles.ADMINISTRATOR, Roles.VISITOR],\n      submenu: [{\n        title: 'Karlsruhe',\n        url: REGIONAL_BOOKING.replace(REGION_NAME, 'karlsruhe')\n      }, {\n        title: 'Ettlingen',\n        url: REGIONAL_BOOKING.replace(REGION_NAME, 'ettlingen')\n      }]\n    }, {\n      title: t('my_stores'),\n      roles: [Roles.MANAGER, Roles.ADMINISTRATOR],\n      submenu: storeItems\n    }, {\n      title: t('admin_activities'),\n      roles: [Roles.ADMINISTRATOR],\n      submenu: [{\n        title: t('bookings'),\n        url: '/bookings'\n      }, {\n        title: t('users'),\n        url: '/users'\n      }]\n    }, {\n      title: /*#__PURE__*/React.createElement(FaUser, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 24\n        }\n      }),\n      roles: [Roles.CUSTOMER, Roles.MANAGER, Roles.ADMINISTRATOR],\n      submenu: [{\n        title: t('logout'),\n        url: LOGOUT\n      }, {\n        title: t('delete_account'),\n        url: ACCOUNT_DELETION\n      }]\n    }, {\n      title: /*#__PURE__*/React.createElement(FaUser, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 24\n        }\n      }),\n      roles: [Roles.VISITOR],\n      submenu: [{\n        title: t('login'),\n        url: LOGIN\n      }, {\n        title: t('register'),\n        url: REGISTER\n      }]\n    }].filter(item => userRoles.some(role => item.roles.includes(role)));\n  };\n\n  // Watch for cookie changes\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const currentRoles = getCookie('userRoles') || '';\n      const currentStores = getCookie('userStores') || '';\n      const newRoles = currentRoles.split(',');\n      const newStores = currentStores.split(',');\n\n      // Update state if cookies have changed\n      if (newRoles.sort().join(',') !== userRoles.sort().join(',') || newStores.sort().join(',') !== userStores.sort().join(',')) {\n        setUserRoles(newRoles);\n        setUserStores(newStores);\n      }\n    }, 1000); // Check every second\n\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, [userRoles, userStores]);\n  useEffect(() => {\n    setFilteredMenuItems(getMenuItems());\n  }, [userRoles, userStores]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, userRoles.join(', ')), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/\",\n    className: \"logo-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"menus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, filteredMenuItems.map((item, index) => /*#__PURE__*/React.createElement(MenuItems, {\n    key: index,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  })))));\n};\nexport default Navbar;","map":{"version":3,"names":["React","useEffect","useState","MenuItems","logo","getCookie","useLocation","FaUser","ACCOUNT_DELETION","LOGIN","LOGOUT","REGISTER","REGIONAL_BOOKING","STORE_CONFIG","REGION_NAME","STORE_NAME","Roles","useTranslation","Navbar","t","location","userRoles","setUserRoles","VISITOR","userStores","setUserStores","filteredMenuItems","setFilteredMenuItems","fetchUserData","roles","stores","split","getMenuItems","storeItems","map","store","title","url","replace","CUSTOMER","MANAGER","ADMINISTRATOR","submenu","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","filter","item","some","role","includes","interval","setInterval","currentRoles","currentStores","newRoles","newStores","sort","join","clearInterval","className","href","index","key"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/components/navbar/Navbar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport MenuItems from './MenuItems';\nimport './Navbar.css';\nimport logo from '../../assets/images/logo.png';\nimport { getCookie } from '../../services/Cookies';\nimport { useLocation } from 'react-router-dom';\nimport { FaUser } from 'react-icons/fa';\nimport { ACCOUNT_DELETION, LOGIN, LOGOUT, REGISTER, REGIONAL_BOOKING, STORE_CONFIG } from '../../constants/URLs/Navigation';\nimport { REGION_NAME, STORE_NAME } from '../../constants/URLs/General';\nimport { Roles } from '../../constants/Roles';\nimport { useTranslation } from 'react-i18next';\n\nconst Navbar = () => {\n    const { t } = useTranslation();\n    const location = useLocation();\n\n    const [userRoles, setUserRoles] = useState([Roles.VISITOR]);\n    const [userStores, setUserStores] = useState([]);\n    const [filteredMenuItems, setFilteredMenuItems] = useState([]);\n\n    const fetchUserData = () => {\n        const roles = getCookie('userRoles');\n        const stores = getCookie('userStores');\n        setUserRoles(roles ? roles.split(',') : [Roles.VISITOR]);\n        setUserStores(stores ? stores.split(',') : []);\n    };\n\n    const getMenuItems = () => {\n        const storeItems = userStores.map(store => ({\n            title: store,\n            url: STORE_CONFIG.replace(STORE_NAME, store),\n        }));\n\n        return [\n            {\n                title: t('booking'),\n                url: '/booking',\n                roles: [Roles.CUSTOMER, Roles.MANAGER, Roles.ADMINISTRATOR, Roles.VISITOR],\n                submenu: [\n                    {\n                        title: 'Karlsruhe',\n                        url: REGIONAL_BOOKING.replace(REGION_NAME, 'karlsruhe'),\n                    },\n                    {\n                        title: 'Ettlingen',\n                        url: REGIONAL_BOOKING.replace(REGION_NAME, 'ettlingen'),\n                    },\n                ],\n            },\n            {\n                title: t('my_stores'),\n                roles: [Roles.MANAGER, Roles.ADMINISTRATOR],\n                submenu: storeItems,\n            },\n            {\n                title: t('admin_activities'),\n                roles: [Roles.ADMINISTRATOR],\n                submenu: [\n                    { title: t('bookings'), url: '/bookings' },\n                    { title: t('users'), url: '/users' },\n                ],\n            },\n            {\n                title: <FaUser />,\n                roles: [Roles.CUSTOMER, Roles.MANAGER, Roles.ADMINISTRATOR],\n                submenu: [\n                    { title: t('logout'), url: LOGOUT },\n                    { title: t('delete_account'), url: ACCOUNT_DELETION },\n                ],\n            },\n            {\n                title: <FaUser />,\n                roles: [Roles.VISITOR],\n                submenu: [\n                    { title: t('login'), url: LOGIN },\n                    { title: t('register'), url: REGISTER },\n                ],\n            },\n        ].filter(item => userRoles.some(role => item.roles.includes(role)));\n    };\n\n    // Watch for cookie changes\n    useEffect(() => {\n        const interval = setInterval(() => {\n            const currentRoles = getCookie('userRoles') || '';\n            const currentStores = getCookie('userStores') || '';\n            const newRoles = currentRoles.split(',');\n            const newStores = currentStores.split(',');\n\n            // Update state if cookies have changed\n            if (\n                newRoles.sort().join(',') !== userRoles.sort().join(',') ||\n                newStores.sort().join(',') !== userStores.sort().join(',')\n            ) {\n                setUserRoles(newRoles);\n                setUserStores(newStores);\n            }\n        }, 1000); // Check every second\n\n        return () => clearInterval(interval); // Cleanup on unmount\n    }, [userRoles, userStores]);\n\n    useEffect(() => {\n        setFilteredMenuItems(getMenuItems());\n    }, [userRoles, userStores]);\n\n    return (\n        <div className='nav-area'>\n            <p>{userRoles.join(', ')}</p>\n            <a href='/' className='logo-container'>\n                {/* <img className='logo-img' src={logo} alt='Logo' /> */}\n            </a>\n            <nav className='nav'>\n                <ul className='menus'>\n                    {filteredMenuItems.map((item, index) => (\n                        <MenuItems key={index} item={item} />\n                    ))}\n                </ul>\n            </nav>\n        </div>\n    );\n};\n\nexport default Navbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}