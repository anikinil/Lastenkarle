{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/Logout.js\";\nimport React, { useState, startTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { LOGOUT } from '../constants/URIs/UserURIs';\nimport { useNavigate } from 'react-router-dom';\n\n// on successful logout this component does not show any content and only runs the logout script\n// on failure it can display the error message to the user\nconst Logout = () => {\n  const {\n    t\n  } = useTranslation();\n  const navigate = useNavigate();\n\n  // TODO acquire token from cookie\n  const [token, setToken] = useState('');\n  const [error, setError] = useState();\n\n  // logout call\n  logout();\n\n  // POST logout request\n  function logout() {\n    // Send the POST request to the server endpoint\n    fetch(LOGOUT, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Token ${token}`\n      }\n    }).then(response => {\n      if (response.ok) {\n        // TODO check if startTransition() needed\n        startTransition(() => {\n          // TODO add proper variable for home navigation\n          navigate('/');\n        });\n      } else {\n        // If the request was not successful throw an error\n        return response.json().then(data => {\n          throw new Error(data.detail);\n        });\n      }\n    }).catch(error => {\n      // TODO replace by proper variable\n      console.log('Error making the logout request.');\n      setError(error);\n    });\n  }\n\n  // THINK if necessary\n  const deleteTokenCookie = () => {\n    // TODO implement\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, error ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, t('logout_failed') + ': ' + (error === null || error === void 0 ? void 0 : error.message)) : null);\n};\nexport default Logout;","map":{"version":3,"names":["React","useState","startTransition","useTranslation","LOGOUT","useNavigate","Logout","t","navigate","token","setToken","error","setError","logout","fetch","method","headers","then","response","ok","json","data","Error","detail","catch","console","log","deleteTokenCookie","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","message"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/Logout.js"],"sourcesContent":["import React, { useState, startTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { LOGOUT } from '../constants/URIs/UserURIs';\nimport { useNavigate } from 'react-router-dom';\n\n// on successful logout this component does not show any content and only runs the logout script\n// on failure it can display the error message to the user\nconst Logout = () => {\n\n    const { t } = useTranslation();\n\n    const navigate = useNavigate();\n\n    // TODO acquire token from cookie\n    const [token, setToken] = useState('')\n    const [error, setError] = useState()\n\n    // logout call\n    logout();\n\n    // POST logout request\n    function logout() {\n        // Send the POST request to the server endpoint\n        fetch(LOGOUT, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Token ${token}`\n            }\n        })\n            .then(response => {\n                if (response.ok) {\n                    // TODO check if startTransition() needed\n                    startTransition(() => {\n                        // TODO add proper variable for home navigation\n                        navigate('/');\n                    });\n                } else {\n                    // If the request was not successful throw an error\n                    return response.json().then(data => {\n                        throw new Error(data.detail);\n                    });\n                }\n            })\n            .catch(error => {\n                // TODO replace by proper variable\n                console.log('Error making the logout request.');\n                setError(error)\n            });\n    }\n\n    // THINK if necessary\n    const deleteTokenCookie = () => {\n        // TODO implement\n    };\n\n    return (\n        <>\n            {error ?\n                <h1>{t('logout_failed') + ': ' + error?.message}</h1>\n                :\n                null\n            }\n        </>\n    );\n};\n\nexport default Logout;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,eAAe,QAAQ,OAAO;AACxD,SAASC,cAAc,QAAQ,eAAe;AAE9C,SAASC,MAAM,QAAQ,4BAA4B;AACnD,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAEjB,MAAM;IAAEC;EAAE,CAAC,GAAGJ,cAAc,CAAC,CAAC;EAE9B,MAAMK,QAAQ,GAAGH,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC;;EAEpC;EACAY,MAAM,CAAC,CAAC;;EAER;EACA,SAASA,MAAMA,CAAA,EAAG;IACd;IACAC,KAAK,CAACV,MAAM,EAAE;MACVW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,eAAe,EAAE,SAASP,KAAK;MACnC;IACJ,CAAC,CAAC,CACGQ,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACb;QACAjB,eAAe,CAAC,MAAM;UAClB;UACAM,QAAQ,CAAC,GAAG,CAAC;QACjB,CAAC,CAAC;MACN,CAAC,MAAM;QACH;QACA,OAAOU,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAACI,IAAI,IAAI;UAChC,MAAM,IAAIC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC;QAChC,CAAC,CAAC;MACN;IACJ,CAAC,CAAC,CACDC,KAAK,CAACb,KAAK,IAAI;MACZ;MACAc,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/Cd,QAAQ,CAACD,KAAK,CAAC;IACnB,CAAC,CAAC;EACV;;EAEA;EACA,MAAMgB,iBAAiB,GAAGA,CAAA,KAAM;IAC5B;EAAA,CACH;EAED,oBACI3B,KAAA,CAAA4B,aAAA,CAAA5B,KAAA,CAAA6B,QAAA,QACKlB,KAAK,gBACFX,KAAA,CAAA4B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK5B,CAAC,CAAC,eAAe,CAAC,GAAG,IAAI,IAAGI,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEyB,OAAO,CAAK,CAAC,GAErD,IAEN,CAAC;AAEX,CAAC;AAED,eAAe9B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}