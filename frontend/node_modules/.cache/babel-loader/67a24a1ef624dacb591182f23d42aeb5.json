{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/EmailVerification.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { ID, KEY } from '../constants/URIs/General';\nimport { HOME } from '../constants/URLs/Navigation';\nimport { EMAIL_VERIFICATION } from '../constants/URIs/UserURIs';\nimport { ERR_POSTING_EMAIL_VERIFICATION } from '../constants/ErrorMessages';\nconst EmailVerification = () => {\n  const {\n    t\n  } = useTranslation('');\n  const navigate = useNavigate();\n  const params = useParams();\n  const id = params.id;\n  const key = params.key;\n  const [verificationSuccessful, setVerificationSuccessful] = useState(false);\n\n  // Function to send the POST request to the server\n  const postVerification = () => {\n    fetch(EMAIL_VERIFICATION.replace(ID, id).replace(KEY, key), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({})\n    }).then(response => {\n      if (response === null || response === void 0 ? void 0 : response.ok) {\n        setVerificationSuccessful(true);\n        return response.json();\n      } else {\n        // If the request was not successful, throw an error\n        return response.json().then(error => {\n          throw new Error(error.message);\n        });\n      }\n    }).catch(error => {\n      alert(ERR_POSTING_EMAIL_VERIFICATION + error.message);\n    });\n  };\n  const handleOkClick = () => {\n    navigate(HOME);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, t('heading')), verificationSuccessful ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, t('email_verification_successful')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button accent\",\n    onClick: handleOkClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, t('continue')))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button accent\",\n    onClick: postVerification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, t('verify_email'))));\n};\nexport default EmailVerification;","map":{"version":3,"names":["React","useEffect","useState","useTranslation","useNavigate","useParams","ID","KEY","HOME","EMAIL_VERIFICATION","ERR_POSTING_EMAIL_VERIFICATION","EmailVerification","t","navigate","params","id","key","verificationSuccessful","setVerificationSuccessful","postVerification","fetch","replace","method","headers","body","JSON","stringify","then","response","ok","json","error","Error","message","catch","alert","handleOkClick","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/EmailVerification.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { ID, KEY } from '../constants/URIs/General';\nimport { HOME } from '../constants/URLs/Navigation';\nimport { EMAIL_VERIFICATION } from '../constants/URIs/UserURIs';\nimport { ERR_POSTING_EMAIL_VERIFICATION } from '../constants/ErrorMessages';\n\n\nconst EmailVerification = () => {\n\n    const { t } = useTranslation('');\n\n    const navigate = useNavigate();\n\n    const params = useParams();\n    const id = params.id;\n    const key = params.key;\n\n    const [verificationSuccessful, setVerificationSuccessful] = useState(false);\n\n    // Function to send the POST request to the server\n    const postVerification = () => {\n        fetch(EMAIL_VERIFICATION.replace(ID, id).replace(KEY, key), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({})\n        })\n            .then(response => {\n                if (response?.ok) {\n                    setVerificationSuccessful(true)\n                    return response.json();\n                }\n                else {\n                    // If the request was not successful, throw an error\n                    return response.json().then(error => {\n                        throw new Error(error.message);\n                    });\n                }\n            })\n            .catch(error => {\n                alert(ERR_POSTING_EMAIL_VERIFICATION + error.message)\n            })\n    }\n\n    const handleOkClick = () => {\n        navigate(HOME);\n    }\n\n    return (\n        <>\n            <h1>{t('heading')}</h1>\n\n            {verificationSuccessful ?\n                <>\n                    <h2>{t('email_verification_successful')}</h2>\n                    <div className='button-container'>\n                        <button className='button accent' onClick={handleOkClick}>{t('continue')}</button>\n                    </div>\n                </>\n                :\n                <div className='button-container'>\n                    <button className='button accent' onClick={postVerification}>{t('verify_email')}</button>\n                </div>\n            }\n        </>\n    );\n}\n\nexport default EmailVerification;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}