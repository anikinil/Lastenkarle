{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/booking/pages/RegionalBooking.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\nimport Map from '../components/Map';\nimport FilterForAvailabilities from '../components/FilterForAvailabilities';\nimport AvailabilityCalendar from '../components/calendar/AvailabilityCalendar';\nimport BikeList from '../../allBikesList/components/BikeList';\nimport { ALL_BIKES, ALL_STORES } from '../../../constants/URIs/BookingURIs';\nimport { ERR_FETCHING_BIKES, ERR_FETCHING_DATA, ERR_FETCHING_STORES } from '../../../constants/ErrorMessages';\n//Standard page for a specific region\n//TODO: Add Map of region with station markers\n//TODO: Add Filter Bar for Availabilities\n//TODO: Add Calendar overview of reservations sorted by bike\n\nconst RegionalBooking = () => {\n  const {\n    t\n  } = useTranslation();\n  const regionName = useParams().region;\n  const [bikesInRegion, setBikesInRegion] = useState([]);\n  const fetchAllStores = async () => {\n    try {\n      const response = await fetch(ALL_STORES);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error(ERR_FETCHING_STORES, error);\n    }\n  };\n  const fetchAllBikes = async () => {\n    try {\n      const response = await fetch(ALL_BIKES);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error(ERR_FETCHING_BIKES, error);\n    }\n  };\n  const filterStoresByRegion = allStores => {\n    return allStores.filter(store => store.region.name.toLowerCase() === regionName);\n  };\n  const filterBikesByRegionStores = (allBikes, storesInRegion) => {\n    return allBikes.filter(bike => storesInRegion.some(store => store.id === bike.store));\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch data\n        const allStores = await fetchAllStores();\n        const allBikes = await fetchAllBikes();\n\n        // Filter data\n        const storesInRegion = filterStoresByRegion(allStores);\n        const bikesInRegion = filterBikesByRegionStores(allBikes, storesInRegion);\n\n        // Update state\n        setBikesInRegion(bikesInRegion);\n      } catch (error) {\n        console.error(ERR_FETCHING_DATA, error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, t('rent_in') + ': ' + regionName), /*#__PURE__*/React.createElement(BikeList, {\n    bikes: bikesInRegion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }));\n};\nexport default RegionalBooking;","map":{"version":3,"names":["React","useEffect","useState","useTranslation","useParams","Map","FilterForAvailabilities","AvailabilityCalendar","BikeList","ALL_BIKES","ALL_STORES","ERR_FETCHING_BIKES","ERR_FETCHING_DATA","ERR_FETCHING_STORES","RegionalBooking","t","regionName","region","bikesInRegion","setBikesInRegion","fetchAllStores","response","fetch","data","json","error","console","fetchAllBikes","filterStoresByRegion","allStores","filter","store","name","toLowerCase","filterBikesByRegionStores","allBikes","storesInRegion","bike","some","id","fetchData","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","bikes"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/booking/pages/RegionalBooking.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\n\nimport Map from '../components/Map';\nimport FilterForAvailabilities from '../components/FilterForAvailabilities';\nimport AvailabilityCalendar from '../components/calendar/AvailabilityCalendar';\nimport BikeList from '../../allBikesList/components/BikeList';\nimport { ALL_BIKES, ALL_STORES } from '../../../constants/URIs/BookingURIs';\nimport { ERR_FETCHING_BIKES, ERR_FETCHING_DATA, ERR_FETCHING_STORES } from '../../../constants/ErrorMessages';\n//Standard page for a specific region\n//TODO: Add Map of region with station markers\n//TODO: Add Filter Bar for Availabilities\n//TODO: Add Calendar overview of reservations sorted by bike\n\nconst RegionalBooking = () => {\n\n    const { t } = useTranslation();\n\n    const regionName = useParams().region;\n\n    const [bikesInRegion, setBikesInRegion] = useState([]);\n\n    const fetchAllStores = async () => {\n        try {\n            const response = await fetch(ALL_STORES);\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error(ERR_FETCHING_STORES, error);\n        }\n    }\n\n    const fetchAllBikes = async () => {\n        try {\n            const response = await fetch(ALL_BIKES);\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error(ERR_FETCHING_BIKES, error);\n        }\n    };\n\n    const filterStoresByRegion = (allStores) => {\n        return allStores.filter(store => store.region.name.toLowerCase() === regionName);\n    }\n\n    const filterBikesByRegionStores = (allBikes, storesInRegion) => {\n        return allBikes.filter(bike => storesInRegion.some(store => store.id === bike.store));\n    }\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                // Fetch data\n                const allStores = await fetchAllStores();\n                const allBikes = await fetchAllBikes();\n\n                // Filter data\n                const storesInRegion = filterStoresByRegion(allStores);\n                const bikesInRegion = filterBikesByRegionStores(allBikes, storesInRegion);\n\n                // Update state\n                setBikesInRegion(bikesInRegion);\n            } catch (error) {\n                console.error(ERR_FETCHING_DATA, error);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    return (\n        <>\n            <h1>{t('rent_in') + ': ' + regionName}</h1>\n\n            {/* <Map /> */}\n            {/* <FilterForAvailabilities /> */}\n            {/* <AvailabilityCalendar /> */}\n            <BikeList bikes={bikesInRegion} />\n        </>\n\n    );\n};\n\nexport default RegionalBooking;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}