{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/RoleBasedRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\n\n// Helper function to extract the user role\n// TODO implement\n// const getUserRole = () => {\n//   const token = localStorage.getItem('authToken');\n//   if (token) {\n//     const decodedToken = jwt_decode(token);\n//     return decodedToken.role;\n//   }\n//   return null;\n// };\nconst getUserRole = () => {\n  return 'admin';\n};\nconst RoleBasedRoute = ({\n  roles,\n  component: Component,\n  ...rest\n}) => {\n  const userRole = getUserRole();\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => roles.includes(userRole) ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/not-authorized\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }));\n};\nexport default RoleBasedRoute;","map":{"version":3,"names":["React","Route","Redirect","jwt_decode","getUserRole","RoleBasedRoute","roles","component","Component","rest","userRole","createElement","Object","assign","render","props","includes","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/RoleBasedRoute.js"],"sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\n\n// Helper function to extract the user role\n// TODO implement\n// const getUserRole = () => {\n//   const token = localStorage.getItem('authToken');\n//   if (token) {\n//     const decodedToken = jwt_decode(token);\n//     return decodedToken.role;\n//   }\n//   return null;\n// };\nconst getUserRole = () => {\n    return 'admin';\n}\n\nconst RoleBasedRoute = ({ roles, component: Component, ...rest }) => {\n  const userRole = getUserRole();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        roles.includes(userRole) ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/not-authorized\" />\n        )\n      }\n    />\n  );\n};\n\nexport default RoleBasedRoute;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,OAAOC,UAAU,MAAM,YAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACtB,OAAO,OAAO;AAClB,CAAC;AAED,MAAMC,cAAc,GAAGA,CAAC;EAAEC,KAAK;EAAEC,SAAS,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EACnE,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,oBACEJ,KAAA,CAAAW,aAAA,CAACV,KAAK,EAAAW,MAAA,CAAAC,MAAA,KACAJ,IAAI;IACRK,MAAM,EAAGC,KAAK,IACZT,KAAK,CAACU,QAAQ,CAACN,QAAQ,CAAC,gBACtBV,KAAA,CAAAW,aAAA,CAACH,SAAS,EAAAI,MAAA,CAAAC,MAAA,KAAKE,KAAK;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAAG,CAAC,gBAExBtB,KAAA,CAAAW,aAAA,CAACT,QAAQ;MAACqB,EAAE,EAAC,iBAAiB;MAAAN,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAEnC;IAAAL,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACF,CAAC;AAEN,CAAC;AAED,eAAejB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}