{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/components/display/SingleLineTextField.js\";\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport './SingleLineTextField.css';\n\n// displays a one-line textfield with information,\n// which can either be changed/entered (editable=true) or just viewed (editable=false)\nconst SingleLineTextField = ({\n  editable,\n  value,\n  title,\n  onChange\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const [text, setText] = useState(value);\n  const handleChange = event => {\n    console.log(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaa\", event.target.value); // TODO remove\n    setText(event.target.value);\n    onChange(event.target.value);\n  };\n\n  // this prevents user from switching to new line by hitting [Enter]\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"textarea\", {\n    title: title,\n    className: \"text-field\",\n    rows: \"1\",\n    value: value,\n    onChange: handleChange,\n    onKeyDown: handleKeyDown,\n    placeholder: title,\n    disabled: !editable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  });\n};\nexport default SingleLineTextField;","map":{"version":3,"names":["React","useState","useTranslation","SingleLineTextField","editable","value","title","onChange","t","text","setText","handleChange","event","console","log","target","handleKeyDown","key","preventDefault","createElement","className","rows","onKeyDown","placeholder","disabled","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/components/display/SingleLineTextField.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport './SingleLineTextField.css'\n\n// displays a one-line textfield with information,\n// which can either be changed/entered (editable=true) or just viewed (editable=false)\nconst SingleLineTextField = ({ editable, value, title, onChange}) => {\n\n    const { t } = useTranslation();\n\n    const [text, setText] = useState(value);\n\n    const handleChange = (event) => {\n        console.log(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaa\", event.target.value); // TODO remove\n        setText(event.target.value);\n        onChange(event.target.value);\n    };\n\n    // this prevents user from switching to new line by hitting [Enter]\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n        }\n    };\n\n    return (\n        <textarea\n            title={title}\n            className='text-field'\n            rows='1'\n            value={value}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            placeholder={title}\n            disabled={!editable}>\n        </textarea>\n    );\n}\n\nexport default SingleLineTextField;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,eAAe;AAE9C,OAAO,2BAA2B;;AAElC;AACA;AACA,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,KAAK;EAAEC,KAAK;EAAEC;AAAQ,CAAC,KAAK;EAEjE,MAAM;IAAEC;EAAE,CAAC,GAAGN,cAAc,CAAC,CAAC;EAE9B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACI,KAAK,CAAC;EAEvC,MAAMM,YAAY,GAAIC,KAAK,IAAK;IAC5BC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEF,KAAK,CAACG,MAAM,CAACV,KAAK,CAAC,CAAC,CAAC;IACtEK,OAAO,CAACE,KAAK,CAACG,MAAM,CAACV,KAAK,CAAC;IAC3BE,QAAQ,CAACK,KAAK,CAACG,MAAM,CAACV,KAAK,CAAC;EAChC,CAAC;;EAED;EACA,MAAMW,aAAa,GAAIJ,KAAK,IAAK;IAC7B,IAAIA,KAAK,CAACK,GAAG,KAAK,OAAO,EAAE;MACvBL,KAAK,CAACM,cAAc,CAAC,CAAC;IAC1B;EACJ,CAAC;EAED,oBACIlB,KAAA,CAAAmB,aAAA;IACIb,KAAK,EAAEA,KAAM;IACbc,SAAS,EAAC,YAAY;IACtBC,IAAI,EAAC,GAAG;IACRhB,KAAK,EAAEA,KAAM;IACbE,QAAQ,EAAEI,YAAa;IACvBW,SAAS,EAAEN,aAAc;IACzBO,WAAW,EAAEjB,KAAM;IACnBkB,QAAQ,EAAE,CAACpB,QAAS;IAAAqB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACd,CAAC;AAEnB,CAAC;AAED,eAAe3B,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module"}