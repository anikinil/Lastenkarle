{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/bikeDisplay/pages/BikePage.js\";\n//Page of singular Bike\n//Consists of a Name, Picture, Description and Information about the store it belongs to\n//Also has BikeCalendar which is component to make a reservation\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport PictureAndDescriptionField from '../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField';\nimport SingleLineTextField from '../../../components/display/SingleLineTextField';\nimport BikeCalendar from '../../booking/components/calendar/BikeCalendar';\nimport { BIKE_BY_ID, ID, STORE_BY_BIKE_ID } from '../../../constants/URIs/BookingURIs';\nimport { ERR_FETCHING_BIKE, ERR_FETCHING_STORE } from '../../../constants/errorMessages/FetchingErrors';\n\n// TODO implement fetching\n//TODO: Add calandar as availability overview\n// const bikes = [\n//     {\n//         id: 1,\n//         name: 'Lastenrad 1',\n//         image: require('../../../assets/images/bike1.jpg'),\n//         description: 'This is a description of Bike 1!',\n//         storeId: 2\n//     },\n//     {\n//         id: 2,\n//         name: 'Lastenrad 2',\n//         image: require('../../../assets/images/bike2.jpg'),\n//         description: 'This is a description of Bike 2!',\n//         storeId: 3\n//     },\n//     {\n//         id: 3,\n//         name: 'Lastenrad 3',\n//         image: require('../../../assets/images/bike3.jpg'),\n//         description: 'This is a description of Bike 3!',\n//         storeId: 1\n//     },\n//     {\n//         id: 4,\n//         name: 'Lastenrad 4',\n//         image: require('../../../assets/images/bike4.jpg'),\n//         description: 'This is a description of Bike 4!',\n//         storeId: 3\n//     },\n//     {\n//         id: 5,\n//         name: 'Lastenrad 5',\n//         image: '',\n//         description: 'This is a description of Bike 5!',\n//         storeId: 2\n//     }\n// ]\n// let stores = [\n//     {\n//         id: 1,\n//         name: 'Store 1',\n//         image: require('../../../assets/images/store1.jpg'),\n//         description: 'This is a description of Store 1',\n//         address: 'Musterstraße 123, 76137 Karlsruhe'\n//     },\n//     {\n//         id: 2,\n//         name: 'Store 2',\n//         image: require('../../../assets/images/store1.jpg').default,\n//         description: 'This is a description of Store 2',\n//         address: 'Musterstraße 123, 76137 Karlsruhe'\n//     },\n//     {\n//         id: 3,\n//         name: 'Store 3',\n//         image: null,\n//         description: 'This is a description of Store 3',\n//         address: 'Musterstraße 123, 76137 Karlsruhe'\n//     }\n// ]\n\nconst BikePage = () => {\n  const {\n    t\n  } = useTranslation();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [bike, setBike] = useState();\n  const [store, setStore] = useState();\n  const fetchBike = () => {\n    fetch(BIKE_BY_ID.replace(ID, id)).then(response => response.json()).then(data => {\n      setBike(data);\n    }).catch(error => {\n      console.error(ERR_FETCHING_BIKE, error);\n    });\n  };\n  const fetchStore = () => {\n    fetch(STORE_BY_BIKE_ID.replace(ID, bike.id)).then(response => response.json()).then(data => {\n      setStore(data);\n    }).catch(error => {\n      console.error(ERR_FETCHING_STORE, error);\n    });\n  };\n  useEffect(() => {\n    fetchBike();\n    fetchStore();\n  }, []);\n  const handleStoreClick = () => {\n    navigate(`/store/${store.id}`);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, bike.name), /*#__PURE__*/React.createElement(PictureAndDescriptionField, {\n    editable: false,\n    object: bike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SingleLineTextField, {\n    editable: false,\n    value: store.address,\n    title: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button regular\",\n    onClick: handleStoreClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, t('store'))), /*#__PURE__*/React.createElement(BikeCalendar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }));\n};\nexport default BikePage;","map":{"version":3,"names":["React","useEffect","useState","useTranslation","useNavigate","useParams","PictureAndDescriptionField","SingleLineTextField","BikeCalendar","BIKE_BY_ID","ID","STORE_BY_BIKE_ID","ERR_FETCHING_BIKE","ERR_FETCHING_STORE","BikePage","t","navigate","id","bike","setBike","store","setStore","fetchBike","fetch","replace","then","response","json","data","catch","error","console","fetchStore","handleStoreClick","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","name","editable","object","value","address","title","className","type","onClick"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/bikeDisplay/pages/BikePage.js"],"sourcesContent":["//Page of singular Bike\n//Consists of a Name, Picture, Description and Information about the store it belongs to\n//Also has BikeCalendar which is component to make a reservation\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\n\nimport { useNavigate, useParams } from 'react-router-dom';\nimport PictureAndDescriptionField from '../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField';\nimport SingleLineTextField from '../../../components/display/SingleLineTextField';\nimport BikeCalendar from '../../booking/components/calendar/BikeCalendar'\nimport { BIKE_BY_ID, ID, STORE_BY_BIKE_ID } from '../../../constants/URIs/BookingURIs';\nimport { ERR_FETCHING_BIKE, ERR_FETCHING_STORE } from '../../../constants/errorMessages/FetchingErrors';\n\n// TODO implement fetching\n//TODO: Add calandar as availability overview\n// const bikes = [\n//     {\n//         id: 1,\n//         name: 'Lastenrad 1',\n//         image: require('../../../assets/images/bike1.jpg'),\n//         description: 'This is a description of Bike 1!',\n//         storeId: 2\n//     },\n//     {\n//         id: 2,\n//         name: 'Lastenrad 2',\n//         image: require('../../../assets/images/bike2.jpg'),\n//         description: 'This is a description of Bike 2!',\n//         storeId: 3\n//     },\n//     {\n//         id: 3,\n//         name: 'Lastenrad 3',\n//         image: require('../../../assets/images/bike3.jpg'),\n//         description: 'This is a description of Bike 3!',\n//         storeId: 1\n//     },\n//     {\n//         id: 4,\n//         name: 'Lastenrad 4',\n//         image: require('../../../assets/images/bike4.jpg'),\n//         description: 'This is a description of Bike 4!',\n//         storeId: 3\n//     },\n//     {\n//         id: 5,\n//         name: 'Lastenrad 5',\n//         image: '',\n//         description: 'This is a description of Bike 5!',\n//         storeId: 2\n//     }\n// ]\n// let stores = [\n//     {\n//         id: 1,\n//         name: 'Store 1',\n//         image: require('../../../assets/images/store1.jpg'),\n//         description: 'This is a description of Store 1',\n//         address: 'Musterstraße 123, 76137 Karlsruhe'\n//     },\n//     {\n//         id: 2,\n//         name: 'Store 2',\n//         image: require('../../../assets/images/store1.jpg').default,\n//         description: 'This is a description of Store 2',\n//         address: 'Musterstraße 123, 76137 Karlsruhe'\n//     },\n//     {\n//         id: 3,\n//         name: 'Store 3',\n//         image: null,\n//         description: 'This is a description of Store 3',\n//         address: 'Musterstraße 123, 76137 Karlsruhe'\n//     }\n// ]\n\nconst BikePage = () => {\n\n    const { t } = useTranslation();\n    const navigate = useNavigate();\n\n    const { id } = useParams();\n    const [bike, setBike] = useState();\n    const [store, setStore] = useState();\n\n    const fetchBike = () => {\n        fetch(BIKE_BY_ID.replace(ID, id))\n            .then(response => response.json())\n            .then(data => {\n                setBike(data);\n            })\n            .catch(error => {\n                console.error(ERR_FETCHING_BIKE, error);\n            });\n    }\n\n    const fetchStore = () => {\n        fetch(STORE_BY_BIKE_ID.replace(ID, bike.id))\n            .then(response => response.json())\n            .then(data => {\n                setStore(data);\n            })\n            .catch(error => {\n                console.error(ERR_FETCHING_STORE, error);\n            });\n    }\n\n    useEffect(() => {\n        fetchBike();\n        fetchStore();\n    }, [])\n\n    const handleStoreClick = () => {\n        navigate(`/store/${store.id}`)\n    }\n\n    return (\n        <>\n            <h1>{bike.name}</h1>\n\n            <PictureAndDescriptionField editable={false} object={bike} />\n            <SingleLineTextField editable={false} value={store.address} title='address'/>\n\n            <div className='button-container'>\n                <button type='button' className='button regular' onClick={handleStoreClick}>{t('store')}</button>\n            </div>\n\n            <BikeCalendar />\n        </>\n    );\n};\n\nexport default BikePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}