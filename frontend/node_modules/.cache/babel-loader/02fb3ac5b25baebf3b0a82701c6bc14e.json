{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/Logout.js\";\nimport React, { useState, startTransition, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { LOGOUT } from '../constants/URIs/UserURIs';\nimport { useNavigate } from 'react-router-dom';\nimport { deleteCookie, getCookie } from '../services/Cookies';\nimport { LOGIN } from '../constants/URLs/Navigation';\nimport { ERR_POSTING_LOGOUT_REQUEST } from '../constants/ErrorMessages';\n\n// This component handles the logout process\nconst Logout = () => {\n  // Hook for translation\n  const {\n    t\n  } = useTranslation();\n\n  // State to store any error that occurs during logout\n  const [error, setError] = useState(null);\n\n  // Hook to navigate to different routes\n  const navigate = useNavigate();\n\n  // Retrieve the token from cookies\n  const token = getCookie('token');\n\n  // Function to handle the logout process\n  function logout() {\n    // Send the POST request to the server endpoint\n    fetch(LOGOUT, {\n      method: 'POST',\n      headers: {\n        // 'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(response => {\n      console.log(token);\n      if (response.ok) {\n        // If the response is successful, delete the token cookie\n        deleteCookie('token');\n        // Navigate to the login page\n        startTransition(() => {\n          navigate(LOGIN);\n        });\n      } else {\n        // If the request was not successful, throw an error\n        return response.json().then(data => {\n          throw new Error(data.detail);\n        });\n      }\n    }).catch(error => {\n      // Catch the error and set it in the state\n      setError(error);\n      console.log(ERR_POSTING_LOGOUT_REQUEST + ': ' + error);\n    });\n  }\n\n  // Hook to handle the logout process\n  useEffect(() => {\n    logout();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, error ?\n  /*#__PURE__*/\n  // Display error message if there is an error\n  React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, t('logout_failed') + ': ' + (error === null || error === void 0 ? void 0 : error.message)) :\n  /*#__PURE__*/\n  // Display logging out message if there is no error\n  React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, t('logging_out')));\n};\nexport default Logout;","map":{"version":3,"names":["React","useState","startTransition","useEffect","useTranslation","LOGOUT","useNavigate","deleteCookie","getCookie","LOGIN","ERR_POSTING_LOGOUT_REQUEST","Logout","t","error","setError","navigate","token","logout","fetch","method","headers","then","response","console","log","ok","json","data","Error","detail","catch","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","message"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/Logout.js"],"sourcesContent":["import React, { useState, startTransition, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { LOGOUT } from '../constants/URIs/UserURIs';\nimport { useNavigate } from 'react-router-dom';\nimport { deleteCookie, getCookie } from '../services/Cookies';\nimport { LOGIN } from '../constants/URLs/Navigation';\nimport { ERR_POSTING_LOGOUT_REQUEST } from '../constants/ErrorMessages';\n\n// This component handles the logout process\nconst Logout = () => {\n\n    // Hook for translation\n    const { t } = useTranslation();\n\n    // State to store any error that occurs during logout\n    const [error, setError] = useState(null);\n\n    // Hook to navigate to different routes\n    const navigate = useNavigate();\n\n    // Retrieve the token from cookies\n    const token = getCookie('token');\n    \n    // Function to handle the logout process\n    function logout() {\n        // Send the POST request to the server endpoint\n        fetch(LOGOUT, {\n            method: 'POST',\n            headers: {\n                // 'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`\n            }\n        })\n        .then(response => {\n            console.log(token);\n            if (response.ok) {\n                // If the response is successful, delete the token cookie\n                deleteCookie('token');\n                // Navigate to the login page\n                startTransition(() => {\n                    navigate(LOGIN);\n                });\n            } else {\n                // If the request was not successful, throw an error\n                return response.json().then(data => {\n                    throw new Error(data.detail);\n                });\n            }\n        })\n        .catch(error => {\n            // Catch the error and set it in the state\n            setError(error);\n            console.log(ERR_POSTING_LOGOUT_REQUEST + ': ' + error);\n        });\n    }\n\n    // Hook to handle the logout process\n    useEffect(() => {\n        logout();\n    }, []);\n    \n    return (\n        <>\n            {error ?\n                // Display error message if there is an error\n                <p>{t('logout_failed') + ': ' + error?.message}</p>\n                :\n                // Display logging out message if there is no error\n                <p>{t('logging_out')}</p>\n            }\n        </>\n    );\n};\n\nexport default Logout;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,eAAe,EAAEC,SAAS,QAAQ,OAAO;AACnE,SAASC,cAAc,QAAQ,eAAe;AAE9C,SAASC,MAAM,QAAQ,4BAA4B;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,EAAEC,SAAS,QAAQ,qBAAqB;AAC7D,SAASC,KAAK,QAAQ,8BAA8B;AACpD,SAASC,0BAA0B,QAAQ,4BAA4B;;AAEvE;AACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAEjB;EACA,MAAM;IAAEC;EAAE,CAAC,GAAGR,cAAc,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMc,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMU,KAAK,GAAGR,SAAS,CAAC,OAAO,CAAC;;EAEhC;EACA,SAASS,MAAMA,CAAA,EAAG;IACd;IACAC,KAAK,CAACb,MAAM,EAAE;MACVc,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL;QACA,eAAe,EAAE,SAASJ,KAAK;MACnC;IACJ,CAAC,CAAC,CACDK,IAAI,CAACC,QAAQ,IAAI;MACdC,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;MAClB,IAAIM,QAAQ,CAACG,EAAE,EAAE;QACb;QACAlB,YAAY,CAAC,OAAO,CAAC;QACrB;QACAL,eAAe,CAAC,MAAM;UAClBa,QAAQ,CAACN,KAAK,CAAC;QACnB,CAAC,CAAC;MACN,CAAC,MAAM;QACH;QACA,OAAOa,QAAQ,CAACI,IAAI,CAAC,CAAC,CAACL,IAAI,CAACM,IAAI,IAAI;UAChC,MAAM,IAAIC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC;QAChC,CAAC,CAAC;MACN;IACJ,CAAC,CAAC,CACDC,KAAK,CAACjB,KAAK,IAAI;MACZ;MACAC,QAAQ,CAACD,KAAK,CAAC;MACfU,OAAO,CAACC,GAAG,CAACd,0BAA0B,GAAG,IAAI,GAAGG,KAAK,CAAC;IAC1D,CAAC,CAAC;EACN;;EAEA;EACAV,SAAS,CAAC,MAAM;IACZc,MAAM,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIjB,KAAA,CAAA+B,aAAA,CAAA/B,KAAA,CAAAgC,QAAA,QACKnB,KAAK;EAAA;EACF;EACAb,KAAA,CAAA+B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI1B,CAAC,CAAC,eAAe,CAAC,GAAG,IAAI,IAAGC,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAE0B,OAAO,CAAI,CAAC;EAAA;EAEnD;EACAvC,KAAA,CAAA+B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI1B,CAAC,CAAC,aAAa,CAAK,CAE9B,CAAC;AAEX,CAAC;AAED,eAAeD,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}