{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/booking/pages/RegionalBooking.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\nimport Map from '../components/Map';\nimport FilterForAvailabilities from '../components/FilterForAvailabilities';\nimport AvailabilityCalendar from '../components/calendar/AvailabilityCalendar';\nimport BikeList from '../../allBikesList/components/BikeList';\nimport { ALL_BIKES, ALL_STORES } from '../../../constants/URIs/BookingURIs';\nimport { ERR_FETCHING_BIKES, ERR_FETCHING_STORES } from '../../../constants/ErrorMessages';\n//Standard page for a specific region\n//TODO: Add Map of region with station markers\n//TODO: Add Filter Bar for Availabilities\n//TODO: Add Calendar overview of reservations sorted by bike\n\nconst RegionalBooking = () => {\n  const {\n    t\n  } = useTranslation();\n  const regionName = useParams().region;\n  const [bikesInRegion, setBikesInRegion] = useState([]);\n  const fetchAllStores = async () => {\n    try {\n      const response = await fetch(ALL_STORES);\n      const data = await response.json();\n      const allStores = data;\n      const allBikes = fetchAllBikes();\n      const storesInRegion = filterStoresByRegion(allStores);\n      const bikesInRegion = filterBikesByRegionStores();\n      console.log(\"ALL STORES (FETCH)\", data);\n    } catch (error) {\n      console.error(ERR_FETCHING_STORES, error);\n    }\n  };\n  const fetchAllBikes = async () => {\n    try {\n      const response = await fetch(ALL_BIKES);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error(ERR_FETCHING_BIKES, error);\n    }\n  };\n  const filterStoresByRegion = allStores => {\n    setStoresInRegion(allStores.filter(store => store.region.name.toLowerCase() === regionName));\n    console.log(storesInRegion);\n  };\n  const filterBikesByRegionStores = (allBiikes, storesInRegion) => {\n    setBikesInRegion(allBiikes.filter(bike => storesInRegion.some(store => store.id === bike.store)));\n  };\n  useEffect(() => {\n    fetchAllStores();\n    console.log(\"ALL STORES\", allStores);\n    filterStoresByRegion();\n    fetchAllBikes();\n    filterBikesByRegionStores();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, t('rent_in') + ': ' + regionName), /*#__PURE__*/React.createElement(BikeList, {\n    bikes: bikesInRegion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }));\n};\nexport default RegionalBooking;","map":{"version":3,"names":["React","useEffect","useState","useTranslation","useParams","Map","FilterForAvailabilities","AvailabilityCalendar","BikeList","ALL_BIKES","ALL_STORES","ERR_FETCHING_BIKES","ERR_FETCHING_STORES","RegionalBooking","t","regionName","region","bikesInRegion","setBikesInRegion","fetchAllStores","response","fetch","data","json","allStores","allBikes","fetchAllBikes","storesInRegion","filterStoresByRegion","filterBikesByRegionStores","console","log","error","setStoresInRegion","filter","store","name","toLowerCase","allBiikes","bike","some","id","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","bikes"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/booking/pages/RegionalBooking.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\n\nimport Map from '../components/Map';\nimport FilterForAvailabilities from '../components/FilterForAvailabilities';\nimport AvailabilityCalendar from '../components/calendar/AvailabilityCalendar';\nimport BikeList from '../../allBikesList/components/BikeList';\nimport { ALL_BIKES, ALL_STORES } from '../../../constants/URIs/BookingURIs';\nimport { ERR_FETCHING_BIKES, ERR_FETCHING_STORES } from '../../../constants/ErrorMessages';\n//Standard page for a specific region\n//TODO: Add Map of region with station markers\n//TODO: Add Filter Bar for Availabilities\n//TODO: Add Calendar overview of reservations sorted by bike\n\nconst RegionalBooking = () => {\n\n    const { t } = useTranslation();\n\n    const regionName = useParams().region;\n\n    const [bikesInRegion, setBikesInRegion] = useState([]);\n\n    const fetchAllStores = async () => {\n        try {\n            const response = await fetch(ALL_STORES);\n            const data = await response.json();\n            const allStores = data;\n            const allBikes = fetchAllBikes();\n            const storesInRegion = filterStoresByRegion(allStores);\n            const bikesInRegion = filterBikesByRegionStores();\n            console.log(\"ALL STORES (FETCH)\", data);\n        } catch (error) {\n            console.error(ERR_FETCHING_STORES, error);\n        }\n    }\n\n    const fetchAllBikes = async () => {\n        try {\n            const response = await fetch(ALL_BIKES);\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error(ERR_FETCHING_BIKES, error);\n        }\n    };\n\n    const filterStoresByRegion = (allStores) => {\n        setStoresInRegion(allStores.filter(store => store.region.name.toLowerCase() === regionName));\n        console.log(storesInRegion);\n    }\n\n    const filterBikesByRegionStores = (allBiikes, storesInRegion) => {\n        setBikesInRegion(allBiikes.filter(bike => storesInRegion.some(store => store.id === bike.store)));\n    }\n\n    useEffect(() => {\n        fetchAllStores();\n        console.log(\"ALL STORES\", allStores);\n        filterStoresByRegion();\n        fetchAllBikes();\n        filterBikesByRegionStores();\n    }, []);\n\n    return (\n        <>\n            <h1>{t('rent_in') + ': ' + regionName}</h1>\n\n            {/* <Map /> */}\n            {/* <FilterForAvailabilities /> */}\n            {/* <AvailabilityCalendar /> */}\n            <BikeList bikes={bikesInRegion} />\n        </>\n\n    );\n};\n\nexport default RegionalBooking;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}