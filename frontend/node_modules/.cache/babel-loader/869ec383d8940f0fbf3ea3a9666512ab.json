{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/components/navbar/Navbar.js\";\nimport React, { useEffect, useState } from 'react';\nimport { menuItems, Roles } from '../../components/navbar/menuData';\nimport MenuItems from './MenuItems';\nimport './Navbar.css';\nimport logo from '../../assets/images/logo.png';\nimport { USER_DATA } from '../../constants/URIs/UserURIs';\nimport { getCookie } from '../../services/Cookies';\nimport { ERR_FETCHING_USER_FLAGS } from '../../constants/ErrorMessages';\nimport { useLocation } from 'react-router-dom';\nconst Navbar = () => {\n  // TODO only update when necessairy\n\n  // gets the current location (Router) to update the navbar after cahnge of user roles\n  const location = useLocation();\n  const token = getCookie('token');\n\n  // default role is visitor (not logged in)\n  const [userRoles, setUserRoles] = useState([Roles.VISITOR]);\n  const [filteredMenuItems, setFilteredMenuItems] = useState([]);\n  const fetchUserRoles = () => {\n    if (token !== 'undefined' && token !== null) {\n      fetch(USER_DATA, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`\n        }\n      }).then(response => response.json()).then(data => {\n        const list = data.user_flags.map(element => element.flag);\n        const stores = list.filter(role => role.includes('Store: '));\n        const roles = list.filter(role => !role.includes('Store: ')).map(role => role.replace('Store: ', ''));\n        setUserRoles(roles);\n        console.log('user roles:', roles);\n        console.log('user stores:', stores);\n      }).catch(error => {\n        console.error(ERR_FETCHING_USER_FLAGS, error);\n      });\n    } else {\n      setUserRoles([Roles.VISITOR]);\n    }\n  };\n\n  // fetch user roles on first render, if token is present (user is logged in)\n  useEffect(() => {\n    fetchUserRoles();\n  }, [location]);\n  useEffect(() => {\n    let filteredItems = menuItems.filter(item => userRoles.some(role => item.roles.includes(role)));\n    setFilteredMenuItems(filteredItems);\n  }, [userRoles]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/\",\n    className: \"logo-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo-img\",\n    src: logo,\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"menus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, filteredMenuItems.length > 0 ? filteredMenuItems.map((item, index) => /*#__PURE__*/React.createElement(MenuItems, {\n    key: index,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  })) : null)));\n};\nexport default Navbar;","map":{"version":3,"names":["React","useEffect","useState","menuItems","Roles","MenuItems","logo","USER_DATA","getCookie","ERR_FETCHING_USER_FLAGS","useLocation","Navbar","location","token","userRoles","setUserRoles","VISITOR","filteredMenuItems","setFilteredMenuItems","fetchUserRoles","fetch","headers","then","response","json","data","list","user_flags","map","element","flag","stores","filter","role","includes","roles","replace","console","log","catch","error","filteredItems","item","some","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","href","src","alt","length","index","key"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/components/navbar/Navbar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { menuItems, Roles } from '../../components/navbar/menuData'\nimport MenuItems from './MenuItems';\nimport './Navbar.css';\nimport logo from '../../assets/images/logo.png';\nimport { USER_DATA } from '../../constants/URIs/UserURIs';\nimport { getCookie } from '../../services/Cookies';\nimport { ERR_FETCHING_USER_FLAGS } from '../../constants/ErrorMessages';\nimport { useLocation } from 'react-router-dom';\n\nconst Navbar = () => {\n\n    // TODO only update when necessairy\n\n    // gets the current location (Router) to update the navbar after cahnge of user roles\n    const location = useLocation();\n\n    const token = getCookie('token');\n\n    // default role is visitor (not logged in)\n    const [userRoles, setUserRoles] = useState([Roles.VISITOR]);\n    const [filteredMenuItems, setFilteredMenuItems] = useState([]);\n    \n    const fetchUserRoles = () => {\n        if (token !== 'undefined' && token !== null) {\n            fetch(USER_DATA, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                }\n            })\n            .then(response => response.json())\n            .then(data => {\n                const list = data.user_flags.map(element => element.flag);\n                const stores = list.filter(role => role.includes('Store: '));\n                const roles = (list.filter(role => !role.includes('Store: '))).map(role => role.replace('Store: ', ''));\n\n                setUserRoles(roles);\n                console.log('user roles:', roles);\n                console.log('user stores:', stores);\n            })\n            .catch(error => {\n                console.error(ERR_FETCHING_USER_FLAGS, error);\n            });\n        } else {\n            setUserRoles([Roles.VISITOR]);\n        }\n    }\n\n    // fetch user roles on first render, if token is present (user is logged in)\n    useEffect(() => {\n        fetchUserRoles();\n    }, [location]);\n\n    useEffect(() => {\n        let filteredItems = menuItems.filter(item =>\n            userRoles.some(role => item.roles.includes(role))\n        );\n        setFilteredMenuItems(filteredItems);\n    }, [userRoles]);\n\n    return (\n        <div className='nav-area'>\n            <a href='/' className='logo-container'>\n                <img className='logo-img' src={logo} alt='Logo' />\n            </a>\n            <nav className='nav'>\n                <ul className='menus'>\n                    {filteredMenuItems.length > 0 ? filteredMenuItems.map((item, index) => (\n                        <MenuItems key={index} item={item} />\n                    )) : null}\n                </ul>\n            </nav>\n        </div>\n    );\n}\n\nexport default Navbar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}