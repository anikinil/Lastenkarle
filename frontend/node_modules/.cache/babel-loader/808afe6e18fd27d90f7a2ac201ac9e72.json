{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/components/navbar/Navbar.js\";\nimport React, { useEffect, useState } from 'react';\nimport MenuItems from './MenuItems';\nimport './Navbar.css';\nimport logo from '../../assets/images/logo.png';\nimport { USER_DATA } from '../../constants/URIs/UserURIs';\nimport { getCookie } from '../../services/Cookies';\nimport { ERR_FETCHING_USER_FLAGS } from '../../constants/ErrorMessages';\nimport { useLocation } from 'react-router-dom';\nimport { FaUser } from 'react-icons/fa';\nimport { ACCOUNT_DELETION, LOGIN, LOGOUT, REGIONAL_BOOKING, REGISTER } from '../../constants/URLs/Navigation';\nimport { REGION_NAME } from '../../constants/URLs/General';\n\n// TODO find appropriate place for this\nexport const Roles = Object.freeze({\n  CUSTOMER: 'Customer',\n  MANAGER: 'Manager',\n  ADMINISTRATOR: 'Administrator',\n  VISITOR: 'Visitor'\n});\nconst Navbar = () => {\n  // TODO only update when necessairy\n\n  // gets the current location (Router) to update the navbar after cahnge of user roles\n  const location = useLocation();\n  const token = getCookie('token');\n\n  // default role is visitor (not logged in)\n  const [userRoles, setUserRoles] = useState([Roles.VISITOR]);\n  const [filteredMenuItems, setFilteredMenuItems] = useState([]);\n\n  // TODO make each title a translatoin constant\n  // TODO use URL constants for each url\n  const getMenuItems = stores => {\n    const storeItems = stores.map(s => ({\n      title: s.name,\n      url: `/store/${s.id}`\n    }));\n    const allItems = [{\n      title: 'Booking',\n      url: '/booking',\n      roles: [Roles.CUSTOMER, Roles.MANAGER, Roles.ADMINISTRATOR, Roles.VISITOR],\n      submenu: [{\n        title: 'Karlsruhe',\n        url: REGIONAL_BOOKING.replace(REGION_NAME, 'karlsruhe')\n      }, {\n        title: 'Ettlingen',\n        url: REGIONAL_BOOKING.replace(REGION_NAME, 'ettlingen')\n      }, {\n        title: 'Bruchsaal',\n        url: REGIONAL_BOOKING.replace(REGION_NAME, 'bruchsaal')\n      }, {\n        title: 'Malsch',\n        url: REGIONAL_BOOKING.replace(REGION_NAME, 'malsch')\n      }]\n    }, {\n      title: 'Store management',\n      url: '/stores',\n      roles: [Roles.MANAGER, Roles.ADMINISTRATOR],\n      submenu: storeItems\n    }, {\n      title: 'Admin activities',\n      roles: [Roles.ADMINISTRATOR],\n      submenu: [{\n        title: 'Bookings',\n        url: '/bookings'\n      }, {\n        title: 'Users',\n        url: '/users'\n      }, {\n        title: 'Stores',\n        url: '/stores'\n      }, {\n        title: 'Bikes',\n        url: '/bikes'\n      }, {\n        title: 'Enrollment',\n        url: '/enrollment'\n      }]\n    }, {\n      title: /*#__PURE__*/React.createElement(FaUser, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 24\n        }\n      }),\n      url: '/my-bookings',\n      roles: [Roles.CUSTOMER, Roles.MANAGER, Roles.ADMINISTRATOR],\n      submenu: [{\n        title: 'Logout',\n        url: LOGOUT\n      }, {\n        title: 'Delete account',\n        url: ACCOUNT_DELETION\n      }]\n    }, {\n      title: /*#__PURE__*/React.createElement(FaUser, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 24\n        }\n      }),\n      url: null,\n      roles: [Roles.VISITOR],\n      submenu: [{\n        title: 'Login',\n        url: LOGIN\n      }, {\n        title: 'Register',\n        url: REGISTER\n      }]\n    }];\n    return allItems.filter(item => userRoles.some(role => item.roles.includes(role)));\n  };\n  const fetchUserRoles = () => {\n    if (token !== 'undefined' && token !== null) {\n      fetch(USER_DATA, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`\n        }\n      }).then(response => response.json()).then(data => {\n        // get the user flags from the response\n        const flags = data.user_flags.map(element => element.flag);\n        // get the store names from the flags\n        const stores = flags.filter(role => role.includes('Store: ')).map(role => role.replace('Store: ', ''));\n        // get the roles from the flags\n        const roles = flags.filter(role => !role.includes('Store: '));\n        // add the manager role if the user has stores\n        if (stores.length > 0) roles.push(Roles.MANAGER);\n        setUserRoles(roles);\n      }).catch(error => {\n        console.error(ERR_FETCHING_USER_FLAGS, error);\n      });\n    } else {\n      setUserRoles([Roles.VISITOR]);\n    }\n  };\n\n  // fetch user roles on first render, if token is present (user is logged in)\n  useEffect(() => {\n    fetchUserRoles();\n  }, [location]);\n  useEffect(() => {\n    setFilteredMenuItems(getMenuItems(stores));\n  }, [userRoles]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/\",\n    className: \"logo-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo-img\",\n    src: logo,\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"menus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, filteredMenuItems.length > 0 ? filteredMenuItems.map((item, index) => /*#__PURE__*/React.createElement(MenuItems, {\n    key: index,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  })) : null)));\n};\nexport default Navbar;","map":{"version":3,"names":["React","useEffect","useState","MenuItems","logo","USER_DATA","getCookie","ERR_FETCHING_USER_FLAGS","useLocation","FaUser","ACCOUNT_DELETION","LOGIN","LOGOUT","REGIONAL_BOOKING","REGISTER","REGION_NAME","Roles","Object","freeze","CUSTOMER","MANAGER","ADMINISTRATOR","VISITOR","Navbar","location","token","userRoles","setUserRoles","filteredMenuItems","setFilteredMenuItems","getMenuItems","stores","storeItems","map","s","title","name","url","id","allItems","roles","submenu","replace","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","filter","item","some","role","includes","fetchUserRoles","fetch","headers","then","response","json","data","flags","user_flags","element","flag","length","push","catch","error","console","className","href","src","alt","index","key"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/components/navbar/Navbar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport MenuItems from './MenuItems';\nimport './Navbar.css';\nimport logo from '../../assets/images/logo.png';\nimport { USER_DATA } from '../../constants/URIs/UserURIs';\nimport { getCookie } from '../../services/Cookies';\nimport { ERR_FETCHING_USER_FLAGS } from '../../constants/ErrorMessages';\nimport { useLocation } from 'react-router-dom';\nimport { FaUser } from 'react-icons/fa';\nimport { ACCOUNT_DELETION, LOGIN, LOGOUT, REGIONAL_BOOKING, REGISTER } from '../../constants/URLs/Navigation';\nimport { REGION_NAME } from '../../constants/URLs/General';\n\n\n// TODO find appropriate place for this\nexport const Roles = Object.freeze({\n    CUSTOMER: 'Customer',\n    MANAGER: 'Manager',\n    ADMINISTRATOR: 'Administrator',\n    VISITOR: 'Visitor'\n});\n\nconst Navbar = () => {\n\n    // TODO only update when necessairy\n\n    // gets the current location (Router) to update the navbar after cahnge of user roles\n    const location = useLocation();\n\n    const token = getCookie('token');\n\n    // default role is visitor (not logged in)\n    const [userRoles, setUserRoles] = useState([Roles.VISITOR]);\n    const [filteredMenuItems, setFilteredMenuItems] = useState([]);\n\n    // TODO make each title a translatoin constant\n    // TODO use URL constants for each url\n    const getMenuItems = (stores) => {\n        const storeItems = stores.map((s) => ({ title: s.name, url: `/store/${s.id}` }))\n        const allItems = [\n            {\n                title: 'Booking',\n                url: '/booking',\n                roles: [Roles.CUSTOMER, Roles.MANAGER, Roles.ADMINISTRATOR, Roles.VISITOR],\n                submenu: [\n                    {\n                        title: 'Karlsruhe',\n                        url: REGIONAL_BOOKING.replace(REGION_NAME, 'karlsruhe')\n                    },\n                    {\n                        title: 'Ettlingen',\n                        url: REGIONAL_BOOKING.replace(REGION_NAME, 'ettlingen')\n                    },\n                    {\n                        title: 'Bruchsaal',\n                        url: REGIONAL_BOOKING.replace(REGION_NAME, 'bruchsaal')\n                    },\n                    {\n                        title: 'Malsch',\n                        url: REGIONAL_BOOKING.replace(REGION_NAME, 'malsch')\n                    }\n                ]\n            },\n            {\n                title: 'Store management',\n                url: '/stores',\n                roles: [Roles.MANAGER, Roles.ADMINISTRATOR],\n                submenu: storeItems\n            },\n            {\n                title: 'Admin activities',\n                roles: [Roles.ADMINISTRATOR],\n                submenu: [\n                    {\n                        title: 'Bookings',\n                        url: '/bookings',\n                    },\n                    {\n                        title: 'Users',\n                        url: '/users',\n                    },\n                    {\n                        title: 'Stores',\n                        url: '/stores',\n                    },\n                    {\n                        title: 'Bikes',\n                        url: '/bikes',\n                    },\n                    {\n                        title: 'Enrollment',\n                        url: '/enrollment',\n                    }\n                ]\n            },\n            {\n                title: <FaUser />,\n                url: '/my-bookings',\n                roles: [Roles.CUSTOMER, Roles.MANAGER, Roles.ADMINISTRATOR],\n                submenu: [\n                    {\n                        title: 'Logout',\n                        url: LOGOUT,\n                    },\n                    {\n                        title: 'Delete account',\n                        url: ACCOUNT_DELETION,\n                    }\n                ]\n            },\n            {\n                title: <FaUser />,\n                url: null,\n                roles: [Roles.VISITOR],\n                submenu: [\n                    {\n                        title: 'Login',\n                        url: LOGIN,\n                    },\n                    {\n                        title: 'Register',\n                        url: REGISTER,\n                    }\n                ]\n            }\n        ]\n\n        return allItems.filter(item => userRoles.some(role => item.roles.includes(role)));\n    };\n\n    const fetchUserRoles = () => {\n        if (token !== 'undefined' && token !== null) {\n            fetch(USER_DATA, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                }\n            })\n                .then(response => response.json())\n                .then(data => {\n                    // get the user flags from the response\n                    const flags = data.user_flags.map(element => element.flag);\n                    // get the store names from the flags\n                    const stores = flags.filter(role => role.includes('Store: ')).map(role => role.replace('Store: ', ''));\n                    // get the roles from the flags\n                    const roles = (flags.filter(role => !role.includes('Store: ')));\n                    // add the manager role if the user has stores\n                    if (stores.length > 0) roles.push(Roles.MANAGER);\n\n                    setUserRoles(roles);\n                })\n                .catch(error => {\n                    console.error(ERR_FETCHING_USER_FLAGS, error);\n                });\n        } else {\n            setUserRoles([Roles.VISITOR]);\n        }\n    }\n\n    // fetch user roles on first render, if token is present (user is logged in)\n    useEffect(() => {\n        fetchUserRoles();\n    }, [location]);\n\n    useEffect(() => {\n        setFilteredMenuItems(getMenuItems(stores));\n    }, [userRoles]);\n\n    return (\n        <div className='nav-area'>\n            <a href='/' className='logo-container'>\n                <img className='logo-img' src={logo} alt='Logo' />\n            </a>\n            <nav className='nav'>\n                <ul className='menus'>\n                    {filteredMenuItems.length > 0 ? filteredMenuItems.map((item, index) => (\n                        <MenuItems key={index} item={item} />\n                    )) : null}\n                </ul>\n            </nav>\n        </div>\n    );\n}\n\nexport default Navbar;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,cAAc;AACrB,OAAOC,IAAI,MAAM,8BAA8B;AAC/C,SAASC,SAAS,QAAQ,+BAA+B;AACzD,SAASC,SAAS,QAAQ,wBAAwB;AAClD,SAASC,uBAAuB,QAAQ,+BAA+B;AACvE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,QAAQ,gBAAgB;AACvC,SAASC,gBAAgB,EAAEC,KAAK,EAAEC,MAAM,EAAEC,gBAAgB,EAAEC,QAAQ,QAAQ,iCAAiC;AAC7G,SAASC,WAAW,QAAQ,8BAA8B;;AAG1D;AACA,OAAO,MAAMC,KAAK,GAAGC,MAAM,CAACC,MAAM,CAAC;EAC/BC,QAAQ,EAAE,UAAU;EACpBC,OAAO,EAAE,SAAS;EAClBC,aAAa,EAAE,eAAe;EAC9BC,OAAO,EAAE;AACb,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAEjB;;EAEA;EACA,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9B,MAAMiB,KAAK,GAAGnB,SAAS,CAAC,OAAO,CAAC;;EAEhC;EACA,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,CAACc,KAAK,CAACM,OAAO,CAAC,CAAC;EAC3D,MAAM,CAACM,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;;EAE9D;EACA;EACA,MAAM4B,YAAY,GAAIC,MAAM,IAAK;IAC7B,MAAMC,UAAU,GAAGD,MAAM,CAACE,GAAG,CAAEC,CAAC,KAAM;MAAEC,KAAK,EAAED,CAAC,CAACE,IAAI;MAAEC,GAAG,EAAE,UAAUH,CAAC,CAACI,EAAE;IAAG,CAAC,CAAC,CAAC;IAChF,MAAMC,QAAQ,GAAG,CACb;MACIJ,KAAK,EAAE,SAAS;MAChBE,GAAG,EAAE,UAAU;MACfG,KAAK,EAAE,CAACxB,KAAK,CAACG,QAAQ,EAAEH,KAAK,CAACI,OAAO,EAAEJ,KAAK,CAACK,aAAa,EAAEL,KAAK,CAACM,OAAO,CAAC;MAC1EmB,OAAO,EAAE,CACL;QACIN,KAAK,EAAE,WAAW;QAClBE,GAAG,EAAExB,gBAAgB,CAAC6B,OAAO,CAAC3B,WAAW,EAAE,WAAW;MAC1D,CAAC,EACD;QACIoB,KAAK,EAAE,WAAW;QAClBE,GAAG,EAAExB,gBAAgB,CAAC6B,OAAO,CAAC3B,WAAW,EAAE,WAAW;MAC1D,CAAC,EACD;QACIoB,KAAK,EAAE,WAAW;QAClBE,GAAG,EAAExB,gBAAgB,CAAC6B,OAAO,CAAC3B,WAAW,EAAE,WAAW;MAC1D,CAAC,EACD;QACIoB,KAAK,EAAE,QAAQ;QACfE,GAAG,EAAExB,gBAAgB,CAAC6B,OAAO,CAAC3B,WAAW,EAAE,QAAQ;MACvD,CAAC;IAET,CAAC,EACD;MACIoB,KAAK,EAAE,kBAAkB;MACzBE,GAAG,EAAE,SAAS;MACdG,KAAK,EAAE,CAACxB,KAAK,CAACI,OAAO,EAAEJ,KAAK,CAACK,aAAa,CAAC;MAC3CoB,OAAO,EAAET;IACb,CAAC,EACD;MACIG,KAAK,EAAE,kBAAkB;MACzBK,KAAK,EAAE,CAACxB,KAAK,CAACK,aAAa,CAAC;MAC5BoB,OAAO,EAAE,CACL;QACIN,KAAK,EAAE,UAAU;QACjBE,GAAG,EAAE;MACT,CAAC,EACD;QACIF,KAAK,EAAE,OAAO;QACdE,GAAG,EAAE;MACT,CAAC,EACD;QACIF,KAAK,EAAE,QAAQ;QACfE,GAAG,EAAE;MACT,CAAC,EACD;QACIF,KAAK,EAAE,OAAO;QACdE,GAAG,EAAE;MACT,CAAC,EACD;QACIF,KAAK,EAAE,YAAY;QACnBE,GAAG,EAAE;MACT,CAAC;IAET,CAAC,EACD;MACIF,KAAK,eAAEnC,KAAA,CAAA2C,aAAA,CAAClC,MAAM;QAAAmC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAAC;MACjBZ,GAAG,EAAE,cAAc;MACnBG,KAAK,EAAE,CAACxB,KAAK,CAACG,QAAQ,EAAEH,KAAK,CAACI,OAAO,EAAEJ,KAAK,CAACK,aAAa,CAAC;MAC3DoB,OAAO,EAAE,CACL;QACIN,KAAK,EAAE,QAAQ;QACfE,GAAG,EAAEzB;MACT,CAAC,EACD;QACIuB,KAAK,EAAE,gBAAgB;QACvBE,GAAG,EAAE3B;MACT,CAAC;IAET,CAAC,EACD;MACIyB,KAAK,eAAEnC,KAAA,CAAA2C,aAAA,CAAClC,MAAM;QAAAmC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAAC;MACjBZ,GAAG,EAAE,IAAI;MACTG,KAAK,EAAE,CAACxB,KAAK,CAACM,OAAO,CAAC;MACtBmB,OAAO,EAAE,CACL;QACIN,KAAK,EAAE,OAAO;QACdE,GAAG,EAAE1B;MACT,CAAC,EACD;QACIwB,KAAK,EAAE,UAAU;QACjBE,GAAG,EAAEvB;MACT,CAAC;IAET,CAAC,CACJ;IAED,OAAOyB,QAAQ,CAACW,MAAM,CAACC,IAAI,IAAIzB,SAAS,CAAC0B,IAAI,CAACC,IAAI,IAAIF,IAAI,CAACX,KAAK,CAACc,QAAQ,CAACD,IAAI,CAAC,CAAC,CAAC;EACrF,CAAC;EAED,MAAME,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAI9B,KAAK,KAAK,WAAW,IAAIA,KAAK,KAAK,IAAI,EAAE;MACzC+B,KAAK,CAACnD,SAAS,EAAE;QACboD,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,SAAShC,KAAK;QACnC;MACJ,CAAC,CAAC,CACGiC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACV;QACA,MAAMC,KAAK,GAAGD,IAAI,CAACE,UAAU,CAAC9B,GAAG,CAAC+B,OAAO,IAAIA,OAAO,CAACC,IAAI,CAAC;QAC1D;QACA,MAAMlC,MAAM,GAAG+B,KAAK,CAACZ,MAAM,CAACG,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAACrB,GAAG,CAACoB,IAAI,IAAIA,IAAI,CAACX,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QACtG;QACA,MAAMF,KAAK,GAAIsB,KAAK,CAACZ,MAAM,CAACG,IAAI,IAAI,CAACA,IAAI,CAACC,QAAQ,CAAC,SAAS,CAAC,CAAE;QAC/D;QACA,IAAIvB,MAAM,CAACmC,MAAM,GAAG,CAAC,EAAE1B,KAAK,CAAC2B,IAAI,CAACnD,KAAK,CAACI,OAAO,CAAC;QAEhDO,YAAY,CAACa,KAAK,CAAC;MACvB,CAAC,CAAC,CACD4B,KAAK,CAACC,KAAK,IAAI;QACZC,OAAO,CAACD,KAAK,CAAC9D,uBAAuB,EAAE8D,KAAK,CAAC;MACjD,CAAC,CAAC;IACV,CAAC,MAAM;MACH1C,YAAY,CAAC,CAACX,KAAK,CAACM,OAAO,CAAC,CAAC;IACjC;EACJ,CAAC;;EAED;EACArB,SAAS,CAAC,MAAM;IACZsD,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAAC/B,QAAQ,CAAC,CAAC;EAEdvB,SAAS,CAAC,MAAM;IACZ4B,oBAAoB,CAACC,YAAY,CAACC,MAAM,CAAC,CAAC;EAC9C,CAAC,EAAE,CAACL,SAAS,CAAC,CAAC;EAEf,oBACI1B,KAAA,CAAA2C,aAAA;IAAK4B,SAAS,EAAC,UAAU;IAAA3B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrBjD,KAAA,CAAA2C,aAAA;IAAG6B,IAAI,EAAC,GAAG;IAACD,SAAS,EAAC,gBAAgB;IAAA3B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClCjD,KAAA,CAAA2C,aAAA;IAAK4B,SAAS,EAAC,UAAU;IAACE,GAAG,EAAErE,IAAK;IAACsE,GAAG,EAAC,MAAM;IAAA9B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAClD,CAAC,eACJjD,KAAA,CAAA2C,aAAA;IAAK4B,SAAS,EAAC,KAAK;IAAA3B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChBjD,KAAA,CAAA2C,aAAA;IAAI4B,SAAS,EAAC,OAAO;IAAA3B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAChBrB,iBAAiB,CAACsC,MAAM,GAAG,CAAC,GAAGtC,iBAAiB,CAACK,GAAG,CAAC,CAACkB,IAAI,EAAEwB,KAAK,kBAC9D3E,KAAA,CAAA2C,aAAA,CAACxC,SAAS;IAACyE,GAAG,EAAED,KAAM;IAACxB,IAAI,EAAEA,IAAK;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACvC,CAAC,GAAG,IACL,CACH,CACJ,CAAC;AAEd,CAAC;AAED,eAAe1B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}