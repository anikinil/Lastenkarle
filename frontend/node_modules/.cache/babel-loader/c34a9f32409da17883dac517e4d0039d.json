{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/storeConfig/pages/StoreConfigPage.js\";\nimport React from \"react\";\n\n// Importing components for display and configuration\nimport PictureAndDescriptionField from \"../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField\";\nimport StoreOpeningTimesConfig from \"../components/StoreOpeningTimesConfig\";\nimport BikeList from \"../../bikeList/components/BikeList\";\n\n// Importing hooks for routing and translation\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from 'react-router-dom';\n\n// Importing a text field component\nimport SingleLineTextField from \"../../../components/display/SingleLineTextField\";\nimport { STORE_PAGE_BY_STORE_NAME } from \"../../../constants/URIs/ManagerURI\";\nimport { ERR_FETCHING_STORE, ERR_UPDATING_STORE } from \"../../../constants/ErrorMessages\";\nimport { useState, useEffect } from \"react\";\nimport { SUCCESS_UPDATING_STORE } from \"../../../constants/SuccessMessages\";\nimport { STORE } from \"../../../constants/URLs/Navigation\";\nimport { STORE_NAME } from \"../../../constants/URLs/General\";\nimport { getCookie } from \"../../../services/Cookies\";\n\n// Mock data for stores (to be replaced with actual fetching logic)\n// let stores = [\n//     {\n\n//         id: 1,\n//         name: 'Store 1',\n//         image: require('../../../assets/images/store1.jpg'),\n//         description: 'This is a description of Store 1',\n//         address: 'Musterstraße 123, 76137 Karlsruhe'\n//     },\n//     {\n//         id: 2,\n//         name: 'Store 2',\n//         image: require('../../../assets/images/store1.jpg').default,\n//         description: 'This is a description of Store 2',\n//         address: 'Musterstraße 123, 76137 Karlsruhe'\n//     },\n//     {\n//         id: 3,\n//         name: 'Store 3',\n//         image: null,\n//         description: 'This is a description of Store 3',\n//         address: 'Musterstraße 123, 76137 Karlsruhe'\n//     }\n// ]\n\n// TODO make sure, storeName is passed to this component as parameter\n\n// page for the configuration of an existing store\nconst StoreConfigPage = () => {\n  const [newAddress, setNewAddress] = useState('');\n  const {\n    t\n  } = useTranslation();\n  // Hook for navigation\n  const navigate = useNavigate();\n\n  // Extracting store name from URL parameters\n  const storeName = useParams().store;\n\n  // State to hold store data\n  const [store, setStore] = useState();\n  const token = getCookie('token');\n\n  // fetches store data\n  const fetchStore = () => {\n    console.log(storeName);\n    fetch(STORE_PAGE_BY_STORE_NAME.replace(STORE_NAME, storeName), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      setStore(data);\n    }).catch(error => {\n      console.error(ERR_FETCHING_STORE, error);\n    });\n  };\n\n  // Function to post changes to the store\n  const postChanges = () => {\n    let payload = {\n      address: newAddress\n    };\n    fetch(STORE_PAGE_BY_STORE_NAME.replace(STORE_NAME, storeName), {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(payload)\n    }).then(response => response.json()).then(data => {\n      console.log(SUCCESS_UPDATING_STORE, data);\n    }).catch(error => {\n      console.error(ERR_UPDATING_STORE, error);\n    });\n  };\n  useEffect(() => {\n    fetchStore();\n  }, []);\n\n  // Handler for address change\n  const handleAddressChange = value => {\n    setNewAddress(value);\n  };\n\n  // Handler for submit button click\n  const handleSubmitClick = () => {\n    postChanges();\n    navigate(STORE.replace(STORE_NAME, storeName));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PictureAndDescriptionField, {\n    image: store.image,\n    description: store.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SingleLineTextField, {\n    editable: true,\n    value: store.address,\n    title: 'address',\n    onChange: handleAddressChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StoreOpeningTimesConfig, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(BikeList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SingleLineTextField, {\n    value: store.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button regular\",\n    onClick: handleSubmitClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, t('submit_changes'))));\n};\nexport default StoreConfigPage;","map":{"version":3,"names":["React","PictureAndDescriptionField","StoreOpeningTimesConfig","BikeList","useParams","useTranslation","useNavigate","SingleLineTextField","STORE_PAGE_BY_STORE_NAME","ERR_FETCHING_STORE","ERR_UPDATING_STORE","useState","useEffect","SUCCESS_UPDATING_STORE","STORE","STORE_NAME","getCookie","StoreConfigPage","newAddress","setNewAddress","t","navigate","storeName","store","setStore","token","fetchStore","console","log","fetch","replace","headers","then","response","json","data","catch","error","postChanges","payload","address","method","body","JSON","stringify","handleAddressChange","value","handleSubmitClick","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","image","description","editable","title","onChange","name","className","type","onClick"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/storeConfig/pages/StoreConfigPage.js"],"sourcesContent":["\nimport React from \"react\";\n\n// Importing components for display and configuration\nimport PictureAndDescriptionField from \"../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField\";\nimport StoreOpeningTimesConfig from \"../components/StoreOpeningTimesConfig\";\nimport BikeList from \"../../bikeList/components/BikeList\";\n\n// Importing hooks for routing and translation\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from 'react-router-dom';\n\n// Importing a text field component\nimport SingleLineTextField from \"../../../components/display/SingleLineTextField\";\nimport { STORE_PAGE_BY_STORE_NAME } from \"../../../constants/URIs/ManagerURI\";\nimport { ERR_FETCHING_STORE, ERR_UPDATING_STORE } from \"../../../constants/ErrorMessages\";\nimport { useState, useEffect } from \"react\";\nimport { SUCCESS_UPDATING_STORE } from \"../../../constants/SuccessMessages\";\nimport { STORE } from \"../../../constants/URLs/Navigation\";\nimport { STORE_NAME } from \"../../../constants/URLs/General\";\nimport { getCookie } from \"../../../services/Cookies\";\n\n// Mock data for stores (to be replaced with actual fetching logic)\n// let stores = [\n//     {\n\n//         id: 1,\n//         name: 'Store 1',\n//         image: require('../../../assets/images/store1.jpg'),\n//         description: 'This is a description of Store 1',\n//         address: 'Musterstraße 123, 76137 Karlsruhe'\n//     },\n//     {\n//         id: 2,\n//         name: 'Store 2',\n//         image: require('../../../assets/images/store1.jpg').default,\n//         description: 'This is a description of Store 2',\n//         address: 'Musterstraße 123, 76137 Karlsruhe'\n//     },\n//     {\n//         id: 3,\n//         name: 'Store 3',\n//         image: null,\n//         description: 'This is a description of Store 3',\n//         address: 'Musterstraße 123, 76137 Karlsruhe'\n//     }\n// ]\n\n// TODO make sure, storeName is passed to this component as parameter\n\n// page for the configuration of an existing store\nconst StoreConfigPage = () => {\n\n    const [newAddress, setNewAddress] = useState('');\n    const { t } = useTranslation();\n    // Hook for navigation\n    const navigate = useNavigate();\n\n    // Extracting store name from URL parameters\n    const storeName = useParams().store;\n\n    // State to hold store data\n    const [store, setStore] = useState();\n    \n    const token = getCookie('token');\n    \n    // fetches store data\n    const fetchStore = () => {\n        console.log(storeName)\n        fetch(STORE_PAGE_BY_STORE_NAME.replace(STORE_NAME, storeName), {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`\n            }\n        })\n            .then(response => response.json())\n            .then(data => {\n                setStore(data);\n            })\n            .catch(error => {\n                console.error(ERR_FETCHING_STORE, error);\n            });\n    }\n\n    // Function to post changes to the store\n    const postChanges = () => {\n        let payload = {\n            address: newAddress\n        }\n        fetch(STORE_PAGE_BY_STORE_NAME.replace(STORE_NAME, storeName), {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`\n            },\n            body: JSON.stringify(payload)\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log(SUCCESS_UPDATING_STORE, data);\n            })\n            .catch(error => {\n                console.error(ERR_UPDATING_STORE, error);\n            });\n    }\n\n    useEffect(() => {\n        fetchStore();\n    }, [])\n\n    // Handler for address change\n    const handleAddressChange = (value) => {\n        setNewAddress(value);\n    }\n\n    // Handler for submit button click\n    const handleSubmitClick = () => {\n        postChanges();\n        navigate(STORE.replace(STORE_NAME, storeName));\n    }\n\n    return (\n        <div>\n            {/* Displaying store picture and description */}\n            <PictureAndDescriptionField\n                image={store.image}\n                description={store.description}\n            />\n            <SingleLineTextField editable={true} value={store.address} title={'address'} onChange={handleAddressChange} />\n            {/* Configuring store opening times */}\n            <StoreOpeningTimesConfig />\n            {/* Displaying list of bikes of the store */}\n            <BikeList />\n            {/* Single line text field for store name */}\n            <SingleLineTextField value={store.name} />\n\n            <div className='button-container'>\n                <button type='button' className='button regular' onClick={handleSubmitClick}>{t('submit_changes')}</button>\n            </div>\n        </div>\n    );\n};\n\nexport default StoreConfigPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}