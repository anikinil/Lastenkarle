{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/storeConfig/pages/StoreConfigPage.js\";\nimport React from \"react\";\n\n// Importing components for display and configuration\nimport PictureAndDescriptionField from \"../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField\";\nimport StoreOpeningTimesConfig from \"../components/StoreOpeningTimesConfig\";\nimport BikeList from \"../../bikeList/components/BikeList\";\n\n// Importing hooks for routing and translation\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from 'react-router-dom';\n\n// Importing a text field component\nimport SingleLineTextField from \"../../../components/display/SingleLineTextField\";\n\n// Mock data for stores (to be replaced with actual fetching logic)\nlet stores = [{\n  id: 1,\n  name: 'Store 1',\n  image: require('../../../assets/images/store1.jpg'),\n  description: 'This is a description of Store 1',\n  address: 'Musterstraße 123, 76137 Karlsruhe'\n}, {\n  id: 2,\n  name: 'Store 2',\n  image: require('../../../assets/images/store1.jpg').default,\n  description: 'This is a description of Store 2',\n  address: 'Musterstraße 123, 76137 Karlsruhe'\n}, {\n  id: 3,\n  name: 'Store 3',\n  image: null,\n  description: 'This is a description of Store 3',\n  address: 'Musterstraße 123, 76137 Karlsruhe'\n}];\n\n// page for the configuration of an existing store\nconst StoreConfigPage = () => {\n  const {\n    t\n  } = useTranslation();\n\n  // Extracting store ID from URL parameters\n  const {\n    id\n  } = useParams();\n  // Finding the store object based on the ID\n  const store = stores.find(s => s.id === parseInt(id));\n\n  // Hook for navigation\n  const navigate = useNavigate();\n\n  // Handler for bookings button click\n  const handleBookingsClick = () => {\n    // Logic for handling bookings click (to be implemented)\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PictureAndDescriptionField, {\n    image: store.image,\n    description: store.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SingleLineTextField, {\n    editable: true,\n    value: store.address,\n    title: 'address',\n    onChange: handleAddressChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StoreOpeningTimesConfig, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(BikeList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SingleLineTextField, {\n    value: store.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }));\n};\nexport default StoreConfigPage;","map":{"version":3,"names":["React","PictureAndDescriptionField","StoreOpeningTimesConfig","BikeList","useParams","useTranslation","useNavigate","SingleLineTextField","stores","id","name","image","require","description","address","default","StoreConfigPage","t","store","find","s","parseInt","navigate","handleBookingsClick","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","editable","value","title","onChange","handleAddressChange"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/storeConfig/pages/StoreConfigPage.js"],"sourcesContent":["import React from \"react\";\n\n// Importing components for display and configuration\nimport PictureAndDescriptionField from \"../../../components/display/pictureAndDescriptionField/PictureAndDescriptionField\";\nimport StoreOpeningTimesConfig from \"../components/StoreOpeningTimesConfig\";\nimport BikeList from \"../../bikeList/components/BikeList\";\n\n// Importing hooks for routing and translation\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from 'react-router-dom';\n\n// Importing a text field component\nimport SingleLineTextField from \"../../../components/display/SingleLineTextField\";\n\n// Mock data for stores (to be replaced with actual fetching logic)\nlet stores = [\n    {\n\n        id: 1,\n        name: 'Store 1',\n        image: require('../../../assets/images/store1.jpg'),\n        description: 'This is a description of Store 1',\n        address: 'Musterstraße 123, 76137 Karlsruhe'\n    },\n    {\n        id: 2,\n        name: 'Store 2',\n        image: require('../../../assets/images/store1.jpg').default,\n        description: 'This is a description of Store 2',\n        address: 'Musterstraße 123, 76137 Karlsruhe'\n    },\n    {\n        id: 3,\n        name: 'Store 3',\n        image: null,\n        description: 'This is a description of Store 3',\n        address: 'Musterstraße 123, 76137 Karlsruhe'\n    }\n]\n\n// page for the configuration of an existing store\nconst StoreConfigPage = () => {\n\n    const { t } = useTranslation();\n\n    // Extracting store ID from URL parameters\n    const { id } = useParams();\n    // Finding the store object based on the ID\n    const store = stores.find(s => s.id === parseInt(id));\n\n\n    // Hook for navigation\n    const navigate = useNavigate();\n\n    // Handler for bookings button click\n    const handleBookingsClick = () => {\n        // Logic for handling bookings click (to be implemented)\n    };\n\n    return (\n        <div>\n            {/* Displaying store picture and description */}\n            <PictureAndDescriptionField \n                image={store.image} \n                description={store.description} \n            />\n            <SingleLineTextField editable={true} value={store.address} title={'address'} onChange={handleAddressChange}/>\n            {/* Configuring store opening times */}\n            <StoreOpeningTimesConfig />\n            {/* Displaying list of bikes */}\n            <BikeList />\n            {/* Single line text field for store name */}\n            <SingleLineTextField value={store.name} />\n        </div>\n    );\n};\n\nexport default StoreConfigPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}