{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/components/navbar/Navbar.js\";\nimport React, { useEffect, useState } from 'react';\nimport MenuItems from './MenuItems';\nimport './Navbar.css';\nimport logo from '../../assets/images/logo.png';\nimport { USER_DATA } from '../../constants/URIs/UserURIs';\nimport { getCookie } from '../../services/Cookies';\nimport { ERR_FETCHING_USER_FLAGS } from '../../constants/ErrorMessages';\nimport { useLocation } from 'react-router-dom';\nimport { FaUser } from 'react-icons/fa';\nimport { ACCOUNT_DELETION, ALL_BIKES, LOGIN, LOGOUT, REGIONAL_BOOKING, REGISTER, STORE_CONFIG } from '../../constants/URLs/Navigation';\nimport { REGION_NAME, STORE_NAME } from '../../constants/URLs/General';\nimport { Roles } from '../../constants/Roles';\nimport { useTranslation } from 'react-i18next';\nconst Navbar = () => {\n  const {\n    t\n  } = useTranslation();\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(true);\n  const [userRoles, setUserRoles] = useState([Roles.VISITOR]);\n  const [userStores, setUserStores] = useState([]);\n  const [filteredMenuItems, setFilteredMenuItems] = useState([]);\n\n  // Simulate fetching user data from cookies\n  const fetchUserData = async () => {\n    setIsLoading(true);\n    const roles = getCookie('userRoles');\n    const stores = getCookie('userStores');\n    setUserRoles(roles ? roles.split(',') : [Roles.VISITOR]);\n    setUserStores(stores ? stores.split(',') : []);\n  };\n\n  // Get menu items based on roles and stores\n  const getMenuItems = () => {\n    const storeItems = userStores.map(store => ({\n      title: store,\n      url: STORE_CONFIG.replace(STORE_NAME, store)\n    }));\n    return [{\n      title: t('booking'),\n      url: '/booking',\n      roles: [Roles.CUSTOMER, Roles.MANAGER, Roles.ADMINISTRATOR, Roles.VISITOR],\n      submenu: [{\n        title: 'Karlsruhe',\n        url: REGIONAL_BOOKING.replace(REGION_NAME, 'karlsruhe')\n      }, {\n        title: 'Ettlingen',\n        url: REGIONAL_BOOKING.replace(REGION_NAME, 'ettlingen')\n      }]\n    }, {\n      title: t('my_stores'),\n      roles: [Roles.MANAGER, Roles.ADMINISTRATOR],\n      submenu: storeItems\n    }, {\n      title: t('admin_activities'),\n      roles: [Roles.ADMINISTRATOR],\n      submenu: [{\n        title: t('bookings'),\n        url: '/bookings'\n      }, {\n        title: t('users'),\n        url: '/users'\n      }]\n    }, {\n      title: /*#__PURE__*/React.createElement(FaUser, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 24\n        }\n      }),\n      roles: [Roles.CUSTOMER, Roles.MANAGER, Roles.ADMINISTRATOR],\n      submenu: [{\n        title: t('logout'),\n        url: LOGOUT\n      }, {\n        title: t('delete_account'),\n        url: ACCOUNT_DELETION\n      }]\n    }, {\n      title: /*#__PURE__*/React.createElement(FaUser, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 24\n        }\n      }),\n      roles: [Roles.VISITOR],\n      submenu: [{\n        title: t('login'),\n        url: LOGIN\n      }, {\n        title: t('register'),\n        url: REGISTER\n      }]\n    }].filter(item => userRoles.some(role => item.roles.includes(role)));\n  };\n  const updateData = () => {\n    fetchUserData();\n  };\n\n  // Update menu items when user roles or stores change\n  useEffect(() => {\n    setFilteredMenuItems(getMenuItems());\n    setIsLoading(false);\n  }, [userRoles, userStores]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/\",\n    className: \"logo-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo-img\",\n    src: logo,\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  })), isLoading ? null : /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"menus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, filteredMenuItems.map((item, index) => /*#__PURE__*/React.createElement(MenuItems, {\n    key: index,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  })))));\n};\nexport default Navbar;","map":{"version":3,"names":["React","useEffect","useState","MenuItems","logo","USER_DATA","getCookie","ERR_FETCHING_USER_FLAGS","useLocation","FaUser","ACCOUNT_DELETION","ALL_BIKES","LOGIN","LOGOUT","REGIONAL_BOOKING","REGISTER","STORE_CONFIG","REGION_NAME","STORE_NAME","Roles","useTranslation","Navbar","t","location","isLoading","setIsLoading","userRoles","setUserRoles","VISITOR","userStores","setUserStores","filteredMenuItems","setFilteredMenuItems","fetchUserData","roles","stores","split","getMenuItems","storeItems","map","store","title","url","replace","CUSTOMER","MANAGER","ADMINISTRATOR","submenu","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","filter","item","some","role","includes","updateData","className","href","src","alt","index","key"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/components/navbar/Navbar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport MenuItems from './MenuItems';\nimport './Navbar.css';\nimport logo from '../../assets/images/logo.png';\nimport { USER_DATA } from '../../constants/URIs/UserURIs';\nimport { getCookie } from '../../services/Cookies';\nimport { ERR_FETCHING_USER_FLAGS } from '../../constants/ErrorMessages';\nimport { useLocation } from 'react-router-dom';\nimport { FaUser } from 'react-icons/fa';\nimport { ACCOUNT_DELETION, ALL_BIKES, LOGIN, LOGOUT, REGIONAL_BOOKING, REGISTER, STORE_CONFIG } from '../../constants/URLs/Navigation';\nimport { REGION_NAME, STORE_NAME } from '../../constants/URLs/General';\nimport { Roles } from '../../constants/Roles';\nimport { useTranslation } from 'react-i18next';\n\nconst Navbar = () => {\n    const { t } = useTranslation();\n    const location = useLocation();\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [userRoles, setUserRoles] = useState([Roles.VISITOR]);\n    const [userStores, setUserStores] = useState([]);\n    const [filteredMenuItems, setFilteredMenuItems] = useState([]);\n\n    // Simulate fetching user data from cookies\n    const fetchUserData = async () => {\n        setIsLoading(true);\n        const roles = getCookie('userRoles');\n        const stores = getCookie('userStores');\n        setUserRoles(roles ? roles.split(',') : [Roles.VISITOR]);\n        setUserStores(stores ? stores.split(',') : []);\n    };\n\n    // Get menu items based on roles and stores\n    const getMenuItems = () => {\n        const storeItems = userStores.map(store => ({\n            title: store,\n            url: STORE_CONFIG.replace(STORE_NAME, store),\n        }));\n\n        return [\n            {\n                title: t('booking'),\n                url: '/booking',\n                roles: [Roles.CUSTOMER, Roles.MANAGER, Roles.ADMINISTRATOR, Roles.VISITOR],\n                submenu: [\n                    {\n                        title: 'Karlsruhe',\n                        url: REGIONAL_BOOKING.replace(REGION_NAME, 'karlsruhe'),\n                    },\n                    {\n                        title: 'Ettlingen',\n                        url: REGIONAL_BOOKING.replace(REGION_NAME, 'ettlingen'),\n                    },\n                ],\n            },\n            {\n                title: t('my_stores'),\n                roles: [Roles.MANAGER, Roles.ADMINISTRATOR],\n                submenu: storeItems,\n            },\n            {\n                title: t('admin_activities'),\n                roles: [Roles.ADMINISTRATOR],\n                submenu: [\n                    { title: t('bookings'), url: '/bookings' },\n                    { title: t('users'), url: '/users' },\n                ],\n            },\n            {\n                title: <FaUser />,\n                roles: [Roles.CUSTOMER, Roles.MANAGER, Roles.ADMINISTRATOR],\n                submenu: [\n                    { title: t('logout'), url: LOGOUT },\n                    { title: t('delete_account'), url: ACCOUNT_DELETION },\n                ],\n            },\n            {\n                title: <FaUser />,\n                roles: [Roles.VISITOR],\n                submenu: [\n                    { title: t('login'), url: LOGIN },\n                    { title: t('register'), url: REGISTER },\n                ],\n            },\n        ].filter(item => userRoles.some(role => item.roles.includes(role)));\n    };\n\n    const updateData = () => {\n        fetchUserData();\n    }\n\n    // Update menu items when user roles or stores change\n    useEffect(() => {\n        setFilteredMenuItems(getMenuItems());\n        setIsLoading(false);\n    }, [userRoles, userStores]);\n\n    return (\n        <div className='nav-area'>\n            <a href='/' className='logo-container'>\n                <img className='logo-img' src={logo} alt='Logo' />\n            </a>\n            {isLoading ? null :\n                <nav className='nav'>\n                    <ul className='menus'>\n                        {filteredMenuItems.map((item, index) => (\n                            <MenuItems key={index} item={item} />\n                        ))}\n                    </ul>\n                </nav>}\n        </div>\n    );\n};\n\nexport default Navbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}