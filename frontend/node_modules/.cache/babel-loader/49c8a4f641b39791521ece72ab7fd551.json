{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/Login.js\";\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { LOGIN } from '../constants/URIs/UserURIs';\nconst Login = () => {\n  const {\n    t\n  } = useTranslation();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [token, setToken] = useState();\n\n  // function handleLoginClick() {\n  //     postLogin();\n  // }\n\n  // POST login request\n  const postLogin = () => {\n    let payload = {\n      username: username,\n      password: password\n    };\n\n    // POST login request\n    fetch(LOGIN, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    }).then(response => {\n      if (response === null || response === void 0 ? void 0 : response.ok) {\n        return response.json();\n      } else {\n        // If the request was not successful, throw an error\n        return response.json().then(errorData => {\n          throw new Error(errorData.message);\n        });\n      }\n    }).then(data => {\n      const token = data.token;\n      // navigateToNextPage(token);\n    }).catch(error => {\n      // Handle any network or other errors that occurred during the request\n      alert('Error making login request.' + error.message);\n    });\n  };\n\n  // const handeHelmholtzSignInClick = () => {\n  //     window.location.replace(URL_USER_HELMHOLTZ);\n  // }\n\n  const handleRegisterClick = () => {\n    // \n    // navigate to register page\n  };\n  const setTokenCookie = () => {\n    var days = 1;\n    const expirationDate = new Date();\n    expirationDate.setDate(expirationDate.getDate() + days);\n    document.cookie = `${'token'}=${token}; expires=${expirationDate.toUTCString()}; path=/`;\n  };\n\n  // this prevents user from switching to new line by hitting [Enter]\n  const handleFieldKeyDown = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, t('login')), /*#__PURE__*/React.createElement(\"textarea\", {\n    title: t('enter_username'),\n    className: \"username\",\n    rows: \"1\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    onKeyDown: handleFieldKeyDown,\n    placeholder: t('enter_username'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    title: t('enter_password'),\n    className: \"password\",\n    rows: \"1\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    onKeyDown: handleFieldKeyDown,\n    placeholder: t('enter_password'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleRegisterClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, t('submit')));\n};\nexport default Login;","map":{"version":3,"names":["React","useState","useTranslation","LOGIN","Login","t","username","setUsername","password","setPassword","token","setToken","postLogin","payload","fetch","method","headers","body","JSON","stringify","then","response","ok","json","errorData","Error","message","data","catch","error","alert","handleRegisterClick","setTokenCookie","days","expirationDate","Date","setDate","getDate","document","cookie","toUTCString","handleFieldKeyDown","event","key","preventDefault","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","className","rows","value","onChange","e","target","onKeyDown","placeholder","onClick"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { LOGIN } from '../constants/URIs/UserURIs';\n\nconst Login = () => {\n\n    const { t } = useTranslation();\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [token, setToken] = useState()\n\n    // function handleLoginClick() {\n    //     postLogin();\n    // }\n\n    // POST login request\n    const postLogin = () => {\n\n        let payload = {\n            username: username,\n            password: password\n        };\n\n        // POST login request\n        fetch(LOGIN, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(payload)\n        })\n            .then(response => {\n                if (response?.ok) {\n                    return response.json();\n                } else {\n                    // If the request was not successful, throw an error\n                    return response.json().then(errorData => {\n                        throw new Error(errorData.message);\n                    });\n                }\n            })\n            .then(data => {\n                const token = data.token;\n                // navigateToNextPage(token);\n            })\n            .catch(error => {\n                // Handle any network or other errors that occurred during the request\n                alert('Error making login request.' + error.message);\n            });\n    }\n\n    // const handeHelmholtzSignInClick = () => {\n    //     window.location.replace(URL_USER_HELMHOLTZ);\n    // }\n\n    const handleRegisterClick = () => {\n        // \n        // navigate to register page\n    }\n\n    const setTokenCookie = () => {\n        var days = 1\n        const expirationDate = new Date();\n        expirationDate.setDate(expirationDate.getDate() + days);\n        document.cookie = `${'token'}=${token}; expires=${expirationDate.toUTCString()}; path=/`;\n    };\n\n    // this prevents user from switching to new line by hitting [Enter]\n    const handleFieldKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n        }\n    };\n\n    return (\n        <>\n            {/* THINK about style */}\n            <h1>{t('login')}</h1>\n\n            <textarea\n                title={t('enter_username')}\n                className='username'\n                rows='1'\n                value={username}\n                onChange={e => setUsername(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_username')}\n            >\n            </textarea>\n\n            {/* TODO check if there is an extra textarea type for passwords */}\n            <textarea\n                title={t('enter_password')}\n                className='password'\n                rows='1'\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                onKeyDown={handleFieldKeyDown}\n                placeholder={t('enter_password')}\n            >\n            </textarea>\n\n            <button onClick={() => handleRegisterClick()}>{t('submit')}</button>\n        </>\n    );\n};\n\nexport default Login;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,eAAe;AAE9C,SAASC,KAAK,QAAQ,4BAA4B;AAElD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAEhB,MAAM;IAAEC;EAAE,CAAC,GAAGH,cAAc,CAAC,CAAC;EAE9B,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC;;EAEpC;EACA;EACA;;EAEA;EACA,MAAMW,SAAS,GAAGA,CAAA,KAAM;IAEpB,IAAIC,OAAO,GAAG;MACVP,QAAQ,EAAEA,QAAQ;MAClBE,QAAQ,EAAEA;IACd,CAAC;;IAED;IACAM,KAAK,CAACX,KAAK,EAAE;MACTY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,OAAO;IAChC,CAAC,CAAC,CACGO,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,EAAE,EAAE;QACd,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC1B,CAAC,MAAM;QACH;QACA,OAAOF,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAACI,SAAS,IAAI;UACrC,MAAM,IAAIC,KAAK,CAACD,SAAS,CAACE,OAAO,CAAC;QACtC,CAAC,CAAC;MACN;IACJ,CAAC,CAAC,CACDN,IAAI,CAACO,IAAI,IAAI;MACV,MAAMjB,KAAK,GAAGiB,IAAI,CAACjB,KAAK;MACxB;IACJ,CAAC,CAAC,CACDkB,KAAK,CAACC,KAAK,IAAI;MACZ;MACAC,KAAK,CAAC,6BAA6B,GAAGD,KAAK,CAACH,OAAO,CAAC;IACxD,CAAC,CAAC;EACV,CAAC;;EAED;EACA;EACA;;EAEA,MAAMK,mBAAmB,GAAGA,CAAA,KAAM;IAC9B;IACA;EAAA,CACH;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAIC,IAAI,GAAG,CAAC;IACZ,MAAMC,cAAc,GAAG,IAAIC,IAAI,CAAC,CAAC;IACjCD,cAAc,CAACE,OAAO,CAACF,cAAc,CAACG,OAAO,CAAC,CAAC,GAAGJ,IAAI,CAAC;IACvDK,QAAQ,CAACC,MAAM,GAAG,GAAG,OAAO,IAAI7B,KAAK,aAAawB,cAAc,CAACM,WAAW,CAAC,CAAC,UAAU;EAC5F,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;IAClC,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACvBD,KAAK,CAACE,cAAc,CAAC,CAAC;IAC1B;EACJ,CAAC;EAED,oBACI5C,KAAA,CAAA6C,aAAA,CAAA7C,KAAA,CAAA8C,QAAA,qBAEI9C,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK/C,CAAC,CAAC,OAAO,CAAM,CAAC,eAErBL,KAAA,CAAA6C,aAAA;IACIQ,KAAK,EAAEhD,CAAC,CAAC,gBAAgB,CAAE;IAC3BiD,SAAS,EAAC,UAAU;IACpBC,IAAI,EAAC,GAAG;IACRC,KAAK,EAAElD,QAAS;IAChBmD,QAAQ,EAAEC,CAAC,IAAInD,WAAW,CAACmD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAC3CI,SAAS,EAAEnB,kBAAmB;IAC9BoB,WAAW,EAAExD,CAAC,CAAC,gBAAgB,CAAE;IAAA0C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAE3B,CAAC,eAGXpD,KAAA,CAAA6C,aAAA;IACIQ,KAAK,EAAEhD,CAAC,CAAC,gBAAgB,CAAE;IAC3BiD,SAAS,EAAC,UAAU;IACpBC,IAAI,EAAC,GAAG;IACRC,KAAK,EAAEhD,QAAS;IAChBiD,QAAQ,EAAEC,CAAC,IAAIjD,WAAW,CAACiD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAC3CI,SAAS,EAAEnB,kBAAmB;IAC9BoB,WAAW,EAAExD,CAAC,CAAC,gBAAgB,CAAE;IAAA0C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAE3B,CAAC,eAEXpD,KAAA,CAAA6C,aAAA;IAAQiB,OAAO,EAAEA,CAAA,KAAM/B,mBAAmB,CAAC,CAAE;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE/C,CAAC,CAAC,QAAQ,CAAU,CACrE,CAAC;AAEX,CAAC;AAED,eAAeD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}