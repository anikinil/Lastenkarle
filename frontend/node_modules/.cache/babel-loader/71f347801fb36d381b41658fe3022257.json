{"ast":null,"code":"import { useState, useEffect } from 'react';\nfunction useAuth() {\n  const [user, setUser] = useState(null); // State to hold user information\n\n  useEffect(() => {\n    // Function to retrieve user information from local storage or authentication service\n    const fetchUser = async () => {\n      try {\n        // Simulate fetching user data from a backend server or local storage\n        const userData = await fetchUserData(); // Implement this function as needed\n        setUser(userData);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      } finally {\n        setLoading(false); // Set loading state to false after fetching user data\n      }\n    };\n    fetchUser(); // Fetch user data when the component mounts\n\n    // Cleanup function\n    return () => {\n      // Perform any necessary cleanup here\n    };\n  }, []); // Run effect only once when the component mounts\n}\nexport default useAuth;","map":{"version":3,"names":["useState","useEffect","useAuth","user","setUser","fetchUser","userData","fetchUserData","error","console","setLoading"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/utils/authenticatoin.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction useAuth() {\n  const [user, setUser] = useState(null); // State to hold user information\n\n  useEffect(() => {\n    // Function to retrieve user information from local storage or authentication service\n    const fetchUser = async () => {\n      try {\n        // Simulate fetching user data from a backend server or local storage\n        const userData = await fetchUserData(); // Implement this function as needed\n        setUser(userData);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      } finally {\n        setLoading(false); // Set loading state to false after fetching user data\n      }\n    };\n\n    fetchUser(); // Fetch user data when the component mounts\n\n    // Cleanup function\n    return () => {\n      // Perform any necessary cleanup here\n    };\n  }, []); // Run effect only once when the component mounts\n}\n\nexport default useAuth;\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,OAAOA,CAAA,EAAG;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMI,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMC,aAAa,CAAC,CAAC,CAAC,CAAC;QACxCH,OAAO,CAACE,QAAQ,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC,CAAC,CAAC;;IAEb;IACA,OAAO,MAAM;MACX;IAAA,CACD;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACV;AAEA,eAAeH,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}