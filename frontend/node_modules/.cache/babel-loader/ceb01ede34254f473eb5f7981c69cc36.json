{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/storeConfig/pages/StoreConfigPage.js\";\nimport { useState } from \"react\";\nimport { Roles } from \"../../../constants/Roles\";\nimport { ERR_FETCHING_USER_FLAGS } from \"../../../constants/ErrorMessages\";\nimport { USER_DATA } from \"../../../constants/URIs/UserURIs\";\nimport StoreConfigAdmin from \"../components/StoreConfigAdmin\";\nimport StoreConfigManager from \"../components/StoreConfigManager\";\nconst StoreConfigPage = () => {\n  const [isAdmin, setIsAdmin] = useState(false);\n  const fetchUserRoles = () => {\n    const token = getCookie('token');\n    if (token !== 'undefined' && token !== null) {\n      fetch(USER_DATA, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`\n        }\n      }).then(response => response.json()).then(data => {\n        const userRoles = data.user_flags.map(element => element.flag);\n        setIsAdmin(userRoles.includes(Roles.ADMINISTRATOR));\n      }).catch(error => {\n        console.error(ERR_FETCHING_USER_FLAGS, error);\n      });\n    } else {\n      setIsAdmin(false);\n    }\n  };\n  useEffect(() => {\n    fetchUserRoles();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isAdmin ? /*#__PURE__*/React.createElement(StoreConfigAdmin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(StoreConfigManager, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }));\n};\nexport default StoreConfigPage;","map":{"version":3,"names":["useState","Roles","ERR_FETCHING_USER_FLAGS","USER_DATA","StoreConfigAdmin","StoreConfigManager","StoreConfigPage","isAdmin","setIsAdmin","fetchUserRoles","token","getCookie","fetch","headers","then","response","json","data","userRoles","user_flags","map","element","flag","includes","ADMINISTRATOR","catch","error","console","useEffect","React","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/storeConfig/pages/StoreConfigPage.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Roles } from \"../../../constants/Roles\";\nimport { ERR_FETCHING_USER_FLAGS } from \"../../../constants/ErrorMessages\";\nimport { USER_DATA } from \"../../../constants/URIs/UserURIs\";\nimport StoreConfigAdmin from \"../components/StoreConfigAdmin\";\nimport StoreConfigManager from \"../components/StoreConfigManager\";\n\n\nconst StoreConfigPage = () => {\n\n    const [isAdmin, setIsAdmin] = useState(false);\n\n    const fetchUserRoles = () => {\n        const token = getCookie('token');\n        if (token !== 'undefined' && token !== null) {\n            fetch(USER_DATA, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                }\n            })\n                .then(response => response.json())\n                .then(data => {\n                    const userRoles = data.user_flags.map(element => element.flag)\n                    setIsAdmin(userRoles.includes(Roles.ADMINISTRATOR))\n                })\n                .catch(error => {\n                    console.error(ERR_FETCHING_USER_FLAGS, error);\n                });\n        } else {\n            setIsAdmin(false)\n        }\n    }\n\n    useEffect(() => {\n        fetchUserRoles();\n    }, [])\n\n    return (\n        <>\n            { isAdmin ?\n                <StoreConfigAdmin />\n                :\n                <StoreConfigManager />\n            }\n        </>\n    );\n}\n\nexport default StoreConfigPage;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,KAAK,QAAQ,0BAA0B;AAChD,SAASC,uBAAuB,QAAQ,kCAAkC;AAC1E,SAASC,SAAS,QAAQ,kCAAkC;AAC5D,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,kBAAkB,MAAM,kCAAkC;AAGjE,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAE1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMS,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,KAAK,GAAGC,SAAS,CAAC,OAAO,CAAC;IAChC,IAAID,KAAK,KAAK,WAAW,IAAIA,KAAK,KAAK,IAAI,EAAE;MACzCE,KAAK,CAACT,SAAS,EAAE;QACbU,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,SAASH,KAAK;QACnC;MACJ,CAAC,CAAC,CACGI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACV,MAAMC,SAAS,GAAGD,IAAI,CAACE,UAAU,CAACC,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAAC;QAC9Dd,UAAU,CAACU,SAAS,CAACK,QAAQ,CAACtB,KAAK,CAACuB,aAAa,CAAC,CAAC;MACvD,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZC,OAAO,CAACD,KAAK,CAACxB,uBAAuB,EAAEwB,KAAK,CAAC;MACjD,CAAC,CAAC;IACV,CAAC,MAAM;MACHlB,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAEDoB,SAAS,CAAC,MAAM;IACZnB,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIoB,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAE,QAAA,QACMxB,OAAO,gBACLsB,KAAA,CAAAC,aAAA,CAAC1B,gBAAgB;IAAA4B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,gBAEpBR,KAAA,CAAAC,aAAA,CAACzB,kBAAkB;IAAA2B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAE3B,CAAC;AAEX,CAAC;AAED,eAAe/B,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}