{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/bikeRegistration/pages/BikeRegistration.js\";\nimport React, { useContext, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport './BikeRegistration.css';\nimport ImageAndDescriptionField from '../../../components/display/imageAndDescriptionField/ImageAndDescriptionField';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { ERR_POSTING_NEW_BIKE } from '../../../constants/ErrorMessages';\nimport { getCookie } from '../../../services/Cookies';\nimport { STORE_NAME } from '../../../constants/URIs/ManagerURIs';\nimport { BIKES_OF_STORE as NEW_BIKE_URI_MANAGER } from '../../../constants/URIs/ManagerURIs';\nimport { ADD_BIKE_TO_STORE as NEW_BIKE_URI_ADMIN } from '../../../constants/URIs/AdminURIs';\nimport SingleLineTextField from '../../../components/display/SingleLineTextField';\nimport { AuthContext } from '../../../AuthProvider';\nimport { Roles } from '../../../constants/Roles';\nconst BikeRegistration = () => {\n  // Hook for translation\n  const {\n    t\n  } = useTranslation();\n\n  // Hook for navigation\n  const navigate = useNavigate();\n  const storeName = useParams().store;\n  const token = getCookie('token'); // Get authentication token\n\n  const {\n    userRoles\n  } = useContext(AuthContext);\n  const [name, setName] = useState('');\n  const [imageFile, setImageFile] = useState(null);\n  const [description, setDescription] = useState('');\n  const [showCancelConfigConfirmation, setShowCancelConfigConfirmation] = useState(false);\n\n  // Handler for cancel button click\n  const handleCancelClick = () => {\n    // TODO maybe add a confirmation dialog\n    navigate(-1);\n  };\n  const postNewBike = () => {\n    let uri = userRoles.includes(Roles.ADMINISTRATOR) ? NEW_BIKE_URI_ADMIN : NEW_BIKE_URI_MANAGER;\n    uri = uri.replace(STORE_NAME, storeName);\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"description\", description);\n    formData.append(\"image\", imageFile);\n    return fetch(uri, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Token ${token}`\n      },\n      body: formData\n    }).then(response => {\n      if (response.ok) {\n        alert(t('bike_registration_successful'));\n        navigate(-1);\n      } else {\n        return response.json().then(errorText => {\n          throw new Error(errorText.detail);\n        });\n      }\n    }).catch(error => {\n      alert(ERR_POSTING_NEW_BIKE + ' ' + error.message);\n    });\n  };\n  const handleNameChange = value => {\n    setName(value);\n  };\n  const handleImageChange = value => {\n    setImageFile(value);\n  };\n  const handleDescriptionChange = value => {\n    setDescription(value);\n  };\n\n  // Handler for register button click\n  const handleRegisterClick = () => {\n    postNewBike();\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, t('new_bike_to'), \" \", storeName), /*#__PURE__*/React.createElement(SingleLineTextField, {\n    title: t('name'),\n    editable: true,\n    onChange: handleNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ImageAndDescriptionField, {\n    editable: true,\n    onImageChange: handleImageChange,\n    onDescriptionChange: handleDescriptionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button\",\n    onClick: handleCancelClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, t('cancel')), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button register\",\n    onClick: handleRegisterClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, t('register_new_bike'))), /*#__PURE__*/React.createElement(ConfirmationPopup, {\n    onConfirm: handleCancelConfirm,\n    onCancel: handlePopupCancel,\n    show: showCancelConfirmation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, t('are_you_sure_you_want_to_cancel_registration')));\n};\nexport default BikeRegistration;","map":{"version":3,"names":["React","useContext","useState","useTranslation","ImageAndDescriptionField","useNavigate","useParams","ERR_POSTING_NEW_BIKE","getCookie","STORE_NAME","BIKES_OF_STORE","NEW_BIKE_URI_MANAGER","ADD_BIKE_TO_STORE","NEW_BIKE_URI_ADMIN","SingleLineTextField","AuthContext","Roles","BikeRegistration","t","navigate","storeName","store","token","userRoles","name","setName","imageFile","setImageFile","description","setDescription","showCancelConfigConfirmation","setShowCancelConfigConfirmation","handleCancelClick","postNewBike","uri","includes","ADMINISTRATOR","replace","formData","FormData","append","fetch","method","headers","body","then","response","ok","alert","json","errorText","Error","detail","catch","error","message","handleNameChange","value","handleImageChange","handleDescriptionChange","handleRegisterClick","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","editable","onChange","onImageChange","onDescriptionChange","className","type","onClick","ConfirmationPopup","onConfirm","handleCancelConfirm","onCancel","handlePopupCancel","show","showCancelConfirmation"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/features/bikeRegistration/pages/BikeRegistration.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport './BikeRegistration.css'\nimport ImageAndDescriptionField from '../../../components/display/imageAndDescriptionField/ImageAndDescriptionField';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { ERR_POSTING_NEW_BIKE } from '../../../constants/ErrorMessages';\nimport { getCookie } from '../../../services/Cookies';\nimport { STORE_NAME } from '../../../constants/URIs/ManagerURIs';\nimport { BIKES_OF_STORE as NEW_BIKE_URI_MANAGER } from '../../../constants/URIs/ManagerURIs';\nimport { ADD_BIKE_TO_STORE as NEW_BIKE_URI_ADMIN } from '../../../constants/URIs/AdminURIs';\nimport SingleLineTextField from '../../../components/display/SingleLineTextField';\nimport { AuthContext } from '../../../AuthProvider';\nimport { Roles } from '../../../constants/Roles';\n\nconst BikeRegistration = () => {\n    // Hook for translation\n    const { t } = useTranslation();\n\n    // Hook for navigation\n    const navigate = useNavigate()\n\n    const storeName = useParams().store;\n\n    const token = getCookie('token') // Get authentication token\n\n    const { userRoles } = useContext(AuthContext);\n\n    const [name, setName] = useState('');\n    const [imageFile, setImageFile] = useState(null);\n    const [description, setDescription] = useState('');\n\n    const [showCancelConfigConfirmation, setShowCancelConfigConfirmation] = useState(false);\n    \n\n    // Handler for cancel button click\n    const handleCancelClick = () => {\n        // TODO maybe add a confirmation dialog\n        navigate(-1)\n    }\n\n    const postNewBike = () => {\n        let uri = userRoles.includes(Roles.ADMINISTRATOR) ? NEW_BIKE_URI_ADMIN : NEW_BIKE_URI_MANAGER;\n        uri = uri.replace(STORE_NAME, storeName)\n        const formData = new FormData();\n        formData.append(\"name\", name);\n        formData.append(\"description\", description);\n        formData.append(\"image\", imageFile);\n        return fetch(uri, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Token ${token}`\n            },\n            body: formData\n        })\n            .then(response => {\n                if (response.ok) {\n                    alert(t('bike_registration_successful'));\n                    navigate(-1);\n                } else {\n                    return response.json().then((errorText) => {\n                        throw new Error(errorText.detail);\n                    });\n                }\n            })\n            .catch(error => {\n                alert(ERR_POSTING_NEW_BIKE + ' ' + error.message);\n            });\n    }\n\n    const handleNameChange = (value) => {\n        setName(value)\n    }\n\n    const handleImageChange = (value) => {\n        setImageFile(value)\n    }\n\n    const handleDescriptionChange = (value) => {\n        setDescription(value)\n    }\n\n    // Handler for register button click\n    const handleRegisterClick = () => {\n        postNewBike();\n    }\n\n    return (\n        <>\n            {/* Page title */}\n            <h1>{t('new_bike_to')} {storeName}</h1>\n\n            <SingleLineTextField title={t('name')} editable={true} onChange={handleNameChange} />\n\n            {/* Image and description field component */}\n            <ImageAndDescriptionField editable={true} onImageChange={handleImageChange} onDescriptionChange={handleDescriptionChange} />\n\n            {/* Button container */}\n            <div className='button-container'>\n                <button type='button' className='button' onClick={handleCancelClick}>{t('cancel')}</button>\n                <button type='button' className='button register' onClick={handleRegisterClick}>{t('register_new_bike')}</button>\n            </div>\n\n\n            <ConfirmationPopup onConfirm={handleCancelConfirm} onCancel={handlePopupCancel} show={showCancelConfirmation}>\n                {t('are_you_sure_you_want_to_cancel_registration')}\n            </ConfirmationPopup>\n\n        </>\n    );\n};\n\nexport default BikeRegistration;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}