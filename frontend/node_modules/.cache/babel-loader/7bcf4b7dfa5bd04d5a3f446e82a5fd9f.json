{"ast":null,"code":"var _jsxFileName = \"/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/Home.js\";\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getCookie } from '../services/Cookies';\nimport { USER_DATA } from '../constants/URIs/UserURIs';\nconst Home = () => {\n  const token = getCookie('token');\n  const {\n    t\n  } = useTranslation();\n  const fetchUserData = () => {\n    fetch(USER_DATA, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(response => {\n      if (response.ok) {\n        // If the response is successful, delete the token cookie\n        deleteCookie('token');\n        deleteCookie('userRoles');\n        deleteCookie('userStores');\n        setUserRoles([Roles.VISITOR]);\n        setUserStores([]);\n        // Navigate to the login page\n        navigate(LOGIN);\n      } else {\n        // If the request was not successful, throw an error\n        return response.json().then(data => {\n          throw new Error(data.detail);\n        });\n      }\n    }).catch(error => {\n      // Handle any network or other errors that occurred during the request\n      alert(ERR_POSTING_LOGOUT_REQUEST + ': ' + error);\n      console.log(ERR_POSTING_LOGOUT_REQUEST + ': ' + error);\n    });\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, t('homepage')), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"YOUR TOKEN: \", token), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"YOUR username: \", token));\n};\nexport default Home;","map":{"version":3,"names":["React","useEffect","useTranslation","getCookie","USER_DATA","Home","token","t","fetchUserData","fetch","method","headers","then","response","ok","deleteCookie","setUserRoles","Roles","VISITOR","setUserStores","navigate","LOGIN","json","data","Error","detail","catch","error","alert","ERR_POSTING_LOGOUT_REQUEST","console","log","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/ilja/Lastenkarle/buchungssytem-lastenkarle/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getCookie } from '../services/Cookies';\nimport { USER_DATA } from '../constants/URIs/UserURIs';\n\n\nconst Home = () => {\n\n    const token = getCookie('token'); \n\n    const { t } = useTranslation();\n\n    const fetchUserData = () => {\n        fetch(USER_DATA, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`\n            }\n        })\n            .then(response => {\n                if (response.ok) {\n                    // If the response is successful, delete the token cookie\n                    deleteCookie('token');\n                    deleteCookie('userRoles');\n                    deleteCookie('userStores');\n                    setUserRoles([Roles.VISITOR]);\n                    setUserStores([]);\n                    // Navigate to the login page\n                    navigate(LOGIN);\n                } else {\n                    // If the request was not successful, throw an error\n                    return response.json().then(data => {\n                        throw new Error(data.detail);\n                    });\n                }\n            })\n            .catch(error => {\n                // Handle any network or other errors that occurred during the request\n                alert(ERR_POSTING_LOGOUT_REQUEST + ': ' + error);\n                console.log(ERR_POSTING_LOGOUT_REQUEST + ': ' + error);\n            });\n    }\n\n    return (\n        <>\n            <h1>{t('homepage')}</h1>\n            <p>YOUR TOKEN: {token}</p>\n            <p>YOUR username: {token}</p>\n        </>\n    );\n};\n\nexport default Home;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,SAAS,QAAQ,4BAA4B;AAGtD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAEf,MAAMC,KAAK,GAAGH,SAAS,CAAC,OAAO,CAAC;EAEhC,MAAM;IAAEI;EAAE,CAAC,GAAGL,cAAc,CAAC,CAAC;EAE9B,MAAMM,aAAa,GAAGA,CAAA,KAAM;IACxBC,KAAK,CAACL,SAAS,EAAE;MACbM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,SAASL,KAAK;MACnC;IACJ,CAAC,CAAC,CACGM,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACb;QACAC,YAAY,CAAC,OAAO,CAAC;QACrBA,YAAY,CAAC,WAAW,CAAC;QACzBA,YAAY,CAAC,YAAY,CAAC;QAC1BC,YAAY,CAAC,CAACC,KAAK,CAACC,OAAO,CAAC,CAAC;QAC7BC,aAAa,CAAC,EAAE,CAAC;QACjB;QACAC,QAAQ,CAACC,KAAK,CAAC;MACnB,CAAC,MAAM;QACH;QACA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAACV,IAAI,CAACW,IAAI,IAAI;UAChC,MAAM,IAAIC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC;QAChC,CAAC,CAAC;MACN;IACJ,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZ;MACAC,KAAK,CAACC,0BAA0B,GAAG,IAAI,GAAGF,KAAK,CAAC;MAChDG,OAAO,CAACC,GAAG,CAACF,0BAA0B,GAAG,IAAI,GAAGF,KAAK,CAAC;IAC1D,CAAC,CAAC;EACV,CAAC;EAED,oBACI3B,KAAA,CAAAgC,aAAA,CAAAhC,KAAA,CAAAiC,QAAA,qBACIjC,KAAA,CAAAgC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKhC,CAAC,CAAC,UAAU,CAAM,CAAC,eACxBP,KAAA,CAAAgC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,cAAY,EAACjC,KAAS,CAAC,eAC1BN,KAAA,CAAAgC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,iBAAe,EAACjC,KAAS,CAC9B,CAAC;AAEX,CAAC;AAED,eAAeD,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}