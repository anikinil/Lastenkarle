swagger: '2.0'
info:
  title: Booking Rest API
  description: This API provides all means to filter bikes and their availabilities to make a booking from a customer perspective. Furthermore, it provides information about the stores to book the bikes from. The user only needs to be logged-in for making an booking otherwise being logged-in is optional.
  version: v1
host: django
schemes:
  - http
basePath: /api/booking/v1
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Basic:
    type: basic
  TokenAuth:
    type: apiKey
    in: header
    name: Authorization
security:
  - TokenAuth: []
paths:
  /availabilities:
    get:
      operationId: availabilities_list
      summary: Get All Availability of a Bike
      description: Get the availabilities of all bikes.
      parameters: []
      responses:
        '200':
          description: List of availability status for the bike.
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  description: Availability ID.
                  type: integer
                from_date:
                  description: Start date of availability.
                  type: string
                until_date:
                  description: End date of availability.
                  type: string
                availability_status:
                  description: Availability status as an array of strings.
                  type: array
                  items:
                    type: string
        '401':
          description: Unauthorized - No token was provided.
      tags:
        - availabilities
    parameters: []
  /bikes:
    get:
      operationId: bikes_list
      summary: Get All Bikes
      description: Get a list of all bikes.
      parameters: []
      responses:
        '200':
          description: List of bikes.
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  description: Bike ID.
                  type: integer
                store:
                  description: ID of the store where the bike is available.
                  type: integer
                name:
                  description: Name of the bike.
                  type: string
                description:
                  description: Description of the bike.
                  type: string
                image:
                  description: URL of the bike's image.
                  type: string
                equipment:
                  description: Equipment array.
                  type: array
                  items:
                    type: string
        '401':
          description: Unauthorized - No token was provided.
      tags:
        - bikes
    parameters: []
  /bikes/{bike_id}:
    get:
      operationId: bikes_read
      summary: Get Bike Details
      description: Get details of a specific bike.
      parameters:
        - name: bike_id
          in: path
          description: ID of the bike to retrieve details for.
          type: integer
          required: true
      responses:
        '200':
          description: Details of the bike.
          schema:
            type: object
            properties:
              id:
                description: Bike ID.
                type: integer
              store:
                description: ID of the store where the bike is available.
                type: integer
              name:
                description: Name of the bike.
                type: string
              description:
                description: Description of the bike.
                type: string
              image:
                description: URL of the bike's image.
                type: string
              equipment:
                description: Equipment array.
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized - No token was provided.
        '404':
          description: Bike not found with the provided ID.
      tags:
        - bikes
    parameters:
      - name: bike_id
        in: path
        required: true
        type: string
  /bikes/{bike_id}/availability:
    get:
      operationId: bikes_availability_list
      summary: Get Availability of a Bike
      description: Get the availability of a specific bike.
      parameters:
        - name: bike_id
          in: path
          description: ID of the bike to retrieve availability information.
          type: integer
          required: true
      responses:
        '200':
          description: List of availabilities for the bike.
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  description: Availability ID.
                  type: integer
                from_date:
                  description: Start date of availability.
                  type: string
                until_date:
                  description: End date of availability.
                  type: string
                availability_status:
                  description: List of availability statuses.
                  type: array
                  items:
                    description: Availability status as an array of strings.
                    type: string
        '401':
          description: Unauthorized - No token was provided.
        '404':
          description: Bike not found with the provided ID.
      tags:
        - bikes
    parameters:
      - name: bike_id
        in: path
        required: true
        type: string
  /bikes/{bike_id}/booking:
    post:
      operationId: bikes_booking_create
      summary: Make a Booking
      description: Create a booking for a specific bike.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            required:
              - begin
              - end
            type: object
            properties:
              begin:
                description: Booking start date (YYYY-MM-DD).
                type: string
                format: date
              end:
                description: Booking end date (YYYY-MM-DD).
                type: string
                format: date
              comment:
                description: Additional comments for the booking.
                type: string
        - name: bike_id
          in: path
          description: ID of the bike to be booked.
          type: integer
          required: true
        - name: Authorization
          in: header
          required: true
          type: string
      security:
        - TokenAuth: []
      responses:
        '201':
          description: Booking created successfully.
        '400':
          description: Bad Request - Invalid input data.
        '401':
          description: Unauthorized - User not authenticated or not verified.
        '404':
          description: Bike not found with the provided ID.
      tags:
        - bikes
    parameters:
      - name: bike_id
        in: path
        required: true
        type: string

  /bikes/{bike_id}/store:
    get:
      operationId: bikes_store_list
      summary: Get Store Details by Bike
      description: Get details of the store where a specific bike belongs to.
      parameters:
        - name: bike_id
          in: path
          description: ID of the bike to retrieve the associated store details.
          type: integer
          required: true
      responses:
        '200':
          description: Details of the store where the bike is available.
          schema:
            type: object
            properties:
              region:
                description: Region of the store.
                type: string
              address:
                description: Address of the store.
                type: string
              phone_number:
                description: Phone number of the store.
                type: string
              email:
                description: Email of the store.
                type: string
              name:
                description: Name of the store.
                type: string
              prep_time:
                description: Preparation time of the store.
                type: string
              week_schedule:
                description: Weekday schedule of the store.
                type: string
        '401':
          description: Unauthorized - No token was provided.
        '404':
          description: Bike not found with the provided ID.
      tags:
        - bikes
    parameters:
      - name: bike_id
        in: path
        required: true
        type: string
  /region:
    get:
      operationId: region_list
      summary: Get All Regions
      description: Retrieve a list of all store regions.
      parameters: []
      responses:
        '200':
          description: List of all store regions.
          schema:
            type: array
            items:
              description: Store region.
              type: string
        '401':
          description: Unauthorized - No token was provided.
      tags:
        - region
    parameters: []
  /stores:
    get:
      operationId: stores_list
      summary: Get All Stores
      description: Retrieve a list of all stores.
      parameters: []
      responses:
        '200':
          description: List of all stores.
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  description: Store ID.
                  type: integer
                region:
                  description: Store region.
                  type: string
                address:
                  description: Store address.
                  type: string
                phone_number:
                  description: Store phone number.
                  type: string
                email:
                  description: Store email.
                  type: string
                name:
                  description: Store name.
                  type: string
                prep_time:
                  description: Store prep time.
                  type: string
        '401':
          description: Unauthorized - No token was provided.
      tags:
        - stores
    parameters: []
definitions:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        assurance_lvl:
          type: string
          enum: [N, L, M, H]
        year_of_birth:
          type: integer
        contact_data:
          type: string
          format: email
        is_staff:
          type: boolean
        is_superuser:
          type: boolean
        is_active:
          type: boolean
        verification_string:
          type: string
        preferred_username:
          type: string
        password:
          type: string
      example:
        id: 1
        username: johndoe
        assurance_lvl: L
        year_of_birth: 1990
        contact_data: johndoe@example.com
        is_staff: false
        is_superuser: false
        is_active: true
        verification_string: abcdef123456
        preferred_username: johndoe
        password: [hashed_password]

    UserStatus:
      type: object
      properties:
        id:
          type: integer
        user_status:
          type: string
      example:
        id: 1
        user_status: Customer

    Store:
      type: object
      properties:
        id:
          type: integer
        region:
          type: string
          enum: [KA, ETT, BAD, BRU, MAL]
        address:
          type: string
        phone_number:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        prep_time:
          type: string
        mon_opened:
          type: boolean
        mon_open:
          type: string
          format: time
        mon_close:
          type: string
          format: time
        tue_opened:
          type: boolean
        tue_open:
          type: string
          format: time
        tue_close:
          type: string
          format: time
        wed_opened:
          type: boolean
        wed_open:
          type: string
          format: time
        wed_close:
          type: string
          format: time
        thu_opened:
          type: boolean
        thu_open:
          type: string
          format: time
        thu_close:
          type: string
          format: time
        fri_opened:
          type: boolean
        fri_open:
          type: string
          format: time
        fri_close:
          type: string
          format: time
        sat_opened:
          type: boolean
        sat_open:
          type: string
          format: time
        sat_close:
          type: string
          format: time
        sun_opened:
          type: boolean
        sun_open:
          type: string
          format: time
        sun_close:
          type: string
          format: time
      example:
        id: 1
        region: KA
        address: 123 Main St, Karlsruhe
        phone_number: +1234567890
        email: store@example.com
        name: My Store
        prep_time: "00:00"
        mon_opened: true
        mon_open: "08:00"
        mon_close: "18:00"
        tue_opened: true
        tue_open: "08:00"
        tue_close: "18:00"
        wed_opened: true
        wed_open: "08:00"
        wed_close: "18:00"
        thu_opened: true
        thu_open: "08:00"
        thu_close: "18:00"
        fri_opened: true
        fri_open: "08:00"
        fri_close: "18:00"
        sat_opened: false
        sat_open: "08:00"
        sat_close: "18:00"
        sun_opened: false
        sun_open: "08:00"
        sun_close: "18:00"

    LocalData:
      type: object
      properties:
        id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        address:
          type: string
        date_of_verification:
          type: string
          format: date
        id_number:
          type: string
          maxLength: 3
      example:
        id: 1
        first_name: John
        last_name: Doe
        address: 456 Elm St, Springfield
        date_of_verification: "2023-09-17"
        id_number: ABC

    Equipment:
      type: object
      properties:
        id:
          type: integer
        equipment:
          type: string
      example:
        id: 1
        equipment: Bike Helmet

    Bike:
      type: object
      properties:
        id:
          type: integer
        store:
          type: integer
        name:
          type: string
        description:
          type: string
        image:
          type: string
        equipment:
          type: array
          items:
            type: integer
      example:
        id: 1
        store: 1
        name: Mountain Bike
        description: High-performance mountain bike
        image: mountain_bike.jpg
        equipment: [1, 2]

    AvailabilityStatus:
      type: object
      properties:
        id:
          type: integer
        availability_status:
          type: string
      example:
        id: 1
        availability_status: Available

    Availability:
      type: object
      properties:
        id:
          type: integer
        from_date:
          type: string
          format: date
        until_date:
          type: string
          format: date
        store:
          type: integer
        bike:
          type: integer
        availability_status:
          type: array
          items:
            type: integer
      example:
        id: 1
        from_date: "2023-09-17"
        until_date: "2023-09-30"
        store: 1
        bike: 1
        availability_status: [1, 2]

    BookingStatus:
      type: object
      properties:
        id:
          type: integer
        booking_status:
          type: string
      example:
        id: 1
        booking_status: Confirmed

    Booking:
      type: object
      properties:
        id:
          type: integer
        user:
          type: integer
        bike:
          type: integer
        begin:
          type: string
          format: date
        end:
          type: string
          format: date
        string:
          type: string
          maxLength: 5
        comment:
          type: string
        booking_status:
          type: array
          items:
            type: integer
        equipment:
          type: array
          items:
            type: integer
      example:
        id: 1
        user: 1
        bike: 1
        begin: "2023-09-20"
        end: "2023-09-25"
        string: ABCDE
        comment: Booking comment
        booking_status: [1, 2]
        equipment: [1, 2]
