# Generated by Django 4.2.4 on 2023-09-10 06:08

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('assurance_lvl', models.CharField(choices=[('N', 'None'), ('L', 'Low'), ('M', 'Medium'), ('H', 'High')], default='L', max_length=1, null=True)),
                ('year_of_birth', models.IntegerField(null=True)),
                ('contact_data', models.EmailField(max_length=254, null=True, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('verification_string', models.TextField(max_length=256, null=True)),
                ('username', models.TextField(null=True, unique=True)),
                ('preferred_username', models.TextField(null=True)),
                ('password', models.TextField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Availability_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('availability_status', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Bike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=256)),
                ('description', models.TextField(max_length=2048)),
                ('image', models.ImageField(upload_to='bikes')),
            ],
        ),
        migrations.CreateModel(
            name='Booking_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_status', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment', models.TextField(max_length=1024, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='User_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_status', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.TextField(choices=[('KA', 'Karlsruhe'), ('ETT', 'Ettlingen'), ('BAD', 'Baden-Baden'), ('BRU', 'Bruchsal'), ('MAL', 'Malsch')], max_length=3)),
                ('address', models.TextField(max_length=1000)),
                ('phone_number', models.TextField(max_length=256, null=True)),
                ('email', models.EmailField(max_length=256)),
                ('name', models.TextField(max_length=1000, unique=True)),
                ('prep_time', models.TimeField(default=datetime.time(0, 0))),
                ('mon_opened', models.BooleanField(default=False)),
                ('mon_open', models.TimeField(default=datetime.time(0, 0))),
                ('mon_close', models.TimeField(default=datetime.time(0, 0))),
                ('tue_opened', models.BooleanField(default=False)),
                ('tue_open', models.TimeField(default=datetime.time(0, 0))),
                ('tue_close', models.TimeField(default=datetime.time(0, 0))),
                ('wed_opened', models.BooleanField(default=False)),
                ('wed_open', models.TimeField(default=datetime.time(0, 0))),
                ('wed_close', models.TimeField(default=datetime.time(0, 0))),
                ('thu_opened', models.BooleanField(default=False)),
                ('thu_open', models.TimeField(default=datetime.time(0, 0))),
                ('thu_close', models.TimeField(default=datetime.time(0, 0))),
                ('fri_opened', models.BooleanField(default=False)),
                ('fri_open', models.TimeField(default=datetime.time(0, 0))),
                ('fri_close', models.TimeField(default=datetime.time(0, 0))),
                ('sat_opened', models.BooleanField(default=False)),
                ('sat_open', models.TimeField(default=datetime.time(0, 0))),
                ('sat_close', models.TimeField(default=datetime.time(0, 0))),
                ('sun_opened', models.BooleanField(default=False)),
                ('sun_open', models.TimeField(default=datetime.time(0, 0))),
                ('sun_close', models.TimeField(default=datetime.time(0, 0))),
                ('store_flag', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='db_model.user_status')),
            ],
        ),
        migrations.CreateModel(
            name='OIDCLoginData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue', models.TextField(null=True)),
                ('subject', models.TextField(null=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LocalData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.TextField(null=True)),
                ('last_name', models.TextField(null=True)),
                ('address', models.TextField(null=True)),
                ('date_of_verification', models.DateField(null=True)),
                ('id_number', models.TextField(max_length=3, null=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin', models.DateField(null=True)),
                ('end', models.DateField(null=True)),
                ('string', models.CharField(max_length=5, null=True, unique=True)),
                ('comment', models.TextField(default='', max_length=1024)),
                ('bike', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_model.bike')),
                ('booking_status', models.ManyToManyField(to='db_model.booking_status')),
                ('equipment', models.ManyToManyField(to='db_model.equipment')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='bike',
            name='equipment',
            field=models.ManyToManyField(to='db_model.equipment'),
        ),
        migrations.AddField(
            model_name='bike',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db_model.store'),
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField(default=datetime.date(1000, 1, 1))),
                ('until_date', models.DateField(default=datetime.date(5000, 1, 1))),
                ('availability_status', models.ManyToManyField(to='db_model.availability_status')),
                ('bike', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db_model.bike')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db_model.store')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='user_status',
            field=models.ManyToManyField(to='db_model.user_status'),
        ),
    ]
